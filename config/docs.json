{
  "files": [
    {
      "meta": {
        "title": "Overview",
        "weight": 0,
        "showInNav": false
      },
      "content": "\n## Welcome to AsyncAPI Docs! \n\nAsyncAPI is an open source initiative that seeks to improve the current state of Event-Driven Architectures (EDA). Our long-term goal is to make working with EDAs as easy as working with REST APIs. That goes from documentation to code generation, from discovery to event management, and beyond.\n\n<!-- [EDA Diagram]() -->\n\n## Explore the Docs\n\n<DocsCards />\n",
      "toc": [
        {
          "content": "Welcome to AsyncAPI Docs!",
          "slug": "welcome-to-asyncapi-docs",
          "lvl": 2,
          "i": 0,
          "seen": 0
        },
        {
          "content": "Explore the Docs",
          "slug": "explore-the-docs",
          "lvl": 2,
          "i": 1,
          "seen": 0
        }
      ],
      "slug": "/docs",
      "filePath": "pages/docs/index.md",
      "sectionTitle": "Welcome"
    },
    {
      "files": [
        {
          "meta": {
            "title": "Overview",
            "weight": 1
          },
          "content": "\n## Concepts: Define AsyncAPI features and capabilities\n\nWelcome to AsyncAPI **Concepts**! Our Concepts section will define the concepts of AsyncAPI features and capabilities.\n\n<Remember>\n\n## Contribute to AsyncAPI Concepts\nCode isn't the only way to contribute to OSS; Dev Docs are a **huge** help that benefit the entire OSS ecosystem. At AsyncAPI, we value Doc contributions as much as every other type of contribution. ‚ù§Ô∏è\n\nTo get started as a Docs contributor:\n1. Familiarize yourself with our [project's Contribution Guide](https://github.com/asyncapi/community/blob/master/CONTRIBUTING.md) and our [Code of Conduct](https://github.com/asyncapi/.github/blob/master/CODE_OF_CONDUCT.md).\n2. Head over to our [AsyncAPI Docs Board](https://github.com/orgs/asyncapi/projects/8).\n3. Pick an issue you would like to contribute to and leave a comment introducing yourself. This is also the perfect place to leave any questions you may have on how to get started. \n4. If there is no work done in that Docs issue yet, feel free to open a PR and get started!\n\n### Docs contributor questions\nDo you have a documentation contributor question and you're wondering how to tag me into a GitHub discussion or PR? Never fear!\n\nTag me in your AsyncAPI Doc PRs or [GitHub Discussions](https://github.com/asyncapi/community/discussions/categories/docs) via my GitHub handle, [`alequetzalli`](https://github.com/alequetzalli) üêô.\n</Remember>",
          "toc": [
            {
              "content": "Concepts: Define AsyncAPI features and capabilities",
              "slug": "concepts-define-asyncapi-features-and-capabilities",
              "lvl": 2,
              "i": 0,
              "seen": 0
            },
            {
              "content": "Contribute to AsyncAPI Concepts",
              "slug": "contribute-to-asyncapi-concepts",
              "lvl": 2,
              "i": 1,
              "seen": 0
            },
            {
              "content": "Docs contributor questions",
              "slug": "docs-contributor-questions",
              "lvl": 3,
              "i": 2,
              "seen": 0
            }
          ],
          "slug": "/docs/concepts",
          "filePath": "pages/docs/concepts/index.md",
          "sectionTitle": "Concepts"
        }
      ],
      "section": {
        "title": "Concepts",
        "weight": 1,
        "slug": "/docs/concepts"
      }
    },
    {
      "files": [
        {
          "meta": {
            "title": "Overview",
            "weight": 2
          },
          "content": "\n## Tutorials: Learn how AsyncAPI works\n\nWelcome to AsyncAPI **Tutorials**! Our Tutorials section teaches beginner processes with AsyncAPI by doing.\n\n\n<Remember>\n\n## Contribute to AsyncAPI Tutorials\nCode isn't the only way to contribute to OSS; Dev Docs are a **huge** help that benefit the entire OSS ecosystem. At AsyncAPI, we value Doc contributions as much as every other type of contribution. ‚ù§Ô∏è\n\nTo get started as a Docs contributor:\n1. Familiarize yourself with our [project's Contribution Guide](https://github.com/asyncapi/community/blob/master/CONTRIBUTING.md) and our [Code of Conduct](https://github.com/asyncapi/.github/blob/master/CODE_OF_CONDUCT.md).\n2. Head over to our [AsyncAPI Docs Board](https://github.com/orgs/asyncapi/projects/8).\n3. Pick an issue you would like to contribute to and leave a comment introducing yourself. This is also the perfect place to leave any questions you may have on how to get started. \n4. If there is no work done in that Docs issue yet, feel free to open a PR and get started!\n\n### Docs contributor questions\nDo you have a documentation contributor question and you're wondering how to tag me into a GitHub discussion or PR? Never fear!\n\nTag me in your AsyncAPI Doc PRs or [GitHub Discussions](https://github.com/asyncapi/community/discussions/categories/docs) via my GitHub handle, [`alequetzalli`](https://github.com/alequetzalli) üêô.\n</Remember>",
          "toc": [
            {
              "content": "Tutorials: Learn how AsyncAPI works",
              "slug": "tutorials-learn-how-asyncapi-works",
              "lvl": 2,
              "i": 0,
              "seen": 0
            },
            {
              "content": "Contribute to AsyncAPI Tutorials",
              "slug": "contribute-to-asyncapi-tutorials",
              "lvl": 2,
              "i": 1,
              "seen": 0
            },
            {
              "content": "Docs contributor questions",
              "slug": "docs-contributor-questions",
              "lvl": 3,
              "i": 2,
              "seen": 0
            }
          ],
          "slug": "/docs/tutorials",
          "filePath": "pages/docs/tutorials/index.md",
          "sectionTitle": "Tutorials"
        },
        {
          "files": [
            {
              "meta": {
                "title": "Getting Started",
                "date": "2019-02-16T12:56:52.000Z",
                "weight": 2,
                "showInNav": false,
                "aliases": [
                  "/v1/guide/",
                  "/v1/guide/index.html"
                ]
              },
              "content": "\n## Getting Started\n\nAsyncAPI is an open source initiative that seeks to improve the current state of Event-Driven Architectures (EDA). Our long-term goal is to make working with EDAs as easy as it is to work with REST APIs. That goes from documentation to code generation, from discovery to event management. Most of the processes you apply to your REST APIs nowadays would be applicable to your event-driven/asynchronous APIs too.\n\nTo make this happen, the first step has been to create a specification that allows **developers, architects, and product managers** to define the interfaces of an async API. Much like [OpenAPI (fka Swagger)](https://github.com/OAI/OpenAPI-Specification) does for REST APIs.\n\n**The AsyncAPI specification settles the base for a greater and better tooling ecosystem for EDA's**.\n\nIf you are looking for a solution to automate and formalize the documentation or code generation of your event-driven (micro)services, you are in the right place. Likewise, if you are aiming to establish solid standards for your events and improve the governance of your asynchronous APIs, welcome to your new home.\n\n---\n\n<DocsButton\n suggestions={[\n   {\n      href:'/docs/getting-started/event-driven-architectures',\n      type: 'next',  \n      title: 'Event-Driven Architectures',\n   }\n ]}\n/>\n",
              "toc": [
                {
                  "content": "Getting Started",
                  "slug": "getting-started",
                  "lvl": 2,
                  "i": 0,
                  "seen": 0
                }
              ],
              "slug": "/docs/tutorials/getting-started",
              "filePath": "pages/docs/tutorials/getting-started/index.md",
              "sectionTitle": "Getting Started"
            },
            {
              "meta": {
                "title": "Event-Driven Architectures",
                "date": "2019-04-01T09:56:52.000Z",
                "menu": {
                  "docs": {
                    "parent": "getting-started"
                  }
                },
                "weight": 10
              },
              "content": "\nMany developers, architects, and product managers have used REST APIs and are familiar with the synchronous communication paradigm. You make a request and wait for the response. This is exactly how the world wide web works. You enter a URL (e.g., www.google.com) in the browser's address bar and it sends a request to the server. The server then sends the response with the website content. **The web is the greatest implementation of a REST API.**\n\nHowever, there are certain situations where you don't really need a response from the server. In most cases it's only important to have some confirmation that the request was received. This is also called _\"fire and forget\"_, and it's very useful when you just want to communicate or inform that \"something happened.\" You're not requesting or asking for anything, thus you don't need a response.  \n\nSome examples of this can be:\n* A user just signed up.\n* You have a new follower.\n* Your fridge is almost empty.\n\nAlong with the event, you may also want to send _extra information_. For instance:\n\n* A user just signed up: here's the user information (e.g., name, email, age, etc.)\n* You have a new follower: here are the follower details (e.g., username, name, picture, etc.)\n* Your fridge is almost empty: here's the percentage of \"emptiness\" or available volume (e.g. 23%)\n\nThis extra information is often referred to as the _event payload_ or _message payload_.\n\nAn Event-Driven Architecture (EDA) uses events to trigger and communicate between services and is common in modern applications built with microservices. An event is a change in state, or an update, like adding a shopping item in a cart on an e-commerce website.\n\n## Core concepts\n\n![](/img/diagrams/simple-event-driven.png)\n\nIn most cases, EDAs are broker-centric, as seen in the diagram above. There are some new concepts in that diagram, so let's go through them now.\n\n### Message broker\n\nA message broker (or _\"broker\"_) is a piece of infrastructure in charge of receiving messages and delivering them to those who have shown interest. They often store messages until they are delivered, which makes EDAs very resilient to failures. Examples of brokers are [RabbitMQ](https://rabbitmq.com), [Apache Kafka](http://kafka.apache.org/), [Solace](http://solace.com), etc.\n\n### Publisher/Subscriber\n\nA publisher (a.k.a. _producer_) is an application that sends messages to the _broker_.\n\nA subscriber (a.k.a. _consumer_) is an application that connects to the _broker_, manifests an interest in a certain type of messages, and leaves the connection open so the _broker_ can push messages to them.\n\n### Message\n\nA message is a piece of information that is sent by publishers to the broker, and received by all interested subscribers. Messages can contain anything, and are frequently catalogued as _events_ and _commands_. As you saw above, _events_ communicate a fact that occurred. On the other hand, _commands_ are very similar to _requests_ in REST APIs. They instruct the subscribers to \"do this.\"\n\n**To be precise, _events_ and _commands_ share the same structure, but differ conceptually.**\n\n### Channels\n\nOne detail that might pass unnoticed from the diagram above is the existence of _channels_. All _brokers_ support communication through multiple channels. The industry doesn't have a common term for them, so you may see them referred to as _topics_, _routing keys_, _event types_, etc.\n\nA channel is usually assigned a name or identifier (e.g., `user_signed_up`) and it is often good practice to send a single type of message through a particular channel. Think about TV or radio channels; the BBC only broadcasts its information through an assigned channel. If the broadcasters (publishers) didn't respect that rule, you (the subscriber) would only see and hear interference.\n\n## Why \"event-driven\" and not \"message-driven\"?\n\nYou will find both used interchangeably, although they are not exactly the same. You will even find _\"message-based\"_ and _\"event-based\"_. In practice, chances are they all refer to the same thing.\n\nTheoretically, _\"message-driven\"_ is the most generic term -meaning you may use events and commands- while _event-driven_ means that it's purely about events.\n\nHowever, that's not always the case, as Martin Fowler explains in his\ntalk [\"the many meanings of Event-Driven Architecture\"](https://www.youtube.com/watch?v=STKCRSUsyP0).\n\n## Conclusion\n\nWe've seen what an Event-Driven Architecture is, how it works, and explained its components. AsyncAPI defines and documents each of these components. We'll cover each of the components during the rest of this guide. To continue, choose your next step:\n\n---\n\n<DocsButton\n  suggestions={[\n    {\n      href: '/docs/getting-started/',\n      title: 'Introduction',\n      type:'back',\n    },\n    {\n      href: '/docs/getting-started/coming-from-openapi',\n      title: 'Coming from OpenAPI',\n      type:'next',\n    }\n  ]}\n/>\n",
              "toc": [
                {
                  "content": "Core concepts",
                  "slug": "core-concepts",
                  "lvl": 2,
                  "i": 0,
                  "seen": 0
                },
                {
                  "content": "Message broker",
                  "slug": "message-broker",
                  "lvl": 3,
                  "i": 1,
                  "seen": 0
                },
                {
                  "content": "Publisher/Subscriber",
                  "slug": "publishersubscriber",
                  "lvl": 3,
                  "i": 2,
                  "seen": 0
                },
                {
                  "content": "Message",
                  "slug": "message",
                  "lvl": 3,
                  "i": 3,
                  "seen": 0
                },
                {
                  "content": "Channels",
                  "slug": "channels",
                  "lvl": 3,
                  "i": 4,
                  "seen": 0
                },
                {
                  "content": "Why \"event-driven\" and not \"message-driven\"?",
                  "slug": "why-event-driven-and-not-message-driven",
                  "lvl": 2,
                  "i": 5,
                  "seen": 0
                },
                {
                  "content": "Conclusion",
                  "slug": "conclusion",
                  "lvl": 2,
                  "i": 6,
                  "seen": 0
                }
              ],
              "slug": "/docs/tutorials/getting-started/event-driven-architectures",
              "filePath": "pages/docs/tutorials/getting-started/event-driven-architectures.md",
              "sectionTitle": "Getting Started"
            },
            {
              "meta": {
                "title": "Coming from OpenAPI",
                "date": "2019-04-01T09:56:52.000Z",
                "menu": {
                  "docs": {
                    "parent": "getting-started"
                  }
                },
                "weight": 20
              },
              "content": "\nIf you're coming from OpenAPI, you must know that AsyncAPI [started as an adaptation of the OpenAPI specification](https://medium.com/asyncapi/whats-new-on-asyncapi-lots-2d9019a1869d). We wanted to have as much compatibility as possible between the two so users could reuse parts in both.\n\nYou'll find lots of similarities between OpenAPI and AsyncAPI. Just bear in mind that in the world of event-driven architectures, you have more than one protocol and therefore some things are different. Check out the following comparison chart, inspired by [Darrel Miller's blog post](https://www.openapis.org/news/blogs/2016/10/tdc-structural-improvements-explaining-30-spec-part-2):\n\nimport OpenAPIComparison from '../../../../components/OpenAPIComparison'\n\n<OpenAPIComparison className=\"my-8\" />\n\nAside from structural differences you must know that:\n\n1. AsyncAPI is compatible with OpenAPI schemas.\n1. Message payload in AsyncAPI can be any value, not just an AsyncAPI/OpenAPI schema. For instance, it could be an Avro schema.\n1. [AsyncAPI server object](/docs/specifications/2.2.0/#serverObject) is almost identical to its OpenAPI counterpart with the exception that `scheme` has been renamed to `protocol` and AsyncAPI introduces a new property called `protocolVersion`.\n1. OpenAPI path parameters and [AsyncAPI channel parameters](/docs/specifications/2.2.0/#parameterObject) are a bit different since AsyncAPI doesn't have the notion of \"query\" and \"cookie\", and header parameters can be defined in the [message object](/docs/specifications/2.2.0/#messageObject). Therefore, AsyncAPI channel parameters are the equivalent of OpenAPI path parameters.\n\n## Conclusion\n\nAs you have seen above, OpenAPI and AsyncAPI are very similar. In a real-world environment, systems don't have just REST APIs or events but a mix of both. Most of the time, the information flowing in the events is very similar to the one the REST APIs have to handle in requests and responses; thus, being able to reuse schemas is a huge win.\n\nEnough reading, it's time to get your hands dirty with some actual examples. Let's learn how to create an AsyncAPI document that defines a \"Hello world\" application.\n\n---\n\n<DocsButton\n  suggestions={[\n    {\n      href: '/docs/getting-started/event-driven-architectures',\n      title: 'Event-Driven Architectures',\n      type:'back',\n    },\n    {\n      href: '/docs/getting-started/hello-world',\n      title: 'Hello World',\n      type:'next',\n    }\n  ]}\n/>\n",
              "toc": [
                {
                  "content": "Conclusion",
                  "slug": "conclusion",
                  "lvl": 2,
                  "i": 0,
                  "seen": 0
                }
              ],
              "slug": "/docs/tutorials/getting-started/coming-from-openapi",
              "filePath": "pages/docs/tutorials/getting-started/coming-from-openapi.md",
              "sectionTitle": "Getting Started"
            },
            {
              "meta": {
                "title": "Hello world",
                "date": "2019-04-01T09:56:52.000Z",
                "menu": {
                  "docs": {
                    "parent": "getting-started"
                  }
                },
                "weight": 30
              },
              "content": "\nLet's define an application that's capable of receiving a \"hello {name}\" message.\n\n<CodeBlock>\n{`asyncapi: 2.2.0\ninfo:\n  title: Hello world application\n  version: '0.1.0'\nchannels:\n  hello:\n    publish:\n      message:\n        payload:\n          type: string\n          pattern: '^hello .+$'`}\n</CodeBlock>\n\nLet's get into the details of this sample specification:\n\n<CodeBlock highlightedLines={[1]}>\n{`asyncapi: 2.2.0\ninfo:\n  title: Hello world application\n  version: '0.1.0'\nchannels:\n  hello:\n    publish:\n      message:\n        payload:\n          type: string\n          pattern: '^hello .+$'`}\n</CodeBlock>\n\nThe first line of the specification starts with the document type `asyncapi` and the version (2.2.0). This line doesn't have to be the first one, but it's a recommended practice.\n\n<CodeBlock highlightedLines={[2,3,4]}>\n{`asyncapi: 2.2.0\ninfo:\n  title: Hello world application\n  version: '0.1.0'\nchannels:\n  hello:\n    publish:\n      message:\n        payload:\n          type: string\n          pattern: '^hello .+$'`}\n</CodeBlock>\n\nThe `info` object contains the minimum required information about the application. It contains the `title`, which is a memorable name for the API, and the `version`. While it's not mandatory, it's strongly recommended to change the version whenever you make changes to the API.\n\n<CodeBlock highlightedLines={[5,6,7,8,9,10,11]}>\n{`asyncapi: 2.2.0\ninfo:\n  title: Hello world application\n  version: '0.1.0'\nchannels:\n  hello:\n    publish:\n      message:\n        payload:\n          type: string\n          pattern: '^hello .+$'`}\n</CodeBlock>\n\nThe `channels` section of the specification houses all of the mediums where messages flow through. For example, some systems use `topic`, `event name` or `routing key`. Different kinds of information flow through each channel similar to the analogy of TV channels.\n\nIn this example, you only have one channel called `hello`. The sample application subscribes to this channel to receive `hello {name}` messages.\n\n<CodeBlock highlightedLines={[6,7,8,9]}>\n{`asyncapi: 2.2.0\ninfo:\n  title: Hello world application\n  version: '0.1.0'\nchannels:\n  hello:\n    publish:\n      message:\n        payload:\n          type: string\n          pattern: '^hello .+$'`}\n</CodeBlock>\n\nYou can read the highlighted lines as:\n> This is the `payload` of the `message` that the `Hello world application` is subscribed to. You can `publish` the `message` to the `hello` channel and the `Hello world application` will receive it.\n\n<CodeBlock highlightedLines={[9,10,11]}>\n{`asyncapi: 2.2.0\ninfo:\n  title: Hello world application\n  version: '0.1.0'\nchannels:\n  hello:\n    publish:\n      message:\n        payload:\n          type: string\n          pattern: '^hello .+$'`}\n</CodeBlock>\n\nThe `payload` object defines how the message must be structured. In this example, the message must be a string and match the given regular expression in the format `hello {name}` string.\n\n---\n\n<DocsButton\n  suggestions={[\n    {\n      href: '/docs/getting-started/coming-from-openapi',\n      title: 'Coming from OpenAPI',\n      type:'back',\n    },\n    {\n      href: '/docs/getting-started/asyncapi-documents',\n      title: 'AsyncAPI Documents',\n      type:'next',\n    }\n  ]}\n/>",
              "toc": [],
              "slug": "/docs/tutorials/getting-started/hello-world",
              "filePath": "pages/docs/tutorials/getting-started/hello-world.md",
              "sectionTitle": "Getting Started"
            },
            {
              "meta": {
                "title": "AsyncAPI documents",
                "date": "2019-04-01T09:56:52.000Z",
                "menu": {
                  "docs": {
                    "parent": "getting-started"
                  }
                },
                "weight": 101
              },
              "content": "\nAn AsyncAPI document is a file that defines and annotates the different components of **a specific Event-Driven API**.\n\nThe format of the file must be JSON or YAML; however, only the subset of YAML that matches the JSON capabilities is allowed.\n\n<CodeBlock>\n{`asyncapi: 2.2.0\ninfo:\n  title: Example\n  version: 0.1.0\nchannels:\n  user/signedup:\n    subscribe:\n      message:\n        description: An event describing that a user just signed up.\n        payload:\n          type: object\n          additionalProperties: false\n          properties:\n            fullName:\n              type: string\n            email:\n              type: string\n              format: email\n            age:\n              type: integer\n              minimum: 18`}\n</CodeBlock>\n\nThe AsyncAPI document is a machine-readable definition of your Event-Driven API. This document can be used afterward to generate documentation and code, validate the messages your application receives, and even apply API management policies to your messages before they arrive to your broker.\n\nYour API documentation is now machine-readable ‚Äìeasily parseable by code‚Äî so the myriad of useful applications is endless.\n\n---\n\n<DocsButton\n  suggestions={[\n    {\n      href: '/docs/getting-started/hello-world',\n      title: 'Hello World',\n      type:'back',\n    },\n    {\n      href: '/docs/getting-started/servers',\n      title: 'Servers',\n      type:'next',\n    }\n  ]}\n/>\n",
              "toc": [],
              "slug": "/docs/tutorials/getting-started/asyncapi-documents",
              "filePath": "pages/docs/tutorials/getting-started/asyncapi-documents.md",
              "sectionTitle": "Getting Started"
            },
            {
              "meta": {
                "title": "Servers",
                "date": "2019-04-03T09:56:52.000Z",
                "menu": {
                  "docs": {
                    "parent": "getting-started"
                  }
                },
                "weight": 110
              },
              "content": "\nIn the previous lesson, you learned how to create the definition of a simple [Hello World application](/docs/getting-started/hello-world). Let's take it from there.\n\nIn this article, you'll learn how to add `servers` to your AsyncAPI document. Adding and defining servers is useful, because it specifies where and how to connect. The connection facilitates where to send and receive messages.\n\n<CodeBlock highlightedLines={[5,6,7,8,9]}>\n{`asyncapi: 2.2.0\ninfo:\n  title: Hello world application\n  version: '0.1.0'\nservers:\n  production:\n    url: broker.mycompany.com\n    protocol: amqp\n    description: This is \"My Company\" broker.\nchannels:\n  hello:\n    publish:\n      message:\n        payload:\n          type: string\n          pattern: '^hello .+$'`}\n</CodeBlock>\n\nYou've now added a new section called `servers` in your AsyncAPI document.\n\nYou might have noticed that our example mentions `amqp`. This protocol is very common and was popularized by RabbitMQ (among others). We picked `amqp` for our example, but you can use any protocol. The most common protocols used are `mqtt` (widely adopted by the Internet of Things and mobile apps), `kafka` (popular for its streaming solution), `ws` (WebSockets are frequently used in browsers), and `http` (used in HTTP streaming APIs).\n\n<Remember>\n\nThe `servers` section defines where your application should connect to start sending and receiving messages. \n\n1. If you are using a <a href=\"https://dev.to/fmvilas/event-driven-architectures--asyncapi-db7\" target=\"_blank\" className=\"text-secondary-600 font-medium hover:underline\">broker-centric architecture</a> such as Kafka or RabbitMQ, usually you specify the URL of the broker. \n2. If you have the classic client-server model such as for REST APIs, then your `server` should be the URL of the server.\n\n</Remember>\n\n## Conclusion\n\nNow you know where `Hello world application` connects to and you can start receiving `hello {name}` messages.\n\nIn the next chapter, you'll learn how to add security requirements to your server.\n\n---\n\n<DocsButton\n  suggestions={[\n    {\n      href: '/docs/getting-started/asyncapi-documents',\n      title: 'AsyncAPI Documents',\n      type:'back',\n    },\n    {\n      href: '/docs/getting-started/security',\n      title: 'Security',\n      type:'next',\n    }\n  ]}\n/>",
              "toc": [
                {
                  "content": "Conclusion",
                  "slug": "conclusion",
                  "lvl": 2,
                  "i": 0,
                  "seen": 0
                }
              ],
              "slug": "/docs/tutorials/getting-started/servers",
              "filePath": "pages/docs/tutorials/getting-started/servers.md",
              "sectionTitle": "Getting Started"
            },
            {
              "meta": {
                "title": "Adding security",
                "date": "2019-04-16T09:56:52.000Z",
                "menu": {
                  "docs": {
                    "parent": "getting-started"
                  }
                },
                "weight": 150
              },
              "content": "\nIn production environments, your API may have to access a message broker that's protected by some auth mechanisms. \n\nSome examples of these are:\n* User & password\n* Certificates\n* API keys\n* OAuth 2\n\nIf you're using AsyncAPI to define an API that connects to a message broker, you'll most probably make use of user/password or certificates. Traditionally, message brokers are infrastructure pieces that serve an internal purpose and they're not exposed to the public. That's why their security mechanisms are also simpler than what we're used to with REST APIs. However, AsyncAPI also helps you define your HTTP streaming APIs and therefore it supports more sophisticated mechanisms like OAuth2 or OpenID.\n\nContinuing with the `hello world` application example, let's learn how to define a simple security scheme (mechanism) for it.\n\n<CodeBlock highlightedLines={[10,11,42,43,44]}>\n{`asyncapi: '2.2.0'\ninfo:\n  title: Hello world application\n  version: '0.1.0'\nservers:\n  production:\n    url: broker.mycompany.com\n    protocol: amqp\n    description: This is \"My Company\" broker.\n    security:\n      - user-password: []\nchannels:\n  hello:\n    publish:\n      message:\n        $ref: '#/components/messages/hello-msg'\n  goodbye:\n    publish:\n      message:\n        $ref: '#/components/messages/goodbye-msg'\ncomponents:\n  messages:\n    hello-msg:\n      payload:\n        type: object\n        properties:\n          name:\n            type: string\n          sentAt:\n            $ref: '#/components/schemas/sent-at'\n    goodbye-msg:\n      payload:\n        type: object\n        properties:\n          sentAt:\n            $ref: '#/components/schemas/sent-at'\n  schemas:\n    sent-at:\n      type: string\n      description: The date and time a message was sent.\n      format: datetime\n  securitySchemes:\n    user-password:\n      type: userPassword`}\n</CodeBlock>\n\nThe example above shows how to specify that your server (a Kafka broker) requires a user and a password to establish a connection. Let's break this down:\n\n1. There's a new property in the server object called `security`. It's an array and can contain multiple security mechanisms. You chose to add one called \"user-password\". This is simply a memorable name that you give to this `security` scheme. Whatever name you choose, it must be defined in the `components/securitySchemes` section. You might have also noticed its value is an empty array. That's because some security schemes allow for extra configuration. Since this is not the case in this example, leave the array empty.\n2. We've added a new section called `securitySchemes` under `components`. Inside it, you can find the definition of your `user-password` mechanism. This section makes it clear that you're speaking about a `user/password` mechanism, which is the `type: userPassword` in line 44.\n\n<Remember title=\"Hint\">\n\nThere are many more security schemes. Learn more about them <Link href=\"/docs/specifications/2.2.0/#securitySchemeObject\" passHref><a className=\"text-teal-600 font-medium hover:underline cursor-pointer\">here</a></Link>.\n\n</Remember>\n\n## Conclusion\n\nYou're now able to define what security mechanisms your application needs to connect to the server. You've seen how to define the requirement of a user and a password, which is the most common use case.\n\nAt this point, you know AsyncAPI well enough to create a simple `Hello world application`. However, real use cases are more complicated than that. The following tutorials can teach you how to create real-world use cases, from zero to production.\n\n---\n\n<DocsButton\n  suggestions={[\n    {\n      href: '/docs/getting-started/servers',\n      title: 'Servers',\n      type:'back',\n    },\n    {\n      href: '/docs/tutorials',\n      title: 'Tutorials Overview',\n      type:'next',\n    }\n  ]}\n/>",
              "toc": [
                {
                  "content": "Conclusion",
                  "slug": "conclusion",
                  "lvl": 2,
                  "i": 0,
                  "seen": 0
                }
              ],
              "slug": "/docs/tutorials/getting-started/security",
              "filePath": "pages/docs/tutorials/getting-started/security.md",
              "sectionTitle": "Getting Started"
            }
          ],
          "section": {
            "title": "Getting Started",
            "weight": 10,
            "slug": "/docs/tutorials/getting-started"
          }
        },
        {
          "meta": {
            "title": "Streetlights",
            "weight": 100,
            "description": "In this tutorial, you'll get started with code samples from an IoT real-world use case. Let's pretend you have a company called Smarty Lighting that engineers smart-city lighting systems."
          },
          "content": "\nIn this tutorial, you get started with actual code and a sample real-world use case. Let's pretend you have a company called Smarty Lighting and you install smart-city streetlight lighting systems.\n\n# Streetlights System Description\n\nYou want to create a system capable of turning on/off the streetlights depending on the environmental conditions of each of them:\n\n- You're going to implement an event-driven architecture, with a Message Broker in its \"center\".\n- Streetlights will publish information about their environmental lighting to the broker.\n- Your application will connect to the broker and receive a stream of events from all the streetlights that are reporting their conditions.\n- Based off the events, your application can make a decision regarding turning the streetlight off.\n- Your application is not aware of how many streetlights are publishing events - it just connects to the broker and receives all events\n\n# Installation Guide\n\nYou'll use Node.js to code the APIs and Mosquitto as the message broker. The selected technology is irrelevant here, since everything explained in this tutorial is applicable to any other programming language and message brokers.\n\nBefore you proceed to the next stage, you'll need to download a few things:\n\n1. Install [Node.js](https://nodejs.org/en/download/) (v15 or newer).\n\n2. Install Git based on your Operating System (OS):\n- [Install Git on MacOs](https://git-scm.com/download/mac)\n- [Install Git on Windows](https://git-scm.com/download/win)\n- [Install Git on Linux](https://git-scm.com/download/linux)\n\n# Creating the AsyncAPI file\n\nLet's start by creating an AsyncAPI file to describe your API. It will help you generate the code and the documentation later on.\n\n<CodeBlock>\n{`asyncapi: '2.2.0'\ninfo:\n  title: Streetlights API\n  version: '1.0.0'\n  description: |\n    The Smartylighting Streetlights API allows you\n    to remotely manage the city lights.\n  license:\n    name: Apache 2.0\n    url: 'https://www.apache.org/licenses/LICENSE-2.0'\nservers:\n  mosquitto:\n    url: mqtt://test.mosquitto.org\n    protocol: mqtt\nchannels:\n  light/measured:\n    publish:\n      summary: Inform about environmental lighting conditions for a particular streetlight.\n      operationId: onLightMeasured\n      message:\n        name: LightMeasured\n        payload:\n          type: object\n          properties:\n            id:\n              type: integer\n              minimum: 0\n              description: Id of the streetlight.\n            lumens:\n              type: integer\n              minimum: 0\n              description: Light intensity measured in lumens.\n            sentAt:\n              type: string\n              format: date-time\n              description: Date and time when the message was sent.`}\n</CodeBlock>\n\nLet's break it down into pieces:\n\n<CodeBlock>\n{`asyncapi: '2.2.0'\ninfo:\n  title: Streetlights API\n  version: '1.0.0'\n  description: |\n    The Smartylighting Streetlights API allows you\n    to remotely manage the city lights.\n  license:\n    name: Apache 2.0\n    url: 'https://www.apache.org/licenses/LICENSE-2.0'`}\n</CodeBlock>\n\n- The `asyncapi` field indicates you use the AsyncAPI version 2.2.0.\n- The `info` field holds information about the API, such as its name, version, description, and license.\n\nNow lets move all the way to the `channels` section. This section is used to describe the event names your API will be publishing and/or subscribing to.\n\n<CodeBlock>\n{`channels:\n  light/measured:\n    publish:\n      summary: Inform about environmental lighting conditions for a particular streetlight.\n      operationId: onLightMeasured`}\n</CodeBlock>\n\nIn this example, `light/measured` is the channel name the Streetlight API will `subscribe` to (i.e, to interact with the Streetlight API you `publish` to the broker). The `operationId` property, describes what is the name of function or method that takes care of this functionality in the generated code. The `payload` property is used to understand how the event should look like when publishing to that channel:\n\n<CodeBlock>\n{`      payload:\n        type: object\n        properties:\n          id:\n            type: integer\n            minimum: 0\n            description: Id of the streetlight.\n          lumens:\n            type: integer\n            minimum: 0\n            description: Light intensity measured in lumens.\n          sentAt:\n            type: string\n            format: date-time\n            description: Date and time when the message was sent.`}\n</CodeBlock>\n\nThe `Payload` property defines the content of the event using AsyncAPI schemas. It means that your event payload should contain an `id` and a `lumens` property ‚Äîwhich are integers bigger than zero‚Äî, and a `sentAt` property that should be a string containing a date and time.\n\n> JSON Schema Draft 07 is 100% compatible with AsyncAPI schemas.\n\nCool! You're done with your AsyncAPI file! Now let's get into generating code.\n\n# Generating code\n\nTo generate your code, you'll use the [AsyncAPI Generator](https://github.com/asyncapi/generator) Node.js template.\n\n### 1. Install the generator to use it as a command-line tool\n<CodeBlock language=\"bash\">\n{`npm install -g @asyncapi/generator`}\n</CodeBlock>\n\n### 2. Create a directory for your projects and enter it:\n<CodeBlock language=\"bash\">\n{`mkdir streetlights && cd \"$_\"`}\n</CodeBlock>\n\n### 3. Create a file with the AsyncAPI machine-readable description you defined before. On Windows use `type` instead of `cat`:\n<CodeBlock language=\"yaml\">\n{`cat <<EOT >> asyncapi.yaml\nasyncapi: '2.2.0'\ninfo:\n  title: Streetlights API\n  version: '1.0.0'\n  description: |\n    The Smartylighting Streetlights API allows you\n    to remotely manage the city lights.\n  license:\n    name: Apache 2.0\n    url: 'https://www.apache.org/licenses/LICENSE-2.0'\nservers:\n  mosquitto:\n    url: mqtt://test.mosquitto.org\n    protocol: mqtt\nchannels:\n  light/measured:\n    publish:\n      summary: Inform about environmental lighting conditions for a particular streetlight.\n      operationId: onLightMeasured\n      message:\n        name: LightMeasured\n        payload:\n          type: object\n          properties:\n            id:\n              type: integer\n              minimum: 0\n              description: Id of the streetlight.\n            lumens:\n              type: integer\n              minimum: 0\n              description: Light intensity measured in lumens.\n            sentAt:\n              type: string\n              format: date-time\n              description: Date and time when the message was sent.\nEOT`}\n</CodeBlock>\n\n### 4. Trigger generation of the Node.js code:\n<CodeBlock language=\"bash\">\n{`ag asyncapi.yaml @asyncapi/nodejs-template -o output -p server=mosquitto`}\n</CodeBlock>\n\n### 5. And voil√†! List all files in directory and check that Node.js application is generated:\n<CodeBlock language=\"bash\">\n{`cd output && ls`}\n</CodeBlock>\n\n# Running your code\n\n### 1. Install dependencies of newly generated application:\n<CodeBlock language=\"bash\">\n{`npm install`}\n</CodeBlock>\n\n### 2. Start the application:\n<CodeBlock language=\"bash\">\n{`npm start`}\n</CodeBlock>\n\n### 3. In another terminal install the MQTT.js library:\n<CodeBlock language=\"bash\">\n{`npm install mqtt -g`}\n</CodeBlock>\n\n### 4. Send a correct message to your application:\n<CodeBlock language=\"bash\">\n{`mqtt pub -t 'light/measured' -h 'test.mosquitto.org' -m '{\"id\": 1, \"lumens\": 3, \"sentAt\": \"2017-06-07T12:34:32.000Z\"}'`}\n</CodeBlock>\n\n### 5. Send an incorrect message to your application:\n<CodeBlock language=\"bash\">\n{`mqtt pub -t 'light/measured' -h 'test.mosquitto.org' -m '{\"id\": 1, \"lumens\": \"3\", \"sentAt\": \"2017-06-07T12:34:32.000Z\"}'`}\n</CodeBlock>\n\n### 6. Go back to the previous terminal and check if your application logged the streetlight condition you just sent, with errors related to the invalid message.\n\n# Conclusion\n\nYou've learned how to create an AsyncAPI description file and how to generate code from it. Today's sample code is only a bootstrap; you'll need to add your own business logic into it. Take some time to play with it. There are still lots of things to be covered, but the intent of this tutorial is to make it simple for you to get an idea of the potential.\n\nWe would love to see what you create with AsyncAPI! As an open-source project, we're open to proposals, questions, suggestions, and contributions. If you don't feel in the mood to contribute but you're using AsyncAPI, just raise your hand by [creating an issue in our Github repo](https://github.com/asyncapi/asyncapi/issues/new) or [join our Slack channel](https://www.asyncapi.com/slack-invite/). Don't be shy.\n\n---\n\n<DocsButton\n  suggestions={[\n    {\n      href: '/docs/tutorials',\n      title: 'Tutorials - Overview',\n      type:'back',\n    },\n    {\n      href: '/docs/tutorials/streetlights-interactive',\n      title: 'Streetlights - Interactive (Alpha)',\n      type:'next',\n    }\n  ]}\n/>",
          "toc": [
            {
              "content": "Streetlights System Description",
              "slug": "streetlights-system-description",
              "lvl": 1,
              "i": 0,
              "seen": 0
            },
            {
              "content": "Installation Guide",
              "slug": "installation-guide",
              "lvl": 1,
              "i": 1,
              "seen": 0
            },
            {
              "content": "Creating the AsyncAPI file",
              "slug": "creating-the-asyncapi-file",
              "lvl": 1,
              "i": 2,
              "seen": 0
            },
            {
              "content": "Generating code",
              "slug": "generating-code",
              "lvl": 1,
              "i": 3,
              "seen": 0
            },
            {
              "content": "1. Install the generator to use it as a command-line tool",
              "slug": "1-install-the-generator-to-use-it-as-a-command-line-tool",
              "lvl": 3,
              "i": 4,
              "seen": 0
            },
            {
              "content": "2. Create a directory for your projects and enter it:",
              "slug": "2-create-a-directory-for-your-projects-and-enter-it",
              "lvl": 3,
              "i": 5,
              "seen": 0
            },
            {
              "content": "3. Create a file with the AsyncAPI machine-readable description you defined before. On Windows use `type` instead of `cat`:",
              "slug": "3-create-a-file-with-the-asyncapi-machine-readable-description-you-defined-before-on-windows-use-type-instead-of-cat",
              "lvl": 3,
              "i": 6,
              "seen": 0
            },
            {
              "content": "4. Trigger generation of the Node.js code:",
              "slug": "4-trigger-generation-of-the-nodejs-code",
              "lvl": 3,
              "i": 7,
              "seen": 0
            },
            {
              "content": "5. And voil√†! List all files in directory and check that Node.js application is generated:",
              "slug": "5-and-voila-list-all-files-in-directory-and-check-that-nodejs-application-is-generated",
              "lvl": 3,
              "i": 8,
              "seen": 0
            },
            {
              "content": "Running your code",
              "slug": "running-your-code",
              "lvl": 1,
              "i": 9,
              "seen": 0
            },
            {
              "content": "1. Install dependencies of newly generated application:",
              "slug": "1-install-dependencies-of-newly-generated-application",
              "lvl": 3,
              "i": 10,
              "seen": 0
            },
            {
              "content": "2. Start the application:",
              "slug": "2-start-the-application",
              "lvl": 3,
              "i": 11,
              "seen": 0
            },
            {
              "content": "3. In another terminal install the MQTT.js library:",
              "slug": "3-in-another-terminal-install-the-mqttjs-library",
              "lvl": 3,
              "i": 12,
              "seen": 0
            },
            {
              "content": "4. Send a correct message to your application:",
              "slug": "4-send-a-correct-message-to-your-application",
              "lvl": 3,
              "i": 13,
              "seen": 0
            },
            {
              "content": "5. Send an incorrect message to your application:",
              "slug": "5-send-an-incorrect-message-to-your-application",
              "lvl": 3,
              "i": 14,
              "seen": 0
            },
            {
              "content": "6. Go back to the previous terminal and check if your application logged the streetlight condition you just sent, with errors related to the invalid message.",
              "slug": "6-go-back-to-the-previous-terminal-and-check-if-your-application-logged-the-streetlight-condition-you-just-sent-with-errors-related-to-the-invalid-message",
              "lvl": 3,
              "i": 15,
              "seen": 0
            },
            {
              "content": "Conclusion",
              "slug": "conclusion",
              "lvl": 1,
              "i": 16,
              "seen": 0
            }
          ],
          "slug": "/docs/tutorials/streetlights",
          "filePath": "pages/docs/tutorials/streetlights.md",
          "sectionTitle": "Tutorials"
        },
        {
          "meta": {
            "title": "Streetlights - Interactive (Alpha)",
            "description": "Interactive version of the original Streetlights tutorial.",
            "weight": 110
          },
          "content": "\n>tl;dr\nPlease try out [this](https://killercoda.com/asyncapi/scenario/streetlight-tut) interactive tutorial and let us know what you think, as we plan to have all the docs written this way.<!--more-->\n\nWe created an interactive tutorial using [KillerCoda](https://killercoda.com). It is another version of the [Streetlights](./streetlights) tutorial that will always work for you no matter what operating system you have.\n\nPlease become our alpha testers of the tutorial:\n\n1. Go through the tutorial [here](https://killercoda.com/asyncapi/scenario/streetlight-tut)\n2. Let us know what you think using the channel that works for you the best:\n    - [Slack](https://www.asyncapi.com/slack-invite/)\n    - [Twitter](https://twitter.com/AsyncAPISpec)\n    - [GitHub Issue](https://github.com/asyncapi/website/issues/)\n\n---\n\n<DocsButton\n  suggestions={[\n    {\n      href: '/docs/tutorials/streetlights',\n      title: 'Streetlights',\n      type:'back',\n    },\n    {\n      href: '/docs/specifications/v2.4.0',\n      title: 'Specifications 2.4.0',\n      type:'next',\n    }\n  ]}\n/>\n",
          "toc": [],
          "slug": "/docs/tutorials/streetlights-interactive",
          "filePath": "pages/docs/tutorials/streetlights-interactive.md",
          "sectionTitle": "Tutorials"
        }
      ],
      "section": {
        "title": "Tutorials",
        "weight": 2,
        "slug": "/docs/tutorials"
      }
    },
    {
      "files": [
        {
          "meta": {
            "title": "Overview",
            "weight": 0
          },
          "content": "\n## Tools: the AsyncAPI tools ecosystem\n\nWelcome to AsyncAPI **Tools**! Our Tools section documents the AsyncAPI tools ecosystem.\n\n<Remember>\n\n## Contribute to AsyncAPI Tools\nCode isn't the only way to contribute to OSS; Dev Docs are a **huge** help that benefit the entire OSS ecosystem. At AsyncAPI, we value Doc contributions as much as every other type of contribution. ‚ù§Ô∏è\n\nTo get started as a Docs contributor:\n1. Familiarize yourself with our [project's Contribution Guide](https://github.com/asyncapi/community/blob/master/CONTRIBUTING.md) and our [Code of Conduct](https://github.com/asyncapi/.github/blob/master/CODE_OF_CONDUCT.md).\n2. Head over to our [AsyncAPI Docs Board](https://github.com/orgs/asyncapi/projects/8).\n3. Pick an issue you would like to contribute to and leave a comment introducing yourself. This is also the perfect place to leave any questions you may have on how to get started. \n4. If there is no work done in that Docs issue yet, feel free to open a PR and get started!\n\n### Docs contributor questions\nDo you have a documentation contributor question and you're wondering how to tag me into a GitHub discussion or PR? Never fear!\n\nTag me in your AsyncAPI Doc PRs or [GitHub Discussions](https://github.com/asyncapi/community/discussions/categories/docs) via my GitHub handle, [`alequetzalli`](https://github.com/alequetzalli) üêô.\n</Remember>\n\n___ \n\n## AsyncAPI Tools List\n\nWould you like to add your tool to this list? [Let us know!](https://github.com/asyncapi/asyncapi/issues/new)\n<!--more-->\n\n> Please, before you decide to create a new tool, consider contributing to the existing ones. Thanks!\n\n## Code-first tools\n\nThe following is a list of tools that generate AsyncAPI documents from your code.\n\n| Link           | Description    | Language/Framework |\n| :------------- | :------------- | :----------------- |\n| [Go AsyncAPI](https://github.com/swaggest/go-asyncapi) | It uses reflection to translate Go structures in JSON Schema definitions and arrange them in AsyncAPI schema. Thanks to [@vearutop](https://github.com/vearutop). | Go\n| [Saunter](https://github.com/tehmantra/saunter) | Like [Swashbuckle](https://github.com/domaindrivendev/Swashbuckle.AspNetCore) for AsyncAPI. Generates (and hosts) an AsyncAPI schema document from your code. Thanks to [@tehmantra](https://github.com/tehmantra). | C#/dotnet\n| [Java AsyncAPI](https://github.com/Pakisan/java-asyncapi) | This is a code-first tool for AsyncAPI specification | Java, Kotlin\n| [Springwolf](https://github.com/stavshamir/springwolf) | Like [Springfox](https://github.com/springfox/springfox) for AsyncAPI. Auto-generates an AsyncAPI document and a web UI. | Java, Spring Boot\n| [KnstEventBus](https://github.com/d0972058277/KnstEventBus) | AsyncApi code-first tools for c#. Generates document and view. | C#\n| [sttp tapir](https://github.com/softwaremill/tapir) | Library for describing HTTP endpoints, and then interpreting them as a server, client, or documentation | Scala\n| [EventBridge Atlas](https://github.com/boyney123/eventbridge-atlas) | Tool that translates your AWS EventBridge Schemas into an AsyncAPI document and a web UI | Node\n| [Neuroglia AsyncAPI](https://github.com/neuroglia-io/AsyncApi) | Automatically generates and serves AsyncAPI documents based on your code. Includes fluent-builders to create AsyncAPI documents from scratch, and provides a web-based GUI to browse generated documents, | C# / .NET 5.0\n\n## Code Generators\n\nThe following is a list of tools that generate code from an AsyncAPI document; not the other way around.\n\n| Link           | Description    | Language/Framework |\n| :------------- | :------------- | :----------------- |\n| [AsyncAPI Generator](https://github.com/asyncapi/generator) | Use your AsyncAPI definition to generate literally anything. Markdown documentation, Node.js code, Java code, HTML documentation, anything! **[Click here](https://github.com/search?q=topic%3Aasyncapi+topic%3Agenerator+topic%3Atemplate) to get a list of the existing templates**. | Node.js/Hermes, Java/Spring, Markdown, HTML, and more.\n| [Node-RED AsyncAPI plugin](https://github.com/dalelane/node-red-contrib-plugin-asyncapi) | Use your AsyncAPI definition to generate and configure Node-RED nodes. | [Node-RED](https://nodered.org) |\n\nThe language you're looking for is not here? You created a new code generator and want to list it here? [Let us know!](https://github.com/asyncapi/asyncapi/issues/new)\n\n## Converters\n\nThe following is a list of tools that do not yet belong to any specific category but are also useful for the community.\n\n| Link           | Description    | Language/Framework |\n| :------------- | :------------- | :----------------- |\n| [Converter](https://github.com/asyncapi/converter) | Converts old versions of AsyncAPI files into the latest version. | Javascript\n| [Converter Go](https://github.com/asyncapi/converter-go) | Converts old versions of AsyncAPI files into the latest version. Thanks to [@Kyma team](https://kyma-project.io/). | Go\n| [AsyncAPI-format](https://github.com/thim81/asyncapi-format) | Format an AsyncAPI document by ordering, casing, formatting, and filtering fields. | NodeJS\n\n## Directories\n\nThe following is a list of directories that index public AsyncAPI documents.\n\n| Link           | Description    | Language/Framework |\n| :------------- | :------------- | :----------------- |\n| [AsyncAPI-Directory by APIs.guru](https://apis.guru/asyncapi-directory/) | Directory of asynchronous API specifications in AsyncAPI format. Thanks to [@PermittedSoc](https://twitter.com/@Permittedsoc). | N/A\n| [API Tracker - AsyncAPI specs](https://apitracker.io/specifications/asyncapi) | Explore APIs and companies with public AsyncAPI specifications. | N/A\n\n## Documentation Generators\n\nThe following is a list of tools that generate human-readable documentation from an AsyncAPI document.\n\n| Link           | Description    | Language/Kind |\n| :------------- | :------------- | :------------- |\n| [AsyncAPI Generator](https://github.com/asyncapi/generator) | Use your AsyncAPI definition to generate literally anything. Markdown documentation, Node.js code, HTML documentation, anything! **[Click here](https://github.com/search?q=topic%3Aasyncapi+topic%3Agenerator+topic%3Atemplate) to get a list of the existing templates**. | CLI / Javascript\n| [Bump](https://bump.sh) | OpenApi 2 & 3 / AsyncAPI 2 documentation generator, with automatic changelog and visual diff. | SaaS\n| [Widdershins](https://github.com/Mermade/widdershins) | OpenApi 3.0 / Swagger 2.0 / AsyncAPI 1.0 definition to Slate / Shins compatible markdown. Thanks to [@PermittedSoc](https://twitter.com/@Permittedsoc). | CLI / Javascript\n| [Cupid](https://github.com/asyncapi/cupid) | A library that focuses on finding and analyzing the relationships between AsyncAPI documents. It outputs a map of the system architecture. | Javascript\n\n# UI components {#UI}\n\nThe following is a list of UI components to view AsyncAPI documents.\n\n| Link           | Description    | Language/Framework |\n| :------------- | :------------- | :----------------- |\n| [AsyncAPI React](https://github.com/asyncapi/asyncapi-react) | React component for rendering documentation from your specification in real-time in the browser. Thanks to [@Kyma team](https://kyma-project.io/). | Javascript/React\n| [api-diff-viewer](https://github.com/udamir/api-diff-viewer) | React component to view difference between two API specifications. Thanks to [@udamir](https://github.com/udamir). [![Storybook](https://cdn.jsdelivr.net/gh/storybookjs/brand@master/badge/badge-storybook.svg)](https://api-diff-viewer.vercel.app/?path=/story/apidiffviewer--async-api) | Javascript/React\n\n# DSL\n\nWriting YAML by hand is no fun, and maybe you don't want a GUI, so use a Domain Specific Language to write AsyncAPI in your language of choice.\n\n| Link           | Description    | Language/Kind |\n| :------------- | :------------- | :------------- |\n| [BOATS](https://www.npmjs.com/package/boats) | Compile your single AsyncAPI file from multiple YAML files with BOATS and with the help of the template engine Nunjucks, plus a many extra helpers to automate much of the donkey work. The [AsyncAPI Parser](https://github.com/asyncapi/parser-js) is used to validate the output. | CLI / JavaScript |\n\n## Frameworks\n\nThe following is a list of API/application frameworks that make use of AsyncAPI.\n\n| Link           | Description    | Language/Kind |\n| :------------- | :------------- | :------------- |\n| [Asynction](https://github.com/dedoussis/asynction) | SocketIO server framework driven by the AsyncAPI specification. Asynction guarantees that your API will work in accordance with its AsyncAPI documentation. Built on top of Flask-SocketIO. | Python |\n\n## GitHub Actions\n\nThe following is a list of [GitHub Actions](https://github.com/features/actions) that you can use in your workflows:\n\n| Link           | Description    |\n| :------------- | :------------- |\n| [AsyncAPI Github Action](https://github.com/marketplace/actions/asyncapi-github-action) | This action validates if the AsyncAPI schema file is valid or not.\n| [Generator for AsyncAPI documents](https://github.com/marketplace/actions/generator-for-asyncapi-documents) | This action generates whatever you want using your AsyncAPI document. It uses [AsyncAPI Generator](https://github.com/asyncapi/generator).\n| [API documentation on Bump](https://github.com/marketplace/actions/api-documentation-on-bump) | With this Github Action you can automatically generate your API reference (with the changelog and diff) on [Bump](https://bump.sh) from any AsyncAPI file.\n| [Automated version bump for AsyncAPI documents](https://github.com/marketplace/actions/automated-version-bump-for-asyncapi) | With this Github Action, you can automatically bump the version based on commit messages, which is similar to what semantic-release is for NPM. \n\n## Mocking and Testing {#mocking}\n\nThe tools below take specification documents as input, then publish fake messages to broker destinations for simulation purposes. They may also check that publisher messages are compliant with schemas.\n\n| Link           | Description    | Language/Kind |\n| :------------- | :------------- | :------------- |\n| [Microcks](https://microcks.io) | Mocking and testing platform for API and microservices. Turn your AsyncAPI, OpenAPI contract examples, or Postman collections into ready-to-use mocks. Use examples to simulate and validate received messages according to schema elements. | Kubernetes-native, Self-hosted / SaaS, Open Source |\n| [Virtualan](https://virtualan.io) | Mocking and testing platform for API and microservices. Allows you to create and setup mocks for OpenAPI and AsyncAPI contracts. Shows how to setup and create AsyncAPI [GitHub Reference Examples](https://github.com/virtualansoftware/AsyncAPI-Virtualization) and OpenAPI [GitHub Reference Examples](https://github.com/virtualansoftware/service-virtualization-openapi). | Kubernetes-native, Self-hosted / SaaS, Open Source |\n\n## Validators {#validators}\n\nThe following is a list of tools that validate AsyncAPI documents.\n\n| Link           | Description    | Language/Framework |\n| :------------- | :------------- | :----------------- |\n| [AsyncAPI Parser](https://github.com/asyncapi/parser-js) | It parses and validates AsyncAPI documents. | Javascript\n| [Check-API](https://github.com/Mermade/check_api) | It allows you to validate a local file or remote URL with a single command-line or programmatic invocation. It returns an exitCode of 0 on success and 1 on failure, making it suitable for use in Continuous Integration environments. Thanks to [@PermittedSoc](https://twitter.com/@Permittedsoc). | Javascript\n| [asyncapi-validator](https://github.com/WaleedAshraf/asyncapi-validator) | It allows you to validate the schema of your messages against your AsyncAPI schema definition. You can use it with Kafka, RabbitMQ or any other messaging/queue. Thanks to [@waleedashraf](https://twitter.com/@waleedashraf01). | Javascript\n| [AsyncAPI Parser](https://github.com/asyncapi/parser) | It parses and validates AsyncAPI documents. | Go\n| [Spectral](https://github.com/stoplightio/spectral) | A command-line linter for AsyncAPI & OpenAPI documents. | Javascript\n| [AMF](https://github.com/aml-org/amf) | Unified RAML / OAS / AsyncAPI parser and validator, including linting | ScalaJS / JVM and JS support\n\n# Compare tools {#diff}\n\nThe following is a list of tools that compare AsyncAPI documents.\n\n| Link           | Description    | Language/Framework |\n| :------------- | :------------- | :----------------- |\n| [diff](https://github.com/asyncapi/diff) | Diff is a library that compares two AsyncAPI documents and provides information about the differences by pointing out explicitly information like breaking changes. | Javascript\n| [api-smart-diff](https://github.com/udamir/api-smart-diff) | It allows you to compare two API documents and classify changes. Supported API specifications: OpenAPI, AsyncAPI, JsonSchema. Thanks to [@udamir](https://github.com/udamir). | Javascript\n\n---\n\n<DocsButton\n  suggestions={[\n    {\n      href: '/docs/specifications/v2.0.0',\n      title: 'Specifications - Release 2.0.0',\n      type:'back',\n    }\n  ]}\n/>\n",
          "toc": [
            {
              "content": "Tools: the AsyncAPI tools ecosystem",
              "slug": "tools-the-asyncapi-tools-ecosystem",
              "lvl": 2,
              "i": 0,
              "seen": 0
            },
            {
              "content": "Contribute to AsyncAPI Tools",
              "slug": "contribute-to-asyncapi-tools",
              "lvl": 2,
              "i": 1,
              "seen": 0
            },
            {
              "content": "Docs contributor questions",
              "slug": "docs-contributor-questions",
              "lvl": 3,
              "i": 2,
              "seen": 0
            },
            {
              "content": "AsyncAPI Tools List",
              "slug": "asyncapi-tools-list",
              "lvl": 2,
              "i": 3,
              "seen": 0
            },
            {
              "content": "Code-first tools",
              "slug": "code-first-tools",
              "lvl": 2,
              "i": 4,
              "seen": 0
            },
            {
              "content": "Code Generators",
              "slug": "code-generators",
              "lvl": 2,
              "i": 5,
              "seen": 0
            },
            {
              "content": "Converters",
              "slug": "converters",
              "lvl": 2,
              "i": 6,
              "seen": 0
            },
            {
              "content": "Directories",
              "slug": "directories",
              "lvl": 2,
              "i": 7,
              "seen": 0
            },
            {
              "content": "Documentation Generators",
              "slug": "documentation-generators",
              "lvl": 2,
              "i": 8,
              "seen": 0
            },
            {
              "content": "UI components {#UI}",
              "slug": "UI",
              "lvl": 1,
              "i": 9,
              "seen": 0
            },
            {
              "content": "DSL",
              "slug": "dsl",
              "lvl": 1,
              "i": 10,
              "seen": 0
            },
            {
              "content": "Frameworks",
              "slug": "frameworks",
              "lvl": 2,
              "i": 11,
              "seen": 0
            },
            {
              "content": "GitHub Actions",
              "slug": "github-actions",
              "lvl": 2,
              "i": 12,
              "seen": 0
            },
            {
              "content": "Mocking and Testing {#mocking}",
              "slug": "mocking",
              "lvl": 2,
              "i": 13,
              "seen": 0
            },
            {
              "content": "Validators {#validators}",
              "slug": "validators",
              "lvl": 2,
              "i": 14,
              "seen": 0
            },
            {
              "content": "Compare tools {#diff}",
              "slug": "diff",
              "lvl": 1,
              "i": 15,
              "seen": 0
            }
          ],
          "slug": "/docs/tools",
          "filePath": "pages/docs/tools/index.md",
          "sectionTitle": "Tools"
        }
      ],
      "section": {
        "title": "Tools",
        "weight": 3,
        "slug": "/docs/tools"
      }
    },
    {
      "files": [
        {
          "meta": {
            "title": "Overview",
            "weight": 2
          },
          "content": "\n## Reference: AsyncAPI Specification\n\nWelcome to AsyncAPI **Reference**! Our Reference section documents the AsyncAPI specification.  \n\n<Remember>\n\n## Contribute to the AsyncAPI Reference section\nCode isn't the only way to contribute to OSS; Dev Docs are a **huge** help that benefit the entire OSS ecosystem. At AsyncAPI, we value Doc contributions as much as every other type of contribution. ‚ù§Ô∏è\n\nTo get started as a Docs contributor:\n1. Familiarize yourself with our [project's Contribution Guide](https://github.com/asyncapi/community/blob/master/CONTRIBUTING.md) and our [Code of Conduct](https://github.com/asyncapi/.github/blob/master/CODE_OF_CONDUCT.md).\n2. Head over to our [AsyncAPI Docs Board](https://github.com/orgs/asyncapi/projects/8).\n3. Pick an issue you would like to contribute to and leave a comment introducing yourself. This is also the perfect place to leave any questions you may have on how to get started. \n4. If there is no work done in that Docs issue yet, feel free to open a PR and get started!\n\n### Docs contributor questions\nDo you have a documentation contributor question and you're wondering how to tag me into a GitHub discussion or PR? Never fear!\n\nTag me in your AsyncAPI Doc PRs or [GitHub Discussions](https://github.com/asyncapi/community/discussions/categories/docs) via my GitHub handle, [`alequetzalli`](https://github.com/alequetzalli) üêô.\n</Remember>\n",
          "toc": [
            {
              "content": "Reference: AsyncAPI Specification",
              "slug": "reference-asyncapi-specification",
              "lvl": 2,
              "i": 0,
              "seen": 0
            },
            {
              "content": "Contribute to the AsyncAPI Reference section",
              "slug": "contribute-to-the-asyncapi-reference-section",
              "lvl": 2,
              "i": 1,
              "seen": 0
            },
            {
              "content": "Docs contributor questions",
              "slug": "docs-contributor-questions",
              "lvl": 3,
              "i": 2,
              "seen": 0
            }
          ],
          "slug": "/docs/reference",
          "filePath": "pages/docs/reference/index.md",
          "sectionTitle": "Reference"
        },
        {
          "files": [
            {
              "meta": {
                "weight": -4,
                "title": "2.4.0"
              },
              "content": "# AsyncAPI Specification\n\n#### Disclaimer\n\nPart of this content has been taken from the great work done by the folks at the [OpenAPI Initiative](https://openapis.org). Mainly because **it's a great work** and we want to keep as much compatibility as possible with the [OpenAPI Specification](https://github.com/OAI/OpenAPI-Specification).\n\n#### Version 2.4.0\n\nThe key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC 2119](https://www.ietf.org/rfc/rfc2119.txt).\n\nThe AsyncAPI Specification is licensed under [The Apache License, Version 2.0](https://www.apache.org/licenses/LICENSE-2.0.html).\n\n## Introduction\n\nThe AsyncAPI Specification is a project used to describe and document message-driven APIs in a machine-readable format. It‚Äôs protocol-agnostic, so you can use it for APIs that work over any protocol (e.g., AMQP, MQTT, WebSockets, Kafka, STOMP, HTTP, Mercure, etc).\n\nThe AsyncAPI Specification defines a set of files required to describe such an API.\nThese files can then be used to create utilities, such as documentation, integration and/or testing tools.\n\nThe file(s) MUST describe the operations an [application](#definitionsApplication) accepts. For instance, consider the following AsyncAPI definition snippet:\n\n```yaml\nuser/signedup:\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignUp\"\n```\n\nIt means that the [application](#definitionsApplication) allows [consumers](#definitionsConsumer) to subscribe to the `user/signedup` [channel](#definitionsChannel) to receive userSignUp [messages](#definitionsMessage) produced by the application.\n\n**The AsyncAPI specification does not assume any kind of software topology, architecture or pattern.** Therefore, a server MAY be a message broker, a web server or any other kind of computer program capable of sending and/or receiving data. However, AsyncAPI offers a mechanism called \"bindings\" that aims to help with more specific information about the protocol.\n\n\n## <a name=\"definitions\"></a>Definitions\n\n#### <a name=\"definitionsServer\"></a>Server\nA server MAY be a message broker that is capable of sending and/or receiving between a [producer](#definitionsProducer) and [consumer](#definitionsConsumer). A server MAY be a service with WebSocket API that enables message-driven communication between browser-to-server or server-to-server.\n\n#### <a name=\"definitionsApplication\"></a>Application\nAn application is any kind of computer program or a group of them. It MUST be a [producer](#definitionsProducer), a [consumer](#definitionsConsumer) or both. An application MAY be a microservice, IoT device (sensor), mainframe process, etc. An application MAY be written in any number of different programming languages as long as they support the selected [protocol](#definitionsProtocol). An application MUST also use a protocol supported by the [server](#definitionsServer) in order to connect and exchange [messages](#definitionsMessage). \n\n#### <a name=\"definitionsProducer\"></a>Producer\nA producer is a type of application, connected to a [server](#definitionsServer), that is creating [messages](#definitionsMessage) and addressing them to [channels](#definitionsChannel). A producer MAY be publishing to multiple channels depending on the [server](#definitionsServer), protocol, and use-case pattern.\n\n#### <a name=\"definitionsConsumer\"></a>Consumer\nA consumer is a type of application, connected to a [server](#definitionsServer) via a supported [protocol](#definitionsProtocol), that is consuming [messages](#definitionsMessage) from [channels](#definitionsChannel). A consumer MAY be consuming from multiple channels depending on the [server](#definitionsServer), protocol, and the use-case pattern.\n\n#### <a name=\"definitionsMessage\"></a>Message\nA message is the mechanism by which information is exchanged via a channel between [servers](#definitionsServer) and applications. A message MUST contain a payload and MAY also contain headers. The headers MAY be subdivided into [protocol](#definitionsProtocol)-defined headers and header properties defined by the application which can act as supporting metadata. The payload contains the data, defined by the application, which MUST be serialized into a format (JSON, XML, Avro, binary, etc.). Since a message is a generic mechanism, it can support multiple interaction patterns such as event, command, request, or response. \n\n#### <a name=\"definitionsChannel\"></a>Channel\nA channel is an addressable component, made available by the [server](#definitionsServer), for the organization of [messages](#definitionsMessage). [Producer](#definitionsProducer) applications send messages to channels and [consumer](#definitionsConsumer) applications consume messages from channels. [Servers](#definitionsServer) MAY support many channel instances, allowing messages with different content to be addressed to different channels. Depending on the [server](#definitionsServer) implementation, the channel MAY be included in the message via protocol-defined headers.\n\n#### <a name=\"definitionsProtocol\"></a>Protocol\nA protocol is the mechanism (wireline protocol or API) by which [messages](#definitionsMessage) are exchanged between the application and the [channel](#definitionsChannel). Example protocols include, but are not limited to, AMQP, HTTP, JMS, Kafka, Anypoint MQ, MQTT, Solace, STOMP, Mercure, WebSocket.  \n\n#### <a name=\"definitionsBindings\"></a>Bindings\nA \"binding\" (or \"protocol binding\") is a mechanism to define protocol-specific information. Therefore, a protocol binding MUST define protocol-specific information only. \n\n## <a name=\"specification\"></a>Specification\n\n### <a name=\"format\"></a>Format\n\nThe files describing the message-driven API in accordance with the AsyncAPI Specification are represented as JSON objects and conform to the JSON standards.\nYAML, being a superset of JSON, can be used as well to represent a A2S (AsyncAPI Specification) file.\n\nFor example, if a field is said to have an array value, the JSON array representation will be used:\n\n```yaml\n{\n   \"field\" : [...]\n}\n```\n\nWhile the API is described using JSON it does not impose a JSON input/output to the API itself.\n\nAll field names in the specification are **case sensitive**.\n\nThe schema exposes two types of fields.\nFixed fields, which have a declared name, and Patterned fields, which declare a regex pattern for the field name.\nPatterned fields can have multiple occurrences as long as each has a unique name.\n\nIn order to preserve the ability to round-trip between YAML and JSON formats, YAML version [1.2](https://www.yaml.org/spec/1.2/spec.html) is recommended along with some additional constraints:\n\n- Tags MUST be limited to those allowed by the [JSON Schema ruleset](https://www.yaml.org/spec/1.2/spec.html#id2803231)\n- Keys used in YAML maps MUST be limited to a scalar string, as defined by the YAML Failsafe schema ruleset\n\n### <a name=\"file-structure\"></a>File Structure\n\nAn AsyncAPI document MAY be made up of a single document or be divided into multiple,\nconnected parts at the discretion of the author. In the latter case, [Reference Objects](#referenceObject) are used.\n\nBy convention, the AsyncAPI Specification (A2S) file is named `asyncapi.json` or `asyncapi.yaml`.\n\n### <a name=\"schema\"></a>Schema\n\n#### <a name=\"A2SObject\"></a>AsyncAPI Object\n\nThis is the root document object for the API specification.\nIt combines resource listing and API declaration together into one document.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"A2SAsyncAPI\"></a>asyncapi | [AsyncAPI Version String](#A2SVersionString) | **Required.** Specifies the AsyncAPI Specification version being used. It can be used by tooling Specifications and clients to interpret the version. The structure shall be `major`.`minor`.`patch`, where `patch` versions _must_ be compatible with the existing `major`.`minor` tooling. Typically patch versions will be introduced to address errors in the documentation, and tooling should typically be compatible with the corresponding `major`.`minor` (1.0.*). Patch versions will correspond to patches of this document.\n<a name=\"A2SId\"></a>id | [Identifier](#A2SIdString) | Identifier of the [application](#definitionsApplication) the AsyncAPI document is defining.\n<a name=\"A2SInfo\"></a>info | [Info Object](#infoObject) | **Required.** Provides metadata about the API. The metadata can be used by the clients if needed.\n<a name=\"A2SServers\"></a>servers | [Servers Object](#serversObject) | Provides connection details of servers.\n<a name=\"A2SDefaultContentType\"></a>defaultContentType | [Default Content Type](#defaultContentTypeString) | Default content type to use when encoding/decoding a message's payload.\n<a name=\"A2SChannels\"></a>channels | [Channels Object](#channelsObject) | **Required** The available channels and messages for the API.\n<a name=\"A2SComponents\"></a>components | [Components Object](#componentsObject) | An element to hold various schemas for the specification.\n<a name=\"A2STags\"></a>tags | [Tags Object](#tagsObject) | A list of tags used by the specification with additional metadata. Each tag name in the list MUST be unique.\n<a name=\"A2SExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation.\n\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n#### <a name=\"A2SVersionString\"></a>AsyncAPI Version String\n\nThe version string signifies the version of the AsyncAPI Specification that the document complies to.\nThe format for this string _must_ be `major`.`minor`.`patch`.  The `patch` _may_ be suffixed by a hyphen and extra alphanumeric characters.\n\nA `major`.`minor` shall be used to designate the AsyncAPI Specification version, and will be considered compatible with the AsyncAPI Specification specified by that `major`.`minor` version.\nThe patch version will not be considered by tooling, making no distinction between `1.0.0` and `1.0.1`.\n\nIn subsequent versions of the AsyncAPI Specification, care will be given such that increments of the `minor` version should not interfere with operations of tooling developed to a lower minor version. Thus a hypothetical `1.1.0` specification should be usable with tooling designed for `1.0.0`.\n\n#### <a name=\"A2SIdString\"></a>Identifier\n\nThis field represents a unique universal identifier of the [application](#definitionsApplication) the AsyncAPI document is defining. It must conform to the URI format, according to [RFC3986](https://tools.ietf.org/html/rfc3986).\n\nIt is RECOMMENDED to use a [URN](https://tools.ietf.org/html/rfc8141) to globally and uniquely identify the application during long periods of time, even after it becomes unavailable or ceases to exist.\n\n###### Examples\n\n```json\n{\n  \"id\": \"urn:com:smartylighting:streetlights:server\"\n}\n```\n\n```yaml\nid: 'urn:com:smartylighting:streetlights:server'\n```\n\n```json\n{\n  \"id\": \"https://github.com/smartylighting/streetlights-server\"\n}\n```\n\n```yaml\nid: 'https://github.com/smartylighting/streetlights-server'\n```\n\n#### <a name=\"infoObject\"></a>Info Object\n\nThe object provides metadata about the API.\nThe metadata can be used by the clients if needed.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"infoObjectTitle\"></a>title | `string` | **Required.** The title of the application.\n<a name=\"infoObjectVersion\"></a>version | `string` | **Required** Provides the version of the application API (not to be confused with the specification version).\n<a name=\"infoObjectDescription\"></a>description | `string` | A short description of the application. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"infoObjectTermsOfService\"></a>termsOfService | `string` | A URL to the Terms of Service for the API. MUST be in the format of a URL.\n<a name=\"infoObjectContact\"></a>contact | [Contact Object](#contactObject) | The contact information for the exposed API.\n<a name=\"infoObjectLicense\"></a>license | [License Object](#licenseObject) | The license information for the exposed API.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Info Object Example:\n\n```json\n{\n  \"title\": \"AsyncAPI Sample App\",\n  \"description\": \"This is a sample server.\",\n  \"termsOfService\": \"https://asyncapi.org/terms/\",\n  \"contact\": {\n    \"name\": \"API Support\",\n    \"url\": \"https://www.asyncapi.org/support\",\n    \"email\": \"support@asyncapi.org\"\n  },\n  \"license\": {\n    \"name\": \"Apache 2.0\",\n    \"url\": \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n  },\n  \"version\": \"1.0.1\"\n}\n```\n\n```yaml\ntitle: AsyncAPI Sample App\ndescription: This is a sample server.\ntermsOfService: https://asyncapi.org/terms/\ncontact:\n  name: API Support\n  url: https://www.asyncapi.org/support\n  email: support@asyncapi.org\nlicense:\n  name: Apache 2.0\n  url: https://www.apache.org/licenses/LICENSE-2.0.html\nversion: 1.0.1\n```\n\n#### <a name=\"contactObject\"></a>Contact Object\n\nContact information for the exposed API.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"contactObjectName\"></a>name | `string` | The identifying name of the contact person/organization.\n<a name=\"contactObjectUrl\"></a>url | `string` | The URL pointing to the contact information. MUST be in the format of a URL.\n<a name=\"contactObjectEmail\"></a>email | `string` | The email address of the contact person/organization. MUST be in the format of an email address.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Contact Object Example:\n\n```json\n{\n  \"name\": \"API Support\",\n  \"url\": \"https://www.example.com/support\",\n  \"email\": \"support@example.com\"\n}\n```\n\n```yaml\nname: API Support\nurl: https://www.example.com/support\nemail: support@example.com\n```\n\n#### <a name=\"licenseObject\"></a>License Object\n\nLicense information for the exposed API.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"licenseObjectName\"></a>name | `string` | **Required.** The license name used for the API.\n<a name=\"licenseObjectUrl\"></a>url | `string` | A URL to the license used for the API. MUST be in the format of a URL.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### License Object Example:\n\n```json\n{\n  \"name\": \"Apache 2.0\",\n  \"url\": \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n}\n```\n\n```yaml\nname: Apache 2.0\nurl: https://www.apache.org/licenses/LICENSE-2.0.html\n```\n\n#### <a name=\"serversObject\"></a>Servers Object\n\nThe Servers Object is a map of [Server Objects](#serverObject).\n\n##### Patterned Fields\n\nField Pattern | Type | Description\n---|:---:|---\n<a name=\"serversObjectServer\"></a>`^[A-Za-z0-9_\\-]+$` | [Server Object](#serverObject) \\| [Reference Object](#referenceObject) | The definition of a server this application MAY connect to.\n\n##### Servers Object Example\n\n```json\n{\n  \"production\": {\n    \"url\": \"development.gigantic-server.com\",\n    \"description\": \"Development server\",\n    \"protocol\": \"kafka\",\n    \"protocolVersion\": \"1.0.0\"\n  }\n}\n```\n\n```yaml\nproduction:\n  url: development.gigantic-server.com\n  description: Development server\n  protocol: kafka\n  protocolVersion: '1.0.0'\n```\n\n\n#### <a name=\"serverObject\"></a>Server Object\n\nAn object representing a message broker, a server or any other kind of computer program capable of sending and/or receiving data. This object is used to capture details such as URIs, protocols and security configuration. Variable substitution can be used so that some details, for example usernames and passwords, can be injected by code generation tools.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"serverObjectUrl\"></a>url | `string` | **REQUIRED**. A URL to the target host.  This URL supports Server Variables and MAY be relative, to indicate that the host location is relative to the location where the AsyncAPI document is being served. Variable substitutions will be made when a variable is named in `{`braces`}`.\n<a name=\"serverObjectProtocol\"></a>protocol | `string` | **REQUIRED**. The protocol this URL supports for connection. Supported protocol include, but are not limited to: `amqp`, `amqps`, `http`, `https`, `ibmmq`, `jms`, `kafka`, `kafka-secure`, `anypointmq`, `mqtt`, `secure-mqtt`, `solace`, `stomp`, `stomps`, `ws`, `wss`, `mercure`.\n<a name=\"serverObjectProtocolVersion\"></a>protocolVersion | `string` | The version of the protocol used for connection. For instance: AMQP `0.9.1`, HTTP `2.0`, Kafka `1.0.0`, etc.\n<a name=\"serverObjectDescription\"></a>description | `string` | An optional string describing the host designated by the URL. [CommonMark syntax](https://spec.commonmark.org/) MAY be used for rich text representation.\n<a name=\"serverObjectVariables\"></a>variables | Map[`string`, [Server Variable Object](#serverVariableObject)] | A map between a variable name and its value.  The value is used for substitution in the server's URL template.\n<a name=\"serverObjectSecurity\"></a>security | [[Security Requirement Object](#securityRequirementObject)] | A declaration of which security mechanisms can be used with this server. The list of values includes alternative security requirement objects that can be used. Only one of the security requirement objects need to be satisfied to authorize a connection or operation.\n<a name=\"serverObjectBindings\"></a>bindings | [Server Bindings Object](#serverBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the server.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n##### Server Object Example\n\nA single server would be described as:\n\n```json\n{\n  \"url\": \"development.gigantic-server.com\",\n  \"description\": \"Development server\",\n  \"protocol\": \"kafka\",\n  \"protocolVersion\": \"1.0.0\"\n}\n```\n\n```yaml\nurl: development.gigantic-server.com\ndescription: Development server\nprotocol: kafka\nprotocolVersion: '1.0.0'\n```\n\nThe following shows how multiple servers can be described, for example, at the AsyncAPI Object's [`servers`](#A2SServers):\n\n```json\n{\n  \"servers\": {\n    \"development\": {\n      \"url\": \"development.gigantic-server.com\",\n      \"description\": \"Development server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\"\n    },\n    \"staging\": {\n      \"url\": \"staging.gigantic-server.com\",\n      \"description\": \"Staging server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\"\n    },\n    \"production\": {\n      \"url\": \"api.gigantic-server.com\",\n      \"description\": \"Production server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\"\n    }\n  }\n}\n```\n\n```yaml\nservers:\n  development:\n    url: development.gigantic-server.com\n    description: Development server\n    protocol: amqp\n    protocolVersion: 0.9.1\n  staging:\n    url: staging.gigantic-server.com\n    description: Staging server\n    protocol: amqp\n    protocolVersion: 0.9.1\n  production:\n    url: api.gigantic-server.com\n    description: Production server\n    protocol: amqp\n    protocolVersion: 0.9.1\n```\n\nThe following shows how variables can be used for a server configuration:\n\n```json\n{\n  \"servers\": {\n    \"production\": {\n      \"url\": \"{username}.gigantic-server.com:{port}/{basePath}\",\n      \"description\": \"The production API server\",\n      \"protocol\": \"secure-mqtt\",\n      \"variables\": {\n        \"username\": {\n          \"default\": \"demo\",\n          \"description\": \"This value is assigned by the service provider, in this example `gigantic-server.com`\"\n        },\n        \"port\": {\n          \"enum\": [\n            \"8883\",\n            \"8884\"\n          ],\n          \"default\": \"8883\"\n        },\n        \"basePath\": {\n          \"default\": \"v2\"\n        }\n      }\n    }\n  }\n}\n```\n\n```yaml\nservers:\n  production:\n    url: '{username}.gigantic-server.com:{port}/{basePath}'\n    description: The production API server\n    protocol: secure-mqtt\n    variables:\n      username:\n        # note! no enum here means it is an open value\n        default: demo\n        description: This value is assigned by the service provider, in this example `gigantic-server.com`\n      port:\n        enum:\n          - '8883'\n          - '8884'\n        default: '8883'\n      basePath:\n        # open meaning there is the opportunity to use special base paths as assigned by the provider, default is `v2`\n        default: v2\n```\n\n\n#### <a name=\"serverVariableObject\"></a>Server Variable Object\n\nAn object representing a Server Variable for server URL template substitution.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"serverVariableObjectEnum\"></a>enum | [`string`] | An enumeration of string values to be used if the substitution options are from a limited set.\n<a name=\"serverVariableObjectDefault\"></a>default | `string` | The default value to use for substitution, and to send, if an alternate value is _not_ supplied.\n<a name=\"serverVariableObjectDescription\"></a>description | `string` | An optional description for the server variable. [CommonMark syntax](https://spec.commonmark.org/) MAY be used for rich text representation.\n<a name=\"serverVariableObjectExamples\"></a>examples | [`string`] | An array of examples of the server variable.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n\n\n#### <a name=\"defaultContentTypeString\"></a>Default Content Type\n\nA string representing the default content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. `application/json`). This value MUST be used by schema parsers when the [contentType](#messageObjectContentType) property is omitted.\n\nIn case a message can't be encoded/decoded using this value, schema parsers MUST use their default content type.\n\n##### Default Content Type Example\n\n```json\n{\n  \"defaultContentType\": \"application/json\"\n}\n```\n\n```yaml\ndefaultContentType: application/json\n```\n\n\n\n\n\n\n#### <a name=\"channelsObject\"></a>Channels Object\n\nHolds the relative paths to the individual channel and their operations. Channel paths are relative to servers.\n\nChannels are also known as \"topics\", \"routing keys\", \"event types\" or \"paths\".\n\n##### Patterned Fields\n\nField Pattern | Type | Description\n---|:---:|---\n<a name=\"channelsObjectChannel\"></a>{channel} | [Channel Item Object](#channelItemObject) | A relative path to an individual channel. The field name MUST be in the form of a [RFC 6570 URI template](https://tools.ietf.org/html/rfc6570). Query parameters and fragments SHALL NOT be used, instead use [bindings](#channelBindingsObject) to define them.\n\n##### Channels Object Example\n\n```json\n{\n  \"user/signedup\": {\n    \"subscribe\": {\n      \"message\": {\n        \"$ref\": \"#/components/messages/userSignedUp\"\n      }\n    }\n  }\n}\n```\n\n```yaml\nuser/signedup:\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n#### <a name=\"channelItemObject\"></a>Channel Item Object\n\nDescribes the operations available on a single channel.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"channelItemObjectRef\"></a>$ref | `string` | Allows for an external definition of this channel item. The referenced structure MUST be in the format of a [Channel Item Object](#channelItemObject). If there are conflicts between the referenced definition and this Channel Item's definition, the behavior is *undefined*. <br/><br/>**Deprecated:** Usage of the `$ref` property has been deprecated.\n<a name=\"channelItemObjectDescription\"></a>description | `string` | An optional description of this channel item. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"channelItemObjectServers\"></a>servers | [`string`] | The servers on which this channel is available, specified as an optional unordered list of names (string keys) of [Server Objects](#serverObject) defined in the [Servers Object](#serversObject) (a map). If `servers` is absent or empty then this channel must be available on all servers defined in the [Servers Object](#serversObject).\n<a name=\"channelItemObjectSubscribe\"></a>subscribe | [Operation Object](#operationObject) | A definition of the SUBSCRIBE operation, which defines the messages produced by the application and sent to the channel.\n<a name=\"channelItemObjectPublish\"></a>publish | [Operation Object](#operationObject) | A definition of the PUBLISH operation, which defines the messages consumed by the application from the channel.\n<a name=\"channelItemObjectParameters\"></a>parameters | [Parameters Object](#parametersObject) | A map of the parameters included in the channel name. It SHOULD be present only when using channels with expressions (as defined by [RFC 6570 section 2.2](https://tools.ietf.org/html/rfc6570#section-2.2)).\n<a name=\"channelItemObjectBindings\"></a>bindings | [Channel Bindings Object](#channelBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the channel.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Channel Item Object Example\n\n```json\n{\n  \"description\": \"This channel is used to exchange messages about users signing up\",\n  \"subscribe\": {\n    \"summary\": \"A user signed up.\",\n    \"message\": {\n      \"description\": \"A longer description of the message\",\n      \"payload\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"user\": {\n            \"$ref\": \"#/components/schemas/user\"\n          },\n          \"signup\": {\n            \"$ref\": \"#/components/schemas/signup\"\n          }\n        }\n      }\n    }\n  },\n  \"bindings\": {\n    \"amqp\": {\n      \"is\": \"queue\",\n      \"queue\": {\n        \"exclusive\": true\n      }\n    }\n  }\n}\n```\n\n```yaml\ndescription: This channel is used to exchange messages about users signing up\nsubscribe:\n  summary: A user signed up.\n  message:\n    description: A longer description of the message\n    payload:\n      type: object\n      properties:\n        user:\n          $ref: \"#/components/schemas/user\"\n        signup:\n          $ref: \"#/components/schemas/signup\"\nbindings:\n  amqp:\n    is: queue\n    queue:\n      exclusive: true\n```\n\nUsing `oneOf` to specify multiple messages per operation:\n\n```json\n{\n  \"subscribe\": {\n    \"message\": {\n      \"oneOf\": [\n        { \"$ref\": \"#/components/messages/signup\" },\n        { \"$ref\": \"#/components/messages/login\" }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nsubscribe:\n  message:\n    oneOf:\n      - $ref: '#/components/messages/signup'\n      - $ref: '#/components/messages/login'\n```\n\n\nUsing explicit by-name references to the servers on which the channel is available:\n\n```json\n{\n  \"description\": \"This application publishes WebUICommand messages to an AMQP queue on RabbitMQ brokers in the Staging and Production environments.\",\n  \"servers\": [\n    \"rabbitmqBrokerInProd\",\n    \"rabbitmqBrokerInStaging\",\n  ],\n  \"subscribe\": {\n    \"message\": {\n      \"$ref\": \"#/components/messages/WebUICommand\"\n    }\n  },\n  \"bindings\": {\n    \"amqp\": {\n      \"is\": \"queue\"\n    }\n  }\n}\n```\n\n```yaml\ndescription: This application publishes WebUICommand messages to an AMQP queue on RabbitMQ brokers in the Staging and Production environments.\nservers:\n  - rabbitmqBrokerInProd\n  - rabbitmqBrokerInStaging\nsubscribe:\n  message:\n    $ref: \"#/components/messages/WebUICommand\"\nbindings:\n  amqp:\n    is: queue\n```\n\n\n\n\n\n#### <a name=\"operationObject\"></a>Operation Object\n\nDescribes a publish or a subscribe operation. This provides a place to document how and why messages are sent and received.\n\nFor example, an operation might describe a chat application use case where a user sends a text message to a group. A publish operation describes messages that are received by the chat application, whereas a subscribe operation describes messages that are sent by the chat application.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"operationObjectOperationId\"></a>operationId | `string` | Unique string used to identify the operation. The id MUST be unique among all operations described in the API. The operationId value is **case-sensitive**. Tools and libraries MAY use the operationId to uniquely identify an operation, therefore, it is RECOMMENDED to follow common programming naming conventions.\n<a name=\"operationObjectSummary\"></a>summary | `string` | A short summary of what the operation is about.\n<a name=\"operationObjectDescription\"></a>description | `string` | A verbose explanation of the operation. [CommonMark syntax](http://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"operationObjectSecurity\"></a>security | [[Security Requirement Object](#securityRequirementObject)]| A declaration of which security mechanisms are associated with this operation. Only one of the security requirement objects MUST be satisfied to authorize an operation. In cases where Server Security also applies, it MUST also be satisfied.\n<a name=\"operationObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for API documentation control. Tags can be used for logical grouping of operations.\n<a name=\"operationObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this operation.\n<a name=\"operationObjectBindings\"></a>bindings | [Operation Bindings Object](#operationBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the operation.\n<a name=\"operationObjectTraits\"></a>traits | [[Operation Trait Object](#operationTraitObject) &#124; [Reference Object](#referenceObject) ] | A list of traits to apply to the operation object. Traits MUST be merged into the operation object using the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) algorithm in the same order they are defined here.\n<a name=\"operationObjectMessage\"></a>message | [Message Object](#messageObject) &#124; [Reference Object](#referenceObject) &#124; Map[\"oneOf\", [[Message Object](#messageObject) &#124; [Reference Object](#referenceObject)]] | A definition of the message that will be published or received by this operation. Map containing a single `oneOf` key is allowed here to specify multiple messages. However, **a message MUST be valid only against one of the message objects.**\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Operation Object Example\n\n```json\n{\n  \"operationId\": \"registerUser\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"security\": [\n    {\n     \"petstore_auth\": [\n       \"write:pets\",\n       \"read:pets\"\n     ]\n    }\n  ],\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"message\": {\n    \"headers\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"applicationInstanceId\": {\n          \"description\": \"Unique identifier for a given instance of the publishing application\",\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"payload\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"user\": {\n          \"$ref\": \"#/components/schemas/userCreate\"\n        },\n        \"signup\": {\n          \"$ref\": \"#/components/schemas/signup\"\n        }\n      }\n    }\n  },\n  \"bindings\": {\n    \"amqp\": {\n      \"ack\": false\n    }\n  },\n  \"traits\": [\n    { \"$ref\": \"#/components/operationTraits/kafka\" }\n  ]\n}\n```\n\n```yaml\noperationId: registerUser\nsummary: Action to sign a user up.\ndescription: A longer description\nsecurity:\n  - petstore_auth:\n    - write:pets\n    - read:pets\ntags:\n  - name: user\n  - name: signup\n  - name: register\nmessage:\n  headers:\n    type: object\n    properties:\n      applicationInstanceId:\n        description: Unique identifier for a given instance of the publishing application\n        type: string\n  payload:\n    type: object\n    properties:\n      user:\n        $ref: \"#/components/schemas/userCreate\"\n      signup:\n        $ref: \"#/components/schemas/signup\"\nbindings:\n  amqp:\n    ack: false\ntraits:\n  - $ref: \"#/components/operationTraits/kafka\"\n```\n\n\n\n\n#### <a name=\"operationTraitObject\"></a>Operation Trait Object\n\nDescribes a trait that MAY be applied to an [Operation Object](#operationObject). This object MAY contain any property from the [Operation Object](#operationObject), except `message` and `traits`.\n\nIf you're looking to apply traits to a message, see the [Message Trait Object](#messageTraitObject).\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"operationTraitObjectOperationId\"></a>operationId | `string` | Unique string used to identify the operation. The id MUST be unique among all operations described in the API. The operationId value is **case-sensitive**. Tools and libraries MAY use the operationId to uniquely identify an operation, therefore, it is RECOMMENDED to follow common programming naming conventions.\n<a name=\"operationTraitObjectSummary\"></a>summary | `string` | A short summary of what the operation is about.\n<a name=\"operationTraitObjectDescription\"></a>description | `string` | A verbose explanation of the operation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"operationTraitObjectSecurity\"></a>security | [[Security Requirement Object](#securityRequirementObject)]| A declaration of which security mechanisms are associated with this operation. Only one of the security requirement objects MUST be satisfied to authorize an operation. In cases where Server Security also applies, it MUST also be satisfied.\n<a name=\"operationTraitObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for API documentation control. Tags can be used for logical grouping of operations.\n<a name=\"operationTraitObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this operation.\n<a name=\"operationTraitObjectBindings\"></a>bindings | [Operation Bindings Object](#operationBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the operation.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Operation Trait Object Example\n\n```json\n{\n  \"bindings\": {\n    \"amqp\": {\n      \"ack\": false\n    }\n  }\n}\n```\n\n```yaml\nbindings:\n  amqp:\n    ack: false\n```\n\n\n\n\n#### <a name=\"parametersObject\"></a>Parameters Object\n\nDescribes a map of parameters included in a channel name.\n\nThis map MUST contain all the parameters used in the parent channel name.\n\n##### Patterned Fields\n\nField Pattern | Type | Description\n---|:---:|---\n<a name=\"parametersObjectName\"></a>`^[A-Za-z0-9_\\-]+$` | [Parameter Object](#parameterObject) &#124; [Reference Object](#referenceObject) | The key represents the name of the parameter. It MUST match the parameter name used in the parent channel name.\n\n##### Parameters Object Example\n\n```json\n{\n  \"user/{userId}/signup\": {\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"subscribe\": {\n      \"message\": {\n        \"$ref\": \"#/components/messages/userSignedUp\"\n      }\n    }\n  }\n}\n```\n\n```yaml\nuser/{userId}/signup:\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n\n#### <a name=\"parameterObject\"></a>Parameter Object\n\nDescribes a parameter included in a channel name.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"parameterObjectDescription\"></a>description | `string` | A verbose explanation of the parameter. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"parameterObjectSchema\"></a>schema | [Schema Object](#schemaObject) \\| [Reference Object](#referenceObject) | Definition of the parameter.\nlocation | `string` | A [runtime expression](#runtimeExpression) that specifies the location of the parameter value. Even when a definition for the target field exists, it MUST NOT be used to validate this parameter but, instead, the `schema` property MUST be used.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Parameter Object Example\n\n```json\n{\n  \"user/{userId}/signup\": {\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"location\": \"$message.payload#/user/id\"\n      }\n    },\n    \"subscribe\": {\n      \"message\": {\n        \"$ref\": \"#/components/messages/userSignedUp\"\n      }\n    }\n  }\n}\n```\n\n```yaml\nuser/{userId}/signup:\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n      location: $message.payload#/user/id\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n#### <a name=\"serverBindingsObject\"></a>Server Bindings Object\n\nMap describing protocol-specific definitions for a server.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"serverBindingsObjectHTTP\"></a>`http` | [HTTP Server Binding](https://github.com/asyncapi/bindings/blob/master/http#server) | Protocol-specific information for an HTTP server.\n<a name=\"serverBindingsObjectWebSockets\"></a>`ws` | [WebSockets Server Binding](https://github.com/asyncapi/bindings/blob/master/websockets#server) | Protocol-specific information for a WebSockets server.\n<a name=\"serverBindingsObjectKafka\"></a>`kafka` | [Kafka Server Binding](https://github.com/asyncapi/bindings/blob/master/kafka#server) | Protocol-specific information for a Kafka server.\n<a name=\"serverBindingsObjectAnypointMQ\"></a>`anypointmq` | [Anypoint MQ Server Binding](https://github.com/asyncapi/bindings/blob/master/anypointmq#server) | Protocol-specific information for an Anypoint MQ server.\n<a name=\"serverBindingsObjectAMQP\"></a>`amqp` | [AMQP Server Binding](https://github.com/asyncapi/bindings/blob/master/amqp#server) | Protocol-specific information for an AMQP 0-9-1 server.\n<a name=\"serverBindingsObjectAMQP1\"></a>`amqp1` | [AMQP 1.0 Server Binding](https://github.com/asyncapi/bindings/blob/master/amqp1#server) | Protocol-specific information for an AMQP 1.0 server.\n<a name=\"serverBindingsObjectMQTT\"></a>`mqtt` | [MQTT Server Binding](https://github.com/asyncapi/bindings/blob/master/mqtt#server) | Protocol-specific information for an MQTT server.\n<a name=\"serverBindingsObjectMQTT5\"></a>`mqtt5` | [MQTT 5 Server Binding](https://github.com/asyncapi/bindings/blob/master/mqtt5#server) | Protocol-specific information for an MQTT 5 server.\n<a name=\"serverBindingsObjectNATS\"></a>`nats` | [NATS Server Binding](https://github.com/asyncapi/bindings/blob/master/nats#server) | Protocol-specific information for a NATS server.\n<a name=\"serverBindingsObjectJMS\"></a>`jms` | [JMS Server Binding](https://github.com/asyncapi/bindings/blob/master/jms#server) | Protocol-specific information for a JMS server.\n<a name=\"serverBindingsObjectSNS\"></a>`sns` | [SNS Server Binding](https://github.com/asyncapi/bindings/blob/master/sns#server) | Protocol-specific information for an SNS server.\n<a name=\"serverBindingsObjectSolace\"></a>`solace` | [Solace Server Binding](https://github.com/asyncapi/bindings/blob/master/solace#server) | Protocol-specific information for a Solace server.\n<a name=\"serverBindingsObjectSQS\"></a>`sqs` | [SQS Server Binding](https://github.com/asyncapi/bindings/blob/master/sqs#server) | Protocol-specific information for an SQS server.\n<a name=\"serverBindingsObjectSTOMP\"></a>`stomp` | [STOMP Server Binding](https://github.com/asyncapi/bindings/blob/master/stomp#server) | Protocol-specific information for a STOMP server.\n<a name=\"serverBindingsObjectRedis\"></a>`redis` | [Redis Server Binding](https://github.com/asyncapi/bindings/blob/master/redis#server) | Protocol-specific information for a Redis server.\n<a name=\"serverBindingsObjectMercure\"></a>`mercure` | [Mercure Server Binding](https://github.com/asyncapi/bindings/blob/master/mercure#server) | Protocol-specific information for a Mercure server.\n<a name=\"serverBindingsObjectIBMMQ\"></a>`ibmmq` | [IBM MQ Server Binding](https://github.com/asyncapi/bindings/blob/master/ibmmq#server-binding-object) | Protocol-specific information for an IBM MQ server.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n#### <a name=\"channelBindingsObject\"></a>Channel Bindings Object\n\nMap describing protocol-specific definitions for a channel.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"channelBindingsObjectHTTP\"></a>`http` | [HTTP Channel Binding](https://github.com/asyncapi/bindings/blob/master/http/README.md#channel) | Protocol-specific information for an HTTP channel.\n<a name=\"channelBindingsObjectWebSockets\"></a>`ws` | [WebSockets Channel Binding](https://github.com/asyncapi/bindings/blob/master/websockets/README.md#channel) | Protocol-specific information for a WebSockets channel.\n<a name=\"channelBindingsObjectKafka\"></a>`kafka` | [Kafka Channel Binding](https://github.com/asyncapi/bindings/blob/master/kafka/README.md#channel) | Protocol-specific information for a Kafka channel.\n<a name=\"channelBindingsObjectAnypointMQ\"></a>`anypointmq` | [Anypoint MQ Channel Binding](https://github.com/asyncapi/bindings/blob/master/anypointmq/README.md#channel) | Protocol-specific information for an Anypoint MQ channel.\n<a name=\"channelBindingsObjectAMQP\"></a>`amqp` | [AMQP Channel Binding](https://github.com/asyncapi/bindings/blob/master/amqp/README.md#channel) | Protocol-specific information for an AMQP 0-9-1 channel.\n<a name=\"channelBindingsObjectAMQP1\"></a>`amqp1` | [AMQP 1.0 Channel Binding](https://github.com/asyncapi/bindings/blob/master/amqp1/README.md#channel) | Protocol-specific information for an AMQP 1.0 channel.\n<a name=\"channelBindingsObjectMQTT\"></a>`mqtt` | [MQTT Channel Binding](https://github.com/asyncapi/bindings/blob/master/mqtt/README.md#channel) | Protocol-specific information for an MQTT channel.\n<a name=\"channelBindingsObjectMQTT5\"></a>`mqtt5` | [MQTT 5 Channel Binding](https://github.com/asyncapi/bindings/blob/master/mqtt5#channel) | Protocol-specific information for an MQTT 5 channel.\n<a name=\"channelBindingsObjectNATS\"></a>`nats` | [NATS Channel Binding](https://github.com/asyncapi/bindings/blob/master/nats/README.md#channel) | Protocol-specific information for a NATS channel.\n<a name=\"channelBindingsObjectJMS\"></a>`jms` | [JMS Channel Binding](https://github.com/asyncapi/bindings/blob/master/jms/README.md#channel) | Protocol-specific information for a JMS channel.\n<a name=\"channelBindingsObjectSNS\"></a>`sns` | [SNS Channel Binding](https://github.com/asyncapi/bindings/blob/master/sns/README.md#channel) | Protocol-specific information for an SNS channel.\n<a name=\"channelBindingsObjectSolace\"></a>`solace` | [Solace Channel Binding](https://github.com/asyncapi/bindings/blob/master/solace#channel) | Protocol-specific information for a Solace channel.\n<a name=\"channelBindingsObjectSQS\"></a>`sqs` | [SQS Channel Binding](https://github.com/asyncapi/bindings/blob/master/sqs/README.md#channel) | Protocol-specific information for an SQS channel.\n<a name=\"channelBindingsObjectSTOMP\"></a>`stomp` | [STOMP Channel Binding](https://github.com/asyncapi/bindings/blob/master/stomp/README.md#channel) | Protocol-specific information for a STOMP channel.\n<a name=\"channelBindingsObjectRedis\"></a>`redis` | [Redis Channel Binding](https://github.com/asyncapi/bindings/blob/master/redis#channel) | Protocol-specific information for a Redis channel.\n<a name=\"channelBindingsObjectMercure\"></a>`mercure` | [Mercure Channel Binding](https://github.com/asyncapi/bindings/blob/master/mercure#channel) | Protocol-specific information for a Mercure channel.\n<a name=\"channelBindingsObjectIBMMQ\"></a>`ibmmq` | [IBM MQ Channel Binding](https://github.com/asyncapi/bindings/tree/master/ibmmq#channel-binding-object) | Protocol-specific information for an IBM MQ channel.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n#### <a name=\"operationBindingsObject\"></a>Operation Bindings Object\n\nMap describing protocol-specific definitions for an operation.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"operationBindingsObjectHTTP\"></a>`http` | [HTTP Operation Binding](https://github.com/asyncapi/bindings/blob/master/http/README.md#operation) | Protocol-specific information for an HTTP operation.\n<a name=\"operationBindingsObjectWebSockets\"></a>`ws` | [WebSockets Operation Binding](https://github.com/asyncapi/bindings/blob/master/websockets/README.md#operation) | Protocol-specific information for a WebSockets operation.\n<a name=\"operationBindingsObjectKafka\"></a>`kafka` | [Kafka Operation Binding](https://github.com/asyncapi/bindings/blob/master/kafka/README.md#operation) | Protocol-specific information for a Kafka operation.\n<a name=\"operationBindingsObjectAnypointMQ\"></a>`anypointmq` | [Anypoint MQ Operation Binding](https://github.com/asyncapi/bindings/blob/master/anypointmq/README.md#operation) | Protocol-specific information for an Anypoint MQ operation.\n<a name=\"operationBindingsObjectAMQP\"></a>`amqp` | [AMQP Operation Binding](https://github.com/asyncapi/bindings/blob/master/amqp/README.md#operation) | Protocol-specific information for an AMQP 0-9-1 operation.\n<a name=\"operationBindingsObjectAMQP1\"></a>`amqp1` | [AMQP 1.0 Operation Binding](https://github.com/asyncapi/bindings/blob/master/amqp1/README.md#operation) | Protocol-specific information for an AMQP 1.0 operation.\n<a name=\"operationBindingsObjectMQTT\"></a>`mqtt` | [MQTT Operation Binding](https://github.com/asyncapi/bindings/blob/master/mqtt/README.md#operation) | Protocol-specific information for an MQTT operation.\n<a name=\"operationBindingsObjectMQTT5\"></a>`mqtt5` | [MQTT 5 Operation Binding](https://github.com/asyncapi/bindings/blob/master/mqtt5/README.md#operation) | Protocol-specific information for an MQTT 5 operation.\n<a name=\"operationBindingsObjectNATS\"></a>`nats` | [NATS Operation Binding](https://github.com/asyncapi/bindings/blob/master/nats/README.md#operation) | Protocol-specific information for a NATS operation.\n<a name=\"operationBindingsObjectJMS\"></a>`jms` | [JMS Operation Binding](https://github.com/asyncapi/bindings/blob/master/jms/README.md#operation) | Protocol-specific information for a JMS operation.\n<a name=\"operationBindingsObjectSNS\"></a>`sns` | [SNS Operation Binding](https://github.com/asyncapi/bindings/blob/master/sns/README.md#operation) | Protocol-specific information for an SNS operation.\n<a name=\"operationBindingsObjectSolace\"></a>`solace` | [Solace Operation Binding](https://github.com/asyncapi/bindings/blob/master/solace#operation) | Protocol-specific information for a Solace operation.\n<a name=\"operationBindingsObjectSQS\"></a>`sqs` | [SQS Operation Binding](https://github.com/asyncapi/bindings/blob/master/sqs/README.md#operation) | Protocol-specific information for an SQS operation.\n<a name=\"operationBindingsObjectSTOMP\"></a>`stomp` | [STOMP Operation Binding](https://github.com/asyncapi/bindings/blob/master/stomp/README.md#operation) | Protocol-specific information for a STOMP operation.\n<a name=\"operationBindingsObjectRedis\"></a>`redis` | [Redis Operation Binding](https://github.com/asyncapi/bindings/blob/master/redis#operation) | Protocol-specific information for a Redis operation.\n<a name=\"operationBindingsObjectMercure\"></a>`mercure` | [Mercure Operation Binding](https://github.com/asyncapi/bindings/blob/master/mercure#operation) | Protocol-specific information for a Mercure operation.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n\n#### <a name=\"messageBindingsObject\"></a>Message Bindings Object\n\nMap describing protocol-specific definitions for a message.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"messageBindingsObjectHTTP\"></a>`http` | [HTTP Message Binding](https://github.com/asyncapi/bindings/blob/master/http/README.md#message) | Protocol-specific information for an HTTP message, i.e., a request or a response.\n<a name=\"messageBindingsObjectWebSockets\"></a>`ws` | [WebSockets Message Binding](https://github.com/asyncapi/bindings/blob/master/websockets/README.md#message) | Protocol-specific information for a WebSockets message.\n<a name=\"messageBindingsObjectKafka\"></a>`kafka` | [Kafka Message Binding](https://github.com/asyncapi/bindings/blob/master/kafka/README.md#message) | Protocol-specific information for a Kafka message.\n<a name=\"messageBindingsObjectAnypointMQ\"></a>`anypointmq` | [Anypoint MQ Message Binding](https://github.com/asyncapi/bindings/blob/master/anypointmq/README.md#message) | Protocol-specific information for an Anypoint MQ message.\n<a name=\"messageBindingsObjectAMQP\"></a>`amqp` | [AMQP Message Binding](https://github.com/asyncapi/bindings/blob/master/amqp/README.md#message) | Protocol-specific information for an AMQP 0-9-1 message.\n<a name=\"messageBindingsObjectAMQP1\"></a>`amqp1` | [AMQP 1.0 Message Binding](https://github.com/asyncapi/bindings/blob/master/amqp1/README.md#message) | Protocol-specific information for an AMQP 1.0 message.\n<a name=\"messageBindingsObjectMQTT\"></a>`mqtt` | [MQTT Message Binding](https://github.com/asyncapi/bindings/blob/master/mqtt/README.md#message) | Protocol-specific information for an MQTT message.\n<a name=\"messageBindingsObjectMQTT5\"></a>`mqtt5` | [MQTT 5 Message Binding](https://github.com/asyncapi/bindings/blob/master/mqtt5/README.md#message) | Protocol-specific information for an MQTT 5 message.\n<a name=\"messageBindingsObjectNATS\"></a>`nats` | [NATS Message Binding](https://github.com/asyncapi/bindings/blob/master/nats/README.md#message) | Protocol-specific information for a NATS message.\n<a name=\"messageBindingsObjectJMS\"></a>`jms` | [JMS Message Binding](https://github.com/asyncapi/bindings/blob/master/jms/README.md#message) | Protocol-specific information for a JMS message.\n<a name=\"messageBindingsObjectSNS\"></a>`sns` | [SNS Message Binding](https://github.com/asyncapi/bindings/blob/master/sns/README.md#message) | Protocol-specific information for an SNS message.\n<a name=\"messageBindingsObjectSolace\"></a>`solace` | [Solace Server Binding](https://github.com/asyncapi/bindings/blob/master/solace#message) | Protocol-specific information for a Solace message.\n<a name=\"messageBindingsObjectSQS\"></a>`sqs` | [SQS Message Binding](https://github.com/asyncapi/bindings/blob/master/sqs/README.md#message) | Protocol-specific information for an SQS message.\n<a name=\"messageBindingsObjectSTOMP\"></a>`stomp` | [STOMP Message Binding](https://github.com/asyncapi/bindings/blob/master/stomp/README.md#message) | Protocol-specific information for a STOMP message.\n<a name=\"messageBindingsObjectRedis\"></a>`redis` | [Redis Message Binding](https://github.com/asyncapi/bindings/blob/master/redis#message) | Protocol-specific information for a Redis message.\n<a name=\"messageBindingsObjectMercure\"></a>`mercure` | [Mercure Message Binding](https://github.com/asyncapi/bindings/blob/master/mercure#message) | Protocol-specific information for a Mercure message.\n<a name=\"messageBindingsObjectIBMMQ\"></a>`ibmmq` | [IBM MQ Message Binding](https://github.com/asyncapi/bindings/tree/master/ibmmq#message-binding-object) | Protocol-specific information for an IBM MQ message.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n\n\n\n\n#### <a name=\"messageObject\"></a>Message Object\n\nDescribes a message received on a given channel and operation.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"messageObjectMessageId\"></a>messageId | `string` | Unique string used to identify the message. The id MUST be unique among all messages described in the API. The messageId value is **case-sensitive**. Tools and libraries MAY use the messageId to uniquely identify a message, therefore, it is RECOMMENDED to follow common programming naming conventions.\n<a name=\"messageObjectHeaders\"></a>headers | [Schema Object](#schemaObject) &#124; [Reference Object](#referenceObject) | Schema definition of the application headers. Schema MUST be of type \"object\". It **MUST NOT** define the protocol headers.\n<a name=\"messageObjectPayload\"></a>payload | `any` | Definition of the message payload. It can be of any type but defaults to [Schema object](#schemaObject). It must match the schema format, including encoding type - e.g Avro should be inlined as either a YAML or JSON object NOT a string to be parsed as YAML or JSON.\n<a name=\"messageObjectCorrelationId\"></a>correlationId | [Correlation ID Object](#correlationIdObject) &#124; [Reference Object](#referenceObject) | Definition of the correlation ID used for message tracing or matching.\n<a name=\"messageObjectSchemaFormat\"></a>schemaFormat | `string` | A string containing the name of the schema format used to define the message payload. If omitted, implementations should parse the payload as a [Schema object](#schemaObject). When the payload is defined using a `$ref` to a remote file, it is RECOMMENDED the schema format includes the file encoding type to allow implementations to parse the file correctly. E.g., adding `+yaml` if content type is `application/vnd.apache.avro` results in `application/vnd.apache.avro+yaml`.<br/><br/>Check out the [supported schema formats table](#messageObjectSchemaFormatTable) for more information. Custom values are allowed but their implementation is OPTIONAL. A custom value MUST NOT refer to one of the schema formats listed in the [table](#messageObjectSchemaFormatTable).\n<a name=\"messageObjectContentType\"></a>contentType | `string` | The content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. `application/json`). When omitted, the value MUST be the one specified on the [defaultContentType](#defaultContentTypeString) field.\n<a name=\"messageObjectName\"></a>name | `string` | A machine-friendly name for the message.\n<a name=\"messageObjectTitle\"></a>title | `string` | A human-friendly title for the message.\n<a name=\"messageObjectSummary\"></a>summary | `string` | A short summary of what the message is about.\n<a name=\"messageObjectDescription\"></a>description | `string` | A verbose explanation of the message. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"messageObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for API documentation control. Tags can be used for logical grouping of messages.\n<a name=\"messageObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this message.\n<a name=\"messageObjectBindings\"></a>bindings | [Message Bindings Object](#messageBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the message.\n<a name=\"messageObjectExamples\"></a>examples | [[Message Example Object](#messageExampleObject)] | List of examples.\n<a name=\"messageObjectTraits\"></a>traits | [[Message Trait Object](#messageTraitObject) &#124; [Reference Object](#referenceObject)] | A list of traits to apply to the message object. Traits MUST be merged into the message object using the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) algorithm in the same order they are defined here. The resulting object MUST be a valid [Message Object](#messageObject).\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### <a name=\"messageObjectSchemaFormatTable\"></a>Schema formats table\n\nThe following table contains a set of values that every implementation MUST support.\n\nName | Allowed values | Notes\n---|:---:|---\n[AsyncAPI 2.4.0 Schema Object](#schemaObject) | `application/vnd.aai.asyncapi;version=2.4.0`, `application/vnd.aai.asyncapi+json;version=2.4.0`, `application/vnd.aai.asyncapi+yaml;version=2.4.0` | This is the default when a `schemaFormat` is not provided.\n[JSON Schema Draft 07](https://json-schema.org/specification-links.html#draft-7) | `application/schema+json;version=draft-07`, `application/schema+yaml;version=draft-07` | \n\nThe following table contains a set of values that every implementation is RECOMMENDED to support.\n\nName | Allowed values | Notes\n---|:---:|---\n[Avro 1.9.0 schema](https://avro.apache.org/docs/1.9.0/spec.html#schemas) | `application/vnd.apache.avro;version=1.9.0`, `application/vnd.apache.avro+json;version=1.9.0`, `application/vnd.apache.avro+yaml;version=1.9.0` |\n[OpenAPI 3.0.0 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject) | `application/vnd.oai.openapi;version=3.0.0`, `application/vnd.oai.openapi+json;version=3.0.0`, `application/vnd.oai.openapi+yaml;version=3.0.0` | \n[RAML 1.0 data type](https://github.com/raml-org/raml-spec/blob/master/versions/raml-10/raml-10.md/) | `application/raml+yaml;version=1.0` |\n\n\n##### Message Object Example\n\n```json\n{\n  \"messageId\": \"userSignup\",\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"contentType\": \"application/json\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"headers\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"correlationId\": {\n        \"description\": \"Correlation ID set by application\",\n        \"type\": \"string\"\n      },\n      \"applicationInstanceId\": {\n        \"description\": \"Unique identifier for a given instance of the publishing application\",\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"payload\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"user\": {\n        \"$ref\": \"#/components/schemas/userCreate\"\n      },\n      \"signup\": {\n        \"$ref\": \"#/components/schemas/signup\"\n      }\n    }\n  },\n  \"correlationId\": {\n    \"description\": \"Default Correlation ID\",\n    \"location\": \"$message.header#/correlationId\"\n  },\n  \"traits\": [\n    { \"$ref\": \"#/components/messageTraits/commonHeaders\" }\n  ],\n  \"examples\": [\n    {\n      \"name\": \"SimpleSignup\",\n      \"summary\": \"A simple UserSignup example message\",\n      \"headers\": {\n        \"correlationId\": \"my-correlation-id\",\n        \"applicationInstanceId\": \"myInstanceId\"\n      },\n      \"payload\": {\n        \"user\": {\n          \"someUserKey\": \"someUserValue\"\n        },\n        \"signup\": {\n          \"someSignupKey\": \"someSignupValue\"\n        }\n      }\n    }\n  ]\n}\n```\n\n```yaml\nmessageId: userSignup\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ncontentType: application/json\ntags:\n  - name: user\n  - name: signup\n  - name: register\nheaders:\n  type: object\n  properties:\n    correlationId:\n      description: Correlation ID set by application\n      type: string\n    applicationInstanceId:\n      description: Unique identifier for a given instance of the publishing application\n      type: string\npayload:\n  type: object\n  properties:\n    user:\n      $ref: \"#/components/schemas/userCreate\"\n    signup:\n      $ref: \"#/components/schemas/signup\"\ncorrelationId:\n  description: Default Correlation ID\n  location: $message.header#/correlationId\ntraits:\n  - $ref: \"#/components/messageTraits/commonHeaders\"\nexamples:\n  - name: SimpleSignup\n    summary: A simple UserSignup example message\n    headers:\n      correlationId: my-correlation-id\n      applicationInstanceId: myInstanceId\n    payload:\n      user:\n        someUserKey: someUserValue\n      signup:\n        someSignupKey: someSignupValue\n```\n\nExample using Avro to define the payload:\n\n```json\n{\n  \"messageId\": \"userSignup\",\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"schemaFormat\": \"application/vnd.apache.avro+json;version=1.9.0\",\n  \"payload\": {\n    \"$ref\": \"path/to/user-create.avsc#/UserCreate\"\n  }\n}\n```\n\n```yaml\nmessageId: userSignup\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ntags:\n  - name: user\n  - name: signup\n  - name: register\nschemaFormat: 'application/vnd.apache.avro+yaml;version=1.9.0'\npayload:\n  $ref: 'path/to/user-create.avsc/#UserCreate'\n```\n\n\n\n\n\n\n\n#### <a name=\"messageTraitObject\"></a>Message Trait Object\n\nDescribes a trait that MAY be applied to a [Message Object](#messageObject). This object MAY contain any property from the [Message Object](#messageObject), except `payload` and `traits`.\n\nIf you're looking to apply traits to an operation, see the [Operation Trait Object](#operationTraitObject).\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"messageTraitObjectMessageId\"></a>messageId | `string` | Unique string used to identify the message. The id MUST be unique among all messages described in the API. The messageId value is **case-sensitive**. Tools and libraries MAY use the messageId to uniquely identify a message, therefore, it is RECOMMENDED to follow common programming naming conventions.\n<a name=\"messageTraitObjectHeaders\"></a>headers | [Schema Object](#schemaObject) &#124; [Reference Object](#referenceObject) | Schema definition of the application headers. Schema MUST be of type \"object\". It **MUST NOT** define the protocol headers.\n<a name=\"messageTraitObjectCorrelationId\"></a>correlationId | [Correlation ID Object](#correlationIdObject) &#124; [Reference Object](#referenceObject) | Definition of the correlation ID used for message tracing or matching.\n<a name=\"messageTraitObjectSchemaFormat\"></a>schemaFormat | `string` | A string containing the name of the schema format/language used to define the message payload. If omitted, implementations should parse the payload as a [Schema object](#schemaObject).\n<a name=\"messageTraitObjectContentType\"></a>contentType | `string` | The content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. `application/json`). When omitted, the value MUST be the one specified on the [defaultContentType](#defaultContentTypeString) field.\n<a name=\"messageTraitObjectName\"></a>name | `string` | A machine-friendly name for the message.\n<a name=\"messageTraitObjectTitle\"></a>title | `string` | A human-friendly title for the message.\n<a name=\"messageTraitObjectSummary\"></a>summary | `string` | A short summary of what the message is about.\n<a name=\"messageTraitObjectDescription\"></a>description | `string` | A verbose explanation of the message. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"messageTraitObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for API documentation control. Tags can be used for logical grouping of messages.\n<a name=\"messageTraitObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this message.\n<a name=\"messageTraitObjectBindings\"></a>bindings | [Message Bindings Object](#messageBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the message.\n<a name=\"messageTraitObjectExamples\"></a>examples | [[Message Example Object](#messageExampleObject)] | List of examples.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Message Trait Object Example\n\n```json\n{\n  \"schemaFormat\": \"application/vnd.apache.avro+json;version=1.9.0\",\n  \"contentType\": \"application/json\"\n}\n```\n\n```yaml\nschemaFormat: 'application/vnd.apache.avro+yaml;version=1.9.0'\ncontentType: application/json\n```\n\n#### <a name=\"messageExampleObject\"></a> Message Example Object\n\nMessage Example Object represents an example of a [Message Object](#messageObject) and MUST contain either **headers** and/or **payload** fields. \n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"messageExampleObjectHeaders\"></a>headers | `Map[string, any]` | The value of this field MUST validate against the [Message Object's headers](#messageObjectHeaders) field. \n<a name=\"messageExampleObjectPayload\"></a>payload | `any` | The value of this field MUST validate against the [Message Object's payload](#messageObjectPayload) field.\n<a name=\"messageExampleObjectName\"></a>name | `string` | A machine-friendly name.\n<a name=\"messageExampleObjectSummary\"></a>summary | `string` |  A short summary of what the example is about.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Message Example Object Example\n\n```json\n{\n  \"name\": \"SimpleSignup\",\n  \"summary\": \"A simple UserSignup example message\",\n  \"headers\": {\n    \"correlationId\": \"my-correlation-id\",\n    \"applicationInstanceId\": \"myInstanceId\"\n  },\n  \"payload\": {\n    \"user\": {\n      \"someUserKey\": \"someUserValue\"\n    },\n    \"signup\": {\n      \"someSignupKey\": \"someSignupValue\"\n    }\n  }\n}\n```\n\n```yaml\nname: SimpleSignup\nsummary: A simple UserSignup example message\nheaders:\n  correlationId: my-correlation-id\n  applicationInstanceId: myInstanceId\npayload:\n  user:\n    someUserKey: someUserValue\n  signup:\n    someSignupKey: someSignupValue\n```\n\n#### <a name=\"tagsObject\"></a>Tags Object\n\nA Tags object is a list of Tag Objects.\n\n#### <a name=\"tagObject\"></a>Tag Object\n\nAllows adding meta data to a single tag.\n\n##### Fixed Fields\nField Name | Type | Description\n---|:---:|---\n<a name=\"tagObjectName\"></a>name | `string` | **Required.** The name of the tag.\n<a name=\"tagObjectDescription\"></a>description | `string` | A short description for the tag. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"tagObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this tag.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Tag Object Example\n\n```json\n{\n\t\"name\": \"user\",\n\t\"description\": \"User-related messages\"\n}\n```\n\n```yaml\nname: user\ndescription: User-related messages\n```\n\n\n\n\n\n\n\n#### <a name=\"externalDocumentationObject\"></a>External Documentation Object\n\nAllows referencing an external resource for extended documentation.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **Required.** The URL for the target documentation. Value MUST be in the format of a URL.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### External Documentation Object Example\n\n```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n#### <a name=\"referenceObject\"></a>Reference Object\n\nA simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n##### Fixed Fields\nField Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **Required.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n##### Reference Object Example\n\n```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n#### <a name=\"componentsObject\"></a>Components Object\n\nHolds a set of reusable objects for different aspects of the AsyncAPI specification.\nAll objects defined within the components object will have no effect on the API unless they are explicitly referenced from properties outside the components object.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---|--- \n<a name=\"componentsSchemas\"></a> schemas | Map[`string`, [Schema Object](#schemaObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Schema Objects](#schemaObject).\n<a name=\"componentsServers\"></a> servers | Map[`string`, [Server Object](#serverObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Server Objects](#serverObject).\n<a name=\"componentsServerVariables\"></a> serverVariables | Map[`string`, [Server Variable Object](#serverVariableObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Server Variable Objects](#serverVariableObject). \n<a name=\"componentsChannels\"></a> channels | Map[`string`, [Channel Item Object](#channelItemObject)] | An object to hold reusable [Channel Item Objects](#channelItemObject).\n<a name=\"componentsMessages\"></a> messages | Map[`string`, [Message Object](#messageObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Message Objects](#messageObject).\n<a name=\"componentsSecuritySchemes\"></a> securitySchemes| Map[`string`, [Security Scheme Object](#securitySchemeObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Security Scheme Objects](#securitySchemeObject).\n<a name=\"componentsParameters\"></a> parameters | Map[`string`, [Parameter Object](#parameterObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Parameter Objects](#parameterObject).\n<a name=\"componentsCorrelationIDs\"></a> correlationIds | Map[`string`, [Correlation ID Object](#correlationIdObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Correlation ID Objects](#correlationIdObject).\n<a name=\"componentsOperationTraits\"></a> operationTraits | Map[`string`, [Operation Trait Object](#operationTraitObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Operation Trait Objects](#operationTraitObject).\n<a name=\"componentsMessageTraits\"></a> messageTraits | Map[`string`, [Message Trait Object](#messageTraitObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Message Trait Objects](#messageTraitObject).\n<a name=\"componentsServerBindings\"></a> serverBindings | Map[`string`, [Server Bindings Object](#serverBindingsObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Server Bindings Objects](#serverBindingsObject).\n<a name=\"componentsChannelBindings\"></a> channelBindings | Map[`string`, [Channel Bindings Object](#channelBindingsObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Channel Bindings Objects](#channelBindingsObject).\n<a name=\"componentsOperationBindings\"></a> operationBindings | Map[`string`, [Operation Bindings Object](#operationBindingsObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Operation Bindings Objects](#operationBindingsObject).\n<a name=\"componentsMessageBindings\"></a> messageBindings | Map[`string`, [Message Bindings Object](#messageBindingsObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Message Bindings Objects](#messageBindingsObject).\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\nAll the fixed fields declared above are objects that MUST use keys that match the regular expression: `^[a-zA-Z0-9\\.\\-_]+$`.\n\nField Name Examples:\n\n```\nUser\nUser_1\nUser_Name\nuser-name\nmy.org.User\n```\n\n##### Components Object Example\n\n```json\n{\n  \"components\": {\n    \"schemas\": {\n      \"Category\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"servers\": {\n      \"development\": {\n        \"url\": \"{stage}.gigantic-server.com:{port}\",\n        \"description\": \"Development server\",\n        \"protocol\": \"amqp\",\n        \"protocolVersion\": \"0.9.1\",\n        \"variables\": {\n          \"stage\": {\n            \"$ref\": \"#/components/serverVariables/stage\"\n          },\n          \"port\": {\n            \"$ref\": \"#/components/serverVariables/port\"\n          }\n        }\n      }\n    },\n    \"serverVariables\": {\n      \"stage\": {\n        \"default\": \"demo\",\n        \"description\": \"This value is assigned by the service provider, in this example `gigantic-server.com`\"\n      },\n      \"port\": {\n        \"enum\": [\"8883\", \"8884\"],\n        \"default\": \"8883\"\n      }\n    },\n    \"channels\": {\n      \"user/signedup\": {\n        \"subscribe\": {\n          \"message\": {\n            \"$ref\": \"#/components/messages/userSignUp\"\n          }\n        }\n      }\n    },\n    \"messages\": {\n      \"userSignUp\": {\n        \"summary\": \"Action to sign a user up.\",\n        \"description\": \"Multiline description of what this action does.\\nHere you have another line.\\n\",\n        \"tags\": [\n          {\n            \"name\": \"user\"\n          },\n          {\n            \"name\": \"signup\"\n          }\n        ],\n        \"headers\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"applicationInstanceId\": {\n              \"description\": \"Unique identifier for a given instance of the publishing application\",\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"payload\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"user\": {\n              \"$ref\": \"#/components/schemas/userCreate\"\n            },\n            \"signup\": {\n              \"$ref\": \"#/components/schemas/signup\"\n            }\n          }\n        }\n      }\n    },\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"correlationIds\": {\n      \"default\": {\n        \"description\": \"Default Correlation ID\",\n        \"location\": \"$message.header#/correlationId\"\n      }\n    },\n    \"messageTraits\": {\n      \"commonHeaders\": {\n        \"headers\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"my-app-header\": {\n              \"type\": \"integer\",\n              \"minimum\": 0,\n              \"maximum\": 100\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\n```yaml\ncomponents:\n  schemas:\n    Category:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n    Tag:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n  servers:\n    development:\n      url: \"{stage}.gigantic-server.com:{port}\"\n      description: Development server\n      protocol: amqp\n      protocolVersion: 0.9.1\n      variables:\n        stage:\n          $ref: \"#/components/serverVariables/stage\"\n        port:\n          $ref: \"#/components/serverVariables/port\"\n  serverVariables:\n    stage:\n      default: demo\n      description: This value is assigned by the service provider, in this example `gigantic-server.com`\n    port:\n      enum: [8883, 8884]\n      default: 8883\n  channels:\n    user/signedup:\n      subscribe:\n        message:\n          $ref: \"#/components/messages/userSignUp\"\n  messages:\n    userSignUp:\n      summary: Action to sign a user up.\n      description: |\n        Multiline description of what this action does.\n        Here you have another line.\n      tags:\n        - name: user\n        - name: signup\n      headers:\n        type: object\n        properties:\n          applicationInstanceId:\n            description: Unique identifier for a given instance of the publishing application\n            type: string\n      payload:\n        type: object\n        properties:\n          user:\n            $ref: \"#/components/schemas/userCreate\"\n          signup:\n            $ref: \"#/components/schemas/signup\"\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n  correlationIds:\n    default:\n      description: Default Correlation ID\n      location: $message.header#/correlationId\n  messageTraits:\n    commonHeaders:\n      headers:\n        type: object\n        properties:\n          my-app-header:\n            type: integer\n            minimum: 0\n            maximum: 100\n```\n\n#### <a name=\"schemaObject\"></a>Schema Object\n\nThe Schema Object allows the definition of input and output data types.\nThese types can be objects, but also primitives and arrays. This object is a superset of the [JSON Schema Specification Draft 07](https://json-schema.org/). The empty schema (which allows any instance to validate) MAY be represented by the `boolean` value `true` and a schema which allows no instance to validate MAY be represented by the `boolean` value `false`.\n\nFurther information about the properties can be found in [JSON Schema Core](https://tools.ietf.org/html/draft-handrews-json-schema-01) and [JSON Schema Validation](https://tools.ietf.org/html/draft-handrews-json-schema-validation-01).\nUnless stated otherwise, the property definitions follow the JSON Schema specification as referenced here.\n\n##### Properties\n\nThe AsyncAPI Schema Object is a JSON Schema vocabulary which extends JSON Schema Core and Validation vocabularies. As such, any keyword available for those vocabularies is by definition available in AsyncAPI, and will work the exact same way, including but not limited to:\n\n- title\n- type\n- required\n- multipleOf\n- maximum\n- exclusiveMaximum\n- minimum\n- exclusiveMinimum\n- maxLength\n- minLength\n- pattern (This string SHOULD be a valid regular expression, according to the [ECMA 262 regular expression](https://www.ecma-international.org/ecma-262/5.1/#sec-7.8.5) dialect)\n- maxItems\n- minItems\n- uniqueItems\n- maxProperties\n- minProperties\n- enum\n- const\n- examples\n- if / then / else\n- readOnly\n- writeOnly\n- properties\n- patternProperties\n- additionalProperties\n- additionalItems\n- items\n- propertyNames\n- contains\n- allOf\n- oneOf\n- anyOf\n- not\n\nThe following properties are taken from the JSON Schema definition but their definitions were adjusted to the AsyncAPI Specification.\n\n- description - [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n- format - See [Data Type Formats](#dataTypeFormat) for further details. While relying on JSON Schema's defined formats, the AsyncAPI Specification offers a few additional predefined formats.\n- default - The default value represents what would be assumed by the consumer of the input as the value of the schema if one is not provided. Unlike JSON Schema, the value MUST conform to the defined type for the Schema Object defined at the same level. For example, of `type` is `string`, then `default` can be `\"foo\"` but cannot be `1`.\n\nAlternatively, any time a Schema Object can be used, a [Reference Object](#referenceObject) can be used in its place. This allows referencing definitions in place of defining them inline. It is appropriate to clarify that the `$ref` keyword MUST follow the behavior described by [Reference Object](#referenceObject) instead of the one in [JSON Schema definition](https://json-schema.org/understanding-json-schema/structuring.html#ref).\n\nIn addition to the JSON Schema fields, the following AsyncAPI vocabulary fields MAY be used for further schema documentation:\n\n##### Fixed Fields\nField Name | Type | Description\n---|:---:|---\n<a name=\"schemaObjectDiscriminator\"></a>discriminator | `string` | Adds support for polymorphism. The discriminator is the schema property name that is used to differentiate between other schema that inherit this schema. The property name used MUST be defined at this schema and it MUST be in the `required` property list. When used, the value MUST be the name of this schema or any schema that inherits it. See [Composition and Inheritance](#schemaComposition) for more details.\n<a name=\"schemaObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this schema.\n<a name=\"schemaObjectDeprecated\"></a> deprecated | `boolean` | Specifies that a schema is deprecated and SHOULD be transitioned out of usage. Default value is `false`.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n###### <a name=\"schemaComposition\"></a>Composition and Inheritance (Polymorphism)\n\nThe AsyncAPI Specification allows combining and extending model definitions using the `allOf` property of JSON Schema, in effect offering model composition.\n`allOf` takes in an array of object definitions that are validated *independently* but together compose a single object.\n\nWhile composition offers model extensibility, it does not imply a hierarchy between the models.\nTo support polymorphism, AsyncAPI Specification adds the support of the `discriminator` field.\nWhen used, the `discriminator` will be the name of the property used to decide which schema definition is used to validate the structure of the model.\nAs such, the `discriminator` field MUST be a required field.\nThere are are two ways to define the value of a discriminator for an inheriting instance.\n\n- Use the schema's name.\n- Override the schema's name by overriding the property with a new value. If exists, this takes precedence over the schema's name.\n\nAs such, inline schema definitions, which do not have a given id, *cannot* be used in polymorphism.\n\n##### Schema Object Examples\n\n###### Primitive Sample\n\n```json\n{\n  \"type\": \"string\",\n  \"format\": \"email\"\n}\n```\n\n```yaml\ntype: string\nformat: email\n```\n\n###### Simple Model\n\n```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"name\"\n  ],\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"address\": {\n      \"$ref\": \"#/components/schemas/Address\"\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"format\": \"int32\",\n      \"minimum\": 0\n    }\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- name\nproperties:\n  name:\n    type: string\n  address:\n    $ref: '#/components/schemas/Address'\n  age:\n    type: integer\n    format: int32\n    minimum: 0\n```\n\n###### Model with Map/Dictionary Properties\n\nFor a simple string to string mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"type\": \"string\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  type: string\n```\n\nFor a string to model mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"$ref\": \"#/components/schemas/ComplexModel\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  $ref: '#/components/schemas/ComplexModel'\n```\n\n###### Model with Example\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"integer\",\n      \"format\": \"int64\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"examples\": [\n    {\n      \"name\": \"Puma\",\n      \"id\": 1\n    }\n  ]\n}\n```\n\n```yaml\ntype: object\nproperties:\n  id:\n    type: integer\n    format: int64\n  name:\n    type: string\nrequired:\n- name\nexamples:\n- name: Puma\n  id: 1\n```\n\n###### Model with Boolean Schemas\n\n```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"anySchema\"\n  ],\n  \"properties\": {\n    \"anySchema\": true,\n    \"cannotBeDefined\": false\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- anySchema\nproperties:\n  anySchema: true\n  cannotBeDefined: false\n```\n\n###### Models with Composition\n\n```json\n{\n  \"schemas\": {\n    \"ErrorModel\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"message\",\n        \"code\"\n      ],\n      \"properties\": {\n        \"message\": {\n          \"type\": \"string\"\n        },\n        \"code\": {\n          \"type\": \"integer\",\n          \"minimum\": 100,\n          \"maximum\": 600\n        }\n      }\n    },\n    \"ExtendedErrorModel\": {\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/ErrorModel\"\n        },\n        {\n          \"type\": \"object\",\n          \"required\": [\n            \"rootCause\"\n          ],\n          \"properties\": {\n            \"rootCause\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  ErrorModel:\n    type: object\n    required:\n    - message\n    - code\n    properties:\n      message:\n        type: string\n      code:\n        type: integer\n        minimum: 100\n        maximum: 600\n  ExtendedErrorModel:\n    allOf:\n    - $ref: '#/components/schemas/ErrorModel'\n    - type: object\n      required:\n      - rootCause\n      properties:\n        rootCause:\n          type: string\n```\n\n###### Models with Polymorphism Support\n\n```json\n{\n  \"schemas\": {\n    \"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"petType\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"petType\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"petType\"\n      ]\n    },\n    \"Cat\": {\n      \"description\": \"A representation of a cat. Note that `Cat` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"huntingSkill\": {\n              \"type\": \"string\",\n              \"description\": \"The measured skill for hunting\",\n              \"enum\": [\n                \"clueless\",\n                \"lazy\",\n                \"adventurous\",\n                \"aggressive\"\n              ]\n            }\n          },\n          \"required\": [\n            \"huntingSkill\"\n          ]\n        }\n      ]\n    },\n    \"Dog\": {\n      \"description\": \"A representation of a dog. Note that `Dog` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"packSize\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"description\": \"the size of the pack the dog is from\",\n              \"minimum\": 0\n            }\n          },\n          \"required\": [\n            \"packSize\"\n          ]\n        }\n      ]\n    },\n    \"StickInsect\": {\n      \"description\": \"A representation of an Australian walking stick. Note that `StickBug` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"petType\": {\n              \"const\": \"StickBug\"\n            },\n            \"color\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"color\"\n          ]\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  Pet:\n    type: object\n    discriminator: petType\n    properties:\n      name:\n        type: string\n      petType:\n        type: string\n    required:\n    - name\n    - petType\n  ## applies to instances with `petType: \"Cat\"`\n  ## because that is the schema name\n  Cat:\n    description: A representation of a cat\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        huntingSkill:\n          type: string\n          description: The measured skill for hunting\n          enum:\n          - clueless\n          - lazy\n          - adventurous\n          - aggressive\n      required:\n      - huntingSkill\n  ## applies to instances with `petType: \"Dog\"`\n  ## because that is the schema name\n  Dog:\n    description: A representation of a dog\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        packSize:\n          type: integer\n          format: int32\n          description: the size of the pack the dog is from\n          minimum: 0\n      required:\n      - packSize\n  ## applies to instances with `petType: \"StickBug\"`\n  ## because that is the required value of the discriminator field,\n  ## overriding the schema name\n  StickInsect:\n    description: A representation of an Australian walking stick\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        petType:\n          const: StickBug\n        color:\n          type: string\n      required:\n      - color\n```\n\n\n\n\n\n#### <a name=\"securitySchemeObject\"></a>Security Scheme Object\n\nDefines a security scheme that can be used by the operations. Supported schemes are:\n\n* User/Password.\n* API key (either as user or as password).\n* X.509 certificate.\n* End-to-end encryption (either symmetric or asymmetric).\n* HTTP authentication.\n* HTTP API key.\n* OAuth2's common flows (Implicit, Resource Owner Protected Credentials, Client Credentials and Authorization Code) as defined in [RFC6749](https://tools.ietf.org/html/rfc6749).\n* [OpenID Connect Discovery](https://tools.ietf.org/html/draft-ietf-oauth-discovery-06).\n* SASL (Simple Authentication and Security Layer) as defined in [RFC4422](https://tools.ietf.org/html/rfc4422).\n\n##### Fixed Fields\nField Name | Type | Applies To | Description\n---|:---:|---|---\n<a name=\"securitySchemeObjectType\"></a>type | `string` | Any | **REQUIRED**. The type of the security scheme. Valid values are `\"userPassword\"`, `\"apiKey\"`, `\"X509\"`, `\"symmetricEncryption\"`, `\"asymmetricEncryption\"`, `\"httpApiKey\"`, `\"http\"`, `\"oauth2\"`, `\"openIdConnect\"`, `\"plain\"`, `\"scramSha256\"`, `\"scramSha512\"`, and `\"gssapi\"`.\n<a name=\"securitySchemeObjectDescription\"></a>description | `string` | Any | A short description for security scheme. [CommonMark syntax](https://spec.commonmark.org/) MAY be used for rich text representation.\n<a name=\"securitySchemeObjectName\"></a>name | `string` | `httpApiKey` | **REQUIRED**. The name of the header, query or cookie parameter to be used.\n<a name=\"securitySchemeObjectIn\"></a>in | `string` | `apiKey` \\| `httpApiKey` | **REQUIRED**. The location of the API key. Valid values are `\"user\"` and `\"password\"` for `apiKey` and `\"query\"`, `\"header\"` or `\"cookie\"` for `httpApiKey`.\n<a name=\"securitySchemeObjectScheme\"></a>scheme | `string` | `http` | **REQUIRED**. The name of the HTTP Authorization scheme to be used in the [Authorization header as defined in RFC7235](https://tools.ietf.org/html/rfc7235#section-5.1).\n<a name=\"securitySchemeObjectBearerFormat\"></a>bearerFormat | `string` | `http` (`\"bearer\"`) | A hint to the client to identify how the bearer token is formatted.  Bearer tokens are usually generated by an authorization server, so this information is primarily for documentation purposes.\n<a name=\"securitySchemeFlows\"></a>flows | [OAuth Flows Object](#oauthFlowsObject) | `oauth2` | **REQUIRED**. An object containing configuration information for the flow types supported.\n<a name=\"securitySchemeOpenIdConnectUrl\"></a>openIdConnectUrl | `string` | `openIdConnect` | **REQUIRED**. OpenId Connect URL to discover OAuth2 configuration values. This MUST be in the form of a URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n##### Security Scheme Object Example\n\n###### User/Password Authentication Sample\n\n```json\n{\n  \"type\": \"userPassword\"\n}\n```\n\n```yaml\ntype: userPassword\n```\n\n###### API Key Authentication Sample\n\n```json\n{\n  \"type\": \"apiKey\",\n  \"in\": \"user\"\n}\n```\n\n```yaml\ntype: apiKey,\nin: user\n```\n\n###### X.509 Authentication Sample\n\n```json\n{\n  \"type\": \"X509\"\n}\n```\n\n```yaml\ntype: X509\n```\n\n###### End-to-end Encryption Authentication Sample\n\n```json\n{\n  \"type\": \"symmetricEncryption\"\n}\n```\n\n```yaml\ntype: symmetricEncryption\n```\n\n###### Basic Authentication Sample\n\n```json\n{\n  \"type\": \"http\",\n  \"scheme\": \"basic\"\n}\n```\n\n```yaml\ntype: http\nscheme: basic\n```\n\n###### API Key Sample\n\n```json\n{\n  \"type\": \"httpApiKey\",\n  \"name\": \"api_key\",\n  \"in\": \"header\"\n}\n```\n\n```yaml\ntype: httpApiKey\nname: api_key\nin: header\n```\n\n###### JWT Bearer Sample\n\n```json\n{\n  \"type\": \"http\",\n  \"scheme\": \"bearer\",\n  \"bearerFormat\": \"JWT\"\n}\n```\n\n```yaml\ntype: http\nscheme: bearer\nbearerFormat: JWT\n```\n\n###### Implicit OAuth2 Sample\n\n```json\n{\n  \"type\": \"oauth2\",\n  \"flows\": {\n    \"implicit\": {\n      \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n      \"scopes\": {\n        \"write:pets\": \"modify pets in your account\",\n        \"read:pets\": \"read your pets\"\n      }\n    }\n  }\n}\n```\n\n```yaml\ntype: oauth2\nflows:\n  implicit:\n    authorizationUrl: https://example.com/api/oauth/dialog\n    scopes:\n      write:pets: modify pets in your account\n      read:pets: read your pets\n```\n\n###### SASL Sample\n\n```json\n{\n  \"type\": \"scramSha512\"\n}\n```\n\n```yaml\ntype: scramSha512\n```\n\n#### <a name=\"oauthFlowsObject\"></a>OAuth Flows Object\n\nAllows configuration of the supported OAuth Flows.\n\n##### Fixed Fields\nField Name | Type | Description\n---|:---:|---\n<a name=\"oauthFlowsImplicit\"></a>implicit| [OAuth Flow Object](#oauthFlowObject) | Configuration for the OAuth Implicit flow\n<a name=\"oauthFlowsPassword\"></a>password| [OAuth Flow Object](#oauthFlowObject) | Configuration for the OAuth Resource Owner Protected Credentials flow\n<a name=\"oauthFlowsClientCredentials\"></a>clientCredentials| [OAuth Flow Object](#oauthFlowObject) | Configuration for the OAuth Client Credentials flow.\n<a name=\"oauthFlowsAuthorizationCode\"></a>authorizationCode| [OAuth Flow Object](#oauthFlowObject) | Configuration for the OAuth Authorization Code flow.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n#### <a name=\"oauthFlowObject\"></a>OAuth Flow Object\n\nConfiguration details for a supported OAuth Flow\n\n##### Fixed Fields\nField Name | Type | Applies To | Description\n---|:---:|---|---\n<a name=\"oauthFlowAuthorizationUrl\"></a>authorizationUrl | `string` | `oauth2` (`\"implicit\"`, `\"authorizationCode\"`) | **REQUIRED**. The authorization URL to be used for this flow. This MUST be in the form of a URL.\n<a name=\"oauthFlowTokenUrl\"></a>tokenUrl | `string` | `oauth2` (`\"password\"`, `\"clientCredentials\"`, `\"authorizationCode\"`) | **REQUIRED**. The token URL to be used for this flow. This MUST be in the form of a URL.\n<a name=\"oauthFlowRefreshUrl\"></a>refreshUrl | `string` | `oauth2` | The URL to be used for obtaining refresh tokens. This MUST be in the form of a URL.\n<a name=\"oauthFlowScopes\"></a>scopes | Map[`string`, `string`] | `oauth2` | **REQUIRED**. The available scopes for the OAuth2 security scheme. A map between the scope name and a short description for it.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n##### OAuth Flow Object Examples\n\n```JSON\n{\n  \"type\": \"oauth2\",\n  \"flows\": {\n    \"implicit\": {\n      \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n      \"scopes\": {\n        \"write:pets\": \"modify pets in your account\",\n        \"read:pets\": \"read your pets\"\n      }\n    },\n    \"authorizationCode\": {\n      \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n      \"tokenUrl\": \"https://example.com/api/oauth/token\",\n      \"scopes\": {\n        \"write:pets\": \"modify pets in your account\",\n        \"read:pets\": \"read your pets\"\n      }\n    }\n  }\n}\n```\n\n```YAML\ntype: oauth2\nflows:\n  implicit:\n    authorizationUrl: https://example.com/api/oauth/dialog\n    scopes:\n      write:pets: modify pets in your account\n      read:pets: read your pets\n  authorizationCode:\n    authorizationUrl: https://example.com/api/oauth/dialog\n    tokenUrl: https://example.com/api/oauth/token\n    scopes:\n      write:pets: modify pets in your account\n      read:pets: read your pets\n```\n\n#### <a name=\"securityRequirementObject\"></a>Security Requirement Object\n\nLists the required security schemes to execute this operation.\nThe name used for each property MUST correspond to a security scheme declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject).\n\nWhen a list of Security Requirement Objects is defined on a [Server object](#serverObject), only one of the Security Requirement Objects in the list needs to be satisfied to authorize the connection.\n\n##### Patterned Fields\n\nField Pattern | Type | Description\n---|:---:|---\n<a name=\"securityRequirementsName\"></a>{name} | [`string`] | Each name MUST correspond to a security scheme which is declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject). If the security scheme is of type `\"oauth2\"` or `\"openIdConnect\"`, then the value is a list of scope names. Provide scopes that are required to establish successful connection with the server. If scopes are not needed, the list can be empty. For other security scheme types, the array MUST be empty.\n\n##### Security Requirement Object Examples\n\n###### User/Password Security Requirement\n\n```json\n{\n  \"user_pass\": []\n}\n```\n\n```yaml\nuser_pass: []\n```\n\n###### API Key Security Requirement\n\n```json\n{\n  \"api_key\": []\n}\n```\n\n```yaml\napi_key: []\n```\n\n###### OAuth2 Security Requirement\n\n```json\n{\n  \"petstore_auth\": [\n    \"write:pets\",\n    \"read:pets\"\n  ]\n}\n```\n\n```yaml\npetstore_auth:\n- write:pets\n- read:pets\n```\n\n### <a name=\"correlationIdObject\"></a>Correlation ID Object\n\nAn object that specifies an identifier at design time that can used for message tracing and correlation. \n\nFor specifying and computing the location of a Correlation ID, a [runtime expression](#runtimeExpression) is used.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---|---\ndescription | `string` | An optional description of the identifier. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\nlocation | `string` | **REQUIRED.** A [runtime expression](#runtimeExpression) that specifies the location of the correlation ID.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Examples\n\n```json\n{\n  \"description\": \"Default Correlation ID\",\n  \"location\": \"$message.header#/correlationId\"\n}\n```\n\n```yaml\ndescription: Default Correlation ID\nlocation: $message.header#/correlationId\n```\n\n### <a name=\"runtimeExpression\"></a>Runtime Expression\n\nA runtime expression allows values to be defined based on information that will be available within the message.\nThis mechanism is used by [Correlation ID Object](#correlationIdObject).\n\nThe runtime expression is defined by the following [ABNF](https://tools.ietf.org/html/rfc5234) syntax:\n\n```\n      expression = ( \"$message\" \".\" source )\n      source = ( header-reference | payload-reference )\n      header-reference = \"header\" [\"#\" fragment]\n      payload-reference = \"payload\" [\"#\" fragment]\n      fragment = a JSON Pointer [RFC 6901](https://tools.ietf.org/html/rfc6901)\n```\n\nThe table below provides examples of runtime expressions and examples of their use in a value:\n\n##### <a name=\"runtimeExpressionExamples\"></a>Examples\n\nSource Location | Example expression  | Notes\n---|:---|:---|\nMessage Header Property | `$message.header#/MQMD/CorrelId` | Correlation ID is set using the `CorrelId` value from the `MQMD` header.\nMessage Payload Property | `$message.payload#/messageId` | Correlation ID is set using the `messageId` value from the message payload.\n\nRuntime expressions preserve the type of the referenced value.\n\n### <a name=\"specificationExtensions\"></a>Specification Extensions\n\nWhile the AsyncAPI Specification tries to accommodate most use cases, additional data can be added to extend the specification at certain points.\n\nThe extensions properties are implemented as patterned fields that are always prefixed by `\"x-\"`.\n\nField Pattern | Type | Description\n---|:---:|---\n<a name=\"infoExtensions\"></a>`^x-[\\w\\d\\-\\_]+$` | Any | Allows extensions to the AsyncAPI Schema. The field name MUST begin with `x-`, for example, `x-internal-id`. The value can be `null`, a primitive, an array or an object. Can have any valid JSON format value.\n\nThe extensions may or may not be supported by the available tooling, but those may be extended as well to add requested support (if tools are internal or open-sourced).\n\n### <a name=\"dataTypeFormat\"></a>Data Type Formats\n\nPrimitives have an optional modifier property: `format`.\nThe AsyncAPI specification uses several known formats to more finely define the data type being used.\nHowever, the `format` property is an open `string`-valued property, and can have any value to support documentation needs.\nFormats such as `\"email\"`, `\"uuid\"`, etc., can be used even though they are not defined by this specification.\nTypes that are not accompanied by a `format` property follow their definition from the JSON Schema.\nTools that do not recognize a specific `format` MAY default back to the `type` alone, as if the `format` was not specified.\n\nThe formats defined by the AsyncAPI Specification are:\n\n\nCommon Name | `type` | [`format`](#dataTypeFormat) | Comments\n----------- | ------ | -------- | --------\ninteger | `integer` | `int32` | signed 32 bits\nlong | `integer` | `int64` | signed 64 bits\nfloat | `number` | `float` | |\ndouble | `number` | `double` | |\nstring | `string` | | |\nbyte | `string` | `byte` | base64 encoded characters\nbinary | `string` | `binary` | any sequence of octets\nboolean | `boolean` | | |\ndate | `string` | `date` | As defined by `full-date` - [RFC3339](https://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14)\ndateTime | `string` | `date-time` | As defined by `date-time` - [RFC3339](https://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14)\npassword | `string` | `password` | Used to hint UIs the input needs to be obscured.\n",
              "toc": [
                {
                  "content": "AsyncAPI Specification",
                  "slug": "asyncapi-specification",
                  "lvl": 1,
                  "i": 0,
                  "seen": 0
                },
                {
                  "content": "Disclaimer",
                  "slug": "disclaimer",
                  "lvl": 4,
                  "i": 1,
                  "seen": 0
                },
                {
                  "content": "Version 2.4.0",
                  "slug": "version-240",
                  "lvl": 4,
                  "i": 2,
                  "seen": 0
                },
                {
                  "content": "Introduction",
                  "slug": "introduction",
                  "lvl": 2,
                  "i": 3,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitions\"></a>Definitions",
                  "slug": "definitions",
                  "lvl": 2,
                  "i": 4,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsServer\"></a>Server",
                  "slug": "definitionsServer",
                  "lvl": 4,
                  "i": 5,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsApplication\"></a>Application",
                  "slug": "definitionsApplication",
                  "lvl": 4,
                  "i": 6,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsProducer\"></a>Producer",
                  "slug": "definitionsProducer",
                  "lvl": 4,
                  "i": 7,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsConsumer\"></a>Consumer",
                  "slug": "definitionsConsumer",
                  "lvl": 4,
                  "i": 8,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsMessage\"></a>Message",
                  "slug": "definitionsMessage",
                  "lvl": 4,
                  "i": 9,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsChannel\"></a>Channel",
                  "slug": "definitionsChannel",
                  "lvl": 4,
                  "i": 10,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsProtocol\"></a>Protocol",
                  "slug": "definitionsProtocol",
                  "lvl": 4,
                  "i": 11,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsBindings\"></a>Bindings",
                  "slug": "definitionsBindings",
                  "lvl": 4,
                  "i": 12,
                  "seen": 0
                },
                {
                  "content": "<a name=\"specification\"></a>Specification",
                  "slug": "specification",
                  "lvl": 2,
                  "i": 13,
                  "seen": 0
                },
                {
                  "content": "<a name=\"format\"></a>Format",
                  "slug": "format",
                  "lvl": 3,
                  "i": 14,
                  "seen": 0
                },
                {
                  "content": "<a name=\"file-structure\"></a>File Structure",
                  "slug": "file-structure",
                  "lvl": 3,
                  "i": 15,
                  "seen": 0
                },
                {
                  "content": "<a name=\"schema\"></a>Schema",
                  "slug": "schema",
                  "lvl": 3,
                  "i": 16,
                  "seen": 0
                },
                {
                  "content": "<a name=\"A2SObject\"></a>AsyncAPI Object",
                  "slug": "A2SObject",
                  "lvl": 4,
                  "i": 17,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 18,
                  "seen": 0
                },
                {
                  "content": "<a name=\"A2SVersionString\"></a>AsyncAPI Version String",
                  "slug": "A2SVersionString",
                  "lvl": 4,
                  "i": 19,
                  "seen": 0
                },
                {
                  "content": "<a name=\"A2SIdString\"></a>Identifier",
                  "slug": "A2SIdString",
                  "lvl": 4,
                  "i": 20,
                  "seen": 0
                },
                {
                  "content": "Examples",
                  "slug": "examples",
                  "lvl": 6,
                  "i": 21,
                  "seen": 0
                },
                {
                  "content": "<a name=\"infoObject\"></a>Info Object",
                  "slug": "infoObject",
                  "lvl": 4,
                  "i": 22,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 23,
                  "seen": 1
                },
                {
                  "content": "Info Object Example:",
                  "slug": "info-object-example",
                  "lvl": 5,
                  "i": 24,
                  "seen": 0
                },
                {
                  "content": "<a name=\"contactObject\"></a>Contact Object",
                  "slug": "contactObject",
                  "lvl": 4,
                  "i": 25,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 26,
                  "seen": 2
                },
                {
                  "content": "Contact Object Example:",
                  "slug": "contact-object-example",
                  "lvl": 5,
                  "i": 27,
                  "seen": 0
                },
                {
                  "content": "<a name=\"licenseObject\"></a>License Object",
                  "slug": "licenseObject",
                  "lvl": 4,
                  "i": 28,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 29,
                  "seen": 3
                },
                {
                  "content": "License Object Example:",
                  "slug": "license-object-example",
                  "lvl": 5,
                  "i": 30,
                  "seen": 0
                },
                {
                  "content": "<a name=\"serversObject\"></a>Servers Object",
                  "slug": "serversObject",
                  "lvl": 4,
                  "i": 31,
                  "seen": 0
                },
                {
                  "content": "Patterned Fields",
                  "slug": "patterned-fields",
                  "lvl": 5,
                  "i": 32,
                  "seen": 0
                },
                {
                  "content": "Servers Object Example",
                  "slug": "servers-object-example",
                  "lvl": 5,
                  "i": 33,
                  "seen": 0
                },
                {
                  "content": "<a name=\"serverObject\"></a>Server Object",
                  "slug": "serverObject",
                  "lvl": 4,
                  "i": 34,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 35,
                  "seen": 4
                },
                {
                  "content": "Server Object Example",
                  "slug": "server-object-example",
                  "lvl": 5,
                  "i": 36,
                  "seen": 0
                },
                {
                  "content": "<a name=\"serverVariableObject\"></a>Server Variable Object",
                  "slug": "serverVariableObject",
                  "lvl": 4,
                  "i": 37,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 38,
                  "seen": 5
                },
                {
                  "content": "<a name=\"defaultContentTypeString\"></a>Default Content Type",
                  "slug": "defaultContentTypeString",
                  "lvl": 4,
                  "i": 39,
                  "seen": 0
                },
                {
                  "content": "Default Content Type Example",
                  "slug": "default-content-type-example",
                  "lvl": 5,
                  "i": 40,
                  "seen": 0
                },
                {
                  "content": "<a name=\"channelsObject\"></a>Channels Object",
                  "slug": "channelsObject",
                  "lvl": 4,
                  "i": 41,
                  "seen": 0
                },
                {
                  "content": "Patterned Fields",
                  "slug": "patterned-fields",
                  "lvl": 5,
                  "i": 42,
                  "seen": 1
                },
                {
                  "content": "Channels Object Example",
                  "slug": "channels-object-example",
                  "lvl": 5,
                  "i": 43,
                  "seen": 0
                },
                {
                  "content": "<a name=\"channelItemObject\"></a>Channel Item Object",
                  "slug": "channelItemObject",
                  "lvl": 4,
                  "i": 44,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 45,
                  "seen": 6
                },
                {
                  "content": "Channel Item Object Example",
                  "slug": "channel-item-object-example",
                  "lvl": 5,
                  "i": 46,
                  "seen": 0
                },
                {
                  "content": "<a name=\"operationObject\"></a>Operation Object",
                  "slug": "operationObject",
                  "lvl": 4,
                  "i": 47,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 48,
                  "seen": 7
                },
                {
                  "content": "Operation Object Example",
                  "slug": "operation-object-example",
                  "lvl": 5,
                  "i": 49,
                  "seen": 0
                },
                {
                  "content": "<a name=\"operationTraitObject\"></a>Operation Trait Object",
                  "slug": "operationTraitObject",
                  "lvl": 4,
                  "i": 50,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 51,
                  "seen": 8
                },
                {
                  "content": "Operation Trait Object Example",
                  "slug": "operation-trait-object-example",
                  "lvl": 5,
                  "i": 52,
                  "seen": 0
                },
                {
                  "content": "<a name=\"parametersObject\"></a>Parameters Object",
                  "slug": "parametersObject",
                  "lvl": 4,
                  "i": 53,
                  "seen": 0
                },
                {
                  "content": "Patterned Fields",
                  "slug": "patterned-fields",
                  "lvl": 5,
                  "i": 54,
                  "seen": 2
                },
                {
                  "content": "Parameters Object Example",
                  "slug": "parameters-object-example",
                  "lvl": 5,
                  "i": 55,
                  "seen": 0
                },
                {
                  "content": "<a name=\"parameterObject\"></a>Parameter Object",
                  "slug": "parameterObject",
                  "lvl": 4,
                  "i": 56,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 57,
                  "seen": 9
                },
                {
                  "content": "Parameter Object Example",
                  "slug": "parameter-object-example",
                  "lvl": 5,
                  "i": 58,
                  "seen": 0
                },
                {
                  "content": "<a name=\"serverBindingsObject\"></a>Server Bindings Object",
                  "slug": "serverBindingsObject",
                  "lvl": 4,
                  "i": 59,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 60,
                  "seen": 10
                },
                {
                  "content": "<a name=\"channelBindingsObject\"></a>Channel Bindings Object",
                  "slug": "channelBindingsObject",
                  "lvl": 4,
                  "i": 61,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 62,
                  "seen": 11
                },
                {
                  "content": "<a name=\"operationBindingsObject\"></a>Operation Bindings Object",
                  "slug": "operationBindingsObject",
                  "lvl": 4,
                  "i": 63,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 64,
                  "seen": 12
                },
                {
                  "content": "<a name=\"messageBindingsObject\"></a>Message Bindings Object",
                  "slug": "messageBindingsObject",
                  "lvl": 4,
                  "i": 65,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 66,
                  "seen": 13
                },
                {
                  "content": "<a name=\"messageObject\"></a>Message Object",
                  "slug": "messageObject",
                  "lvl": 4,
                  "i": 67,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 68,
                  "seen": 14
                },
                {
                  "content": "<a name=\"messageObjectSchemaFormatTable\"></a>Schema formats table",
                  "slug": "messageObjectSchemaFormatTable",
                  "lvl": 5,
                  "i": 69,
                  "seen": 0
                },
                {
                  "content": "Message Object Example",
                  "slug": "message-object-example",
                  "lvl": 5,
                  "i": 70,
                  "seen": 0
                },
                {
                  "content": "<a name=\"messageTraitObject\"></a>Message Trait Object",
                  "slug": "messageTraitObject",
                  "lvl": 4,
                  "i": 71,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 72,
                  "seen": 15
                },
                {
                  "content": "Message Trait Object Example",
                  "slug": "message-trait-object-example",
                  "lvl": 5,
                  "i": 73,
                  "seen": 0
                },
                {
                  "content": "<a name=\"messageExampleObject\"></a> Message Example Object",
                  "slug": "messageExampleObject",
                  "lvl": 4,
                  "i": 74,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 75,
                  "seen": 16
                },
                {
                  "content": "Message Example Object Example",
                  "slug": "message-example-object-example",
                  "lvl": 5,
                  "i": 76,
                  "seen": 0
                },
                {
                  "content": "<a name=\"tagsObject\"></a>Tags Object",
                  "slug": "tagsObject",
                  "lvl": 4,
                  "i": 77,
                  "seen": 0
                },
                {
                  "content": "<a name=\"tagObject\"></a>Tag Object",
                  "slug": "tagObject",
                  "lvl": 4,
                  "i": 78,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 79,
                  "seen": 17
                },
                {
                  "content": "Tag Object Example",
                  "slug": "tag-object-example",
                  "lvl": 5,
                  "i": 80,
                  "seen": 0
                },
                {
                  "content": "<a name=\"externalDocumentationObject\"></a>External Documentation Object",
                  "slug": "externalDocumentationObject",
                  "lvl": 4,
                  "i": 81,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 82,
                  "seen": 18
                },
                {
                  "content": "External Documentation Object Example",
                  "slug": "external-documentation-object-example",
                  "lvl": 5,
                  "i": 83,
                  "seen": 0
                },
                {
                  "content": "<a name=\"referenceObject\"></a>Reference Object",
                  "slug": "referenceObject",
                  "lvl": 4,
                  "i": 84,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 85,
                  "seen": 19
                },
                {
                  "content": "Reference Object Example",
                  "slug": "reference-object-example",
                  "lvl": 5,
                  "i": 86,
                  "seen": 0
                },
                {
                  "content": "<a name=\"componentsObject\"></a>Components Object",
                  "slug": "componentsObject",
                  "lvl": 4,
                  "i": 87,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 88,
                  "seen": 20
                },
                {
                  "content": "Components Object Example",
                  "slug": "components-object-example",
                  "lvl": 5,
                  "i": 89,
                  "seen": 0
                },
                {
                  "content": "<a name=\"schemaObject\"></a>Schema Object",
                  "slug": "schemaObject",
                  "lvl": 4,
                  "i": 90,
                  "seen": 0
                },
                {
                  "content": "Properties",
                  "slug": "properties",
                  "lvl": 5,
                  "i": 91,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 92,
                  "seen": 21
                },
                {
                  "content": "<a name=\"schemaComposition\"></a>Composition and Inheritance (Polymorphism)",
                  "slug": "schemaComposition",
                  "lvl": 6,
                  "i": 93,
                  "seen": 0
                },
                {
                  "content": "Schema Object Examples",
                  "slug": "schema-object-examples",
                  "lvl": 5,
                  "i": 94,
                  "seen": 0
                },
                {
                  "content": "Primitive Sample",
                  "slug": "primitive-sample",
                  "lvl": 6,
                  "i": 95,
                  "seen": 0
                },
                {
                  "content": "Simple Model",
                  "slug": "simple-model",
                  "lvl": 6,
                  "i": 96,
                  "seen": 0
                },
                {
                  "content": "Model with Map/Dictionary Properties",
                  "slug": "model-with-mapdictionary-properties",
                  "lvl": 6,
                  "i": 97,
                  "seen": 0
                },
                {
                  "content": "Model with Example",
                  "slug": "model-with-example",
                  "lvl": 6,
                  "i": 98,
                  "seen": 0
                },
                {
                  "content": "Model with Boolean Schemas",
                  "slug": "model-with-boolean-schemas",
                  "lvl": 6,
                  "i": 99,
                  "seen": 0
                },
                {
                  "content": "Models with Composition",
                  "slug": "models-with-composition",
                  "lvl": 6,
                  "i": 100,
                  "seen": 0
                },
                {
                  "content": "Models with Polymorphism Support",
                  "slug": "models-with-polymorphism-support",
                  "lvl": 6,
                  "i": 101,
                  "seen": 0
                },
                {
                  "content": "<a name=\"securitySchemeObject\"></a>Security Scheme Object",
                  "slug": "securitySchemeObject",
                  "lvl": 4,
                  "i": 102,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 103,
                  "seen": 22
                },
                {
                  "content": "Security Scheme Object Example",
                  "slug": "security-scheme-object-example",
                  "lvl": 5,
                  "i": 104,
                  "seen": 0
                },
                {
                  "content": "User/Password Authentication Sample",
                  "slug": "userpassword-authentication-sample",
                  "lvl": 6,
                  "i": 105,
                  "seen": 0
                },
                {
                  "content": "API Key Authentication Sample",
                  "slug": "api-key-authentication-sample",
                  "lvl": 6,
                  "i": 106,
                  "seen": 0
                },
                {
                  "content": "X.509 Authentication Sample",
                  "slug": "x509-authentication-sample",
                  "lvl": 6,
                  "i": 107,
                  "seen": 0
                },
                {
                  "content": "End-to-end Encryption Authentication Sample",
                  "slug": "end-to-end-encryption-authentication-sample",
                  "lvl": 6,
                  "i": 108,
                  "seen": 0
                },
                {
                  "content": "Basic Authentication Sample",
                  "slug": "basic-authentication-sample",
                  "lvl": 6,
                  "i": 109,
                  "seen": 0
                },
                {
                  "content": "API Key Sample",
                  "slug": "api-key-sample",
                  "lvl": 6,
                  "i": 110,
                  "seen": 0
                },
                {
                  "content": "JWT Bearer Sample",
                  "slug": "jwt-bearer-sample",
                  "lvl": 6,
                  "i": 111,
                  "seen": 0
                },
                {
                  "content": "Implicit OAuth2 Sample",
                  "slug": "implicit-oauth2-sample",
                  "lvl": 6,
                  "i": 112,
                  "seen": 0
                },
                {
                  "content": "SASL Sample",
                  "slug": "sasl-sample",
                  "lvl": 6,
                  "i": 113,
                  "seen": 0
                },
                {
                  "content": "<a name=\"oauthFlowsObject\"></a>OAuth Flows Object",
                  "slug": "oauthFlowsObject",
                  "lvl": 4,
                  "i": 114,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 115,
                  "seen": 23
                },
                {
                  "content": "<a name=\"oauthFlowObject\"></a>OAuth Flow Object",
                  "slug": "oauthFlowObject",
                  "lvl": 4,
                  "i": 116,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 117,
                  "seen": 24
                },
                {
                  "content": "OAuth Flow Object Examples",
                  "slug": "oauth-flow-object-examples",
                  "lvl": 5,
                  "i": 118,
                  "seen": 0
                },
                {
                  "content": "<a name=\"securityRequirementObject\"></a>Security Requirement Object",
                  "slug": "securityRequirementObject",
                  "lvl": 4,
                  "i": 119,
                  "seen": 0
                },
                {
                  "content": "Patterned Fields",
                  "slug": "patterned-fields",
                  "lvl": 5,
                  "i": 120,
                  "seen": 3
                },
                {
                  "content": "Security Requirement Object Examples",
                  "slug": "security-requirement-object-examples",
                  "lvl": 5,
                  "i": 121,
                  "seen": 0
                },
                {
                  "content": "User/Password Security Requirement",
                  "slug": "userpassword-security-requirement",
                  "lvl": 6,
                  "i": 122,
                  "seen": 0
                },
                {
                  "content": "API Key Security Requirement",
                  "slug": "api-key-security-requirement",
                  "lvl": 6,
                  "i": 123,
                  "seen": 0
                },
                {
                  "content": "OAuth2 Security Requirement",
                  "slug": "oauth2-security-requirement",
                  "lvl": 6,
                  "i": 124,
                  "seen": 0
                },
                {
                  "content": "<a name=\"correlationIdObject\"></a>Correlation ID Object",
                  "slug": "correlationIdObject",
                  "lvl": 3,
                  "i": 125,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 126,
                  "seen": 25
                },
                {
                  "content": "Examples",
                  "slug": "examples",
                  "lvl": 5,
                  "i": 127,
                  "seen": 1
                },
                {
                  "content": "<a name=\"runtimeExpression\"></a>Runtime Expression",
                  "slug": "runtimeExpression",
                  "lvl": 3,
                  "i": 128,
                  "seen": 0
                },
                {
                  "content": "<a name=\"runtimeExpressionExamples\"></a>Examples",
                  "slug": "runtimeExpressionExamples",
                  "lvl": 5,
                  "i": 129,
                  "seen": 0
                },
                {
                  "content": "<a name=\"specificationExtensions\"></a>Specification Extensions",
                  "slug": "specificationExtensions",
                  "lvl": 3,
                  "i": 130,
                  "seen": 0
                },
                {
                  "content": "<a name=\"dataTypeFormat\"></a>Data Type Formats",
                  "slug": "dataTypeFormat",
                  "lvl": 3,
                  "i": 131,
                  "seen": 0
                }
              ],
              "slug": "/docs/reference/specification/v2.4.0",
              "filePath": "pages/docs/reference/specification/v2.4.0.md",
              "sectionTitle": "Specification"
            },
            {
              "meta": {
                "weight": -3,
                "title": "2.3.0"
              },
              "content": "# AsyncAPI Specification\n\n#### Disclaimer\n\nPart of this content has been taken from the great work done by the folks at the [OpenAPI Initiative](https://openapis.org). Mainly because **it's a great work** and we want to keep as much compatibility as possible with the [OpenAPI Specification](https://github.com/OAI/OpenAPI-Specification).\n\n#### Version 2.3.0\n\nThe key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC 2119](https://www.ietf.org/rfc/rfc2119.txt).\n\nThe AsyncAPI Specification is licensed under [The Apache License, Version 2.0](https://www.apache.org/licenses/LICENSE-2.0.html).\n\n## Introduction\n\nThe AsyncAPI Specification is a project used to describe and document message-driven APIs in a machine-readable format. It‚Äôs protocol-agnostic, so you can use it for APIs that work over any protocol (e.g., AMQP, MQTT, WebSockets, Kafka, STOMP, HTTP, Mercure, etc).\n\nThe AsyncAPI Specification defines a set of files required to describe such an API.\nThese files can then be used to create utilities, such as documentation, integration and/or testing tools.\n\nThe file(s) MUST describe the operations an [application](#definitionsApplication) accepts. For instance, consider the following AsyncAPI definition snippet:\n\n```yaml\nuser/signedup:\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignUp\"\n```\n\nIt means that the [application](#definitionsApplication) allows [consumers](#definitionsConsumer) to subscribe to the `user/signedup` [channel](#definitionsChannel) to receive userSignUp [messages](#definitionsMessage) produced by the application.\n\n**The AsyncAPI specification does not assume any kind of software topology, architecture or pattern.** Therefore, a server MAY be a message broker, a web server or any other kind of computer program capable of sending and/or receiving data. However, AsyncAPI offers a mechanism called \"bindings\" that aims to help with more specific information about the protocol.\n\n\n## <a name=\"definitions\"></a>Definitions\n\n#### <a name=\"definitionsApplication\"></a>Application\nAn application is any kind of computer program or a group of them. It MUST be a [producer](#definitionsProducer), a [consumer](#definitionsConsumer) or both. An application MAY be a microservice, IoT device (sensor), mainframe process, etc. An application MAY be written in any number of different programming languages as long as they support the selected [protocol](#definitionsProtocol). An application MUST also use a protocol supported by the server in order to connect and exchange [messages](#definitionsMessage). \n\n#### <a name=\"definitionsProducer\"></a>Producer\nA producer is a type of application, connected to a server, that is creating [messages](#definitionsMessage) and addressing them to [channels](#definitionsChannel). A producer MAY be publishing to multiple channels depending on the server, protocol, and use-case pattern.\n\n#### <a name=\"definitionsConsumer\"></a>Consumer\nA consumer is a type of application, connected to a server via a supported [protocol](#definitionsProtocol), that is consuming [messages](#definitionsMessage) from [channels](#definitionsChannel). A consumer MAY be consuming from multiple channels depending on the server, protocol, and the use-case pattern.\n\n#### <a name=\"definitionsMessage\"></a>Message\nA message is the mechanism by which information is exchanged via a channel between servers and applications. A message MUST contain a payload and MAY also contain headers. The headers MAY be subdivided into [protocol](#definitionsProtocol)-defined headers and header properties defined by the application which can act as supporting metadata. The payload contains the data, defined by the application, which MUST be serialized into a format (JSON, XML, Avro, binary, etc.). Since a message is a generic mechanism, it can support multiple interaction patterns such as event, command, request, or response. \n\n#### <a name=\"definitionsChannel\"></a>Channel\nA channel is an addressable component, made available by the server, for the organization of [messages](#definitionsMessage). [Producer](#definitionsProducer) applications send messages to channels and [consumer](#definitionsConsumer) applications consume messages from channels. Servers MAY support many channel instances, allowing messages with different content to be addressed to different channels. Depending on the server implementation, the channel MAY be included in the message via protocol-defined headers.\n\n#### <a name=\"definitionsProtocol\"></a>Protocol\nA protocol is the mechanism (wireline protocol or API) by which [messages](#definitionsMessage) are exchanged between the application and the [channel](#definitionsChannel). Example protocols include, but are not limited to, AMQP, HTTP, JMS, Kafka, Anypoint MQ, MQTT, Solace, STOMP, Mercure, WebSocket.  \n\n#### <a name=\"definitionsBindings\"></a>Bindings\nA \"binding\" (or \"protocol binding\") is a mechanism to define protocol-specific information. Therefore, a protocol binding MUST define protocol-specific information only. \n\n## <a name=\"specification\"></a>Specification\n\n### <a name=\"format\"></a>Format\n\nThe files describing the message-driven API in accordance with the AsyncAPI Specification are represented as JSON objects and conform to the JSON standards.\nYAML, being a superset of JSON, can be used as well to represent a A2S (AsyncAPI Specification) file.\n\nFor example, if a field is said to have an array value, the JSON array representation will be used:\n\n```yaml\n{\n   \"field\" : [...]\n}\n```\n\nWhile the API is described using JSON it does not impose a JSON input/output to the API itself.\n\nAll field names in the specification are **case sensitive**.\n\nThe schema exposes two types of fields.\nFixed fields, which have a declared name, and Patterned fields, which declare a regex pattern for the field name.\nPatterned fields can have multiple occurrences as long as each has a unique name.\n\nIn order to preserve the ability to round-trip between YAML and JSON formats, YAML version [1.2](https://www.yaml.org/spec/1.2/spec.html) is recommended along with some additional constraints:\n\n- Tags MUST be limited to those allowed by the [JSON Schema ruleset](https://www.yaml.org/spec/1.2/spec.html#id2803231)\n- Keys used in YAML maps MUST be limited to a scalar string, as defined by the YAML Failsafe schema ruleset\n\n### <a name=\"file-structure\"></a>File Structure\n\nAn AsyncAPI document MAY be made up of a single document or be divided into multiple,\nconnected parts at the discretion of the author. In the latter case, [Reference Objects](#referenceObject) are used.\n\nBy convention, the AsyncAPI Specification (A2S) file is named `asyncapi.json` or `asyncapi.yaml`.\n\n### <a name=\"schema\"></a>Schema\n\n#### <a name=\"A2SObject\"></a>AsyncAPI Object\n\nThis is the root document object for the API specification.\nIt combines resource listing and API declaration together into one document.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"A2SAsyncAPI\"></a>asyncapi | [AsyncAPI Version String](#A2SVersionString) | **Required.** Specifies the AsyncAPI Specification version being used. It can be used by tooling Specifications and clients to interpret the version. The structure shall be `major`.`minor`.`patch`, where `patch` versions _must_ be compatible with the existing `major`.`minor` tooling. Typically patch versions will be introduced to address errors in the documentation, and tooling should typically be compatible with the corresponding `major`.`minor` (1.0.*). Patch versions will correspond to patches of this document.\n<a name=\"A2SId\"></a>id | [Identifier](#A2SIdString) | Identifier of the [application](#definitionsApplication) the AsyncAPI document is defining.\n<a name=\"A2SInfo\"></a>info | [Info Object](#infoObject) | **Required.** Provides metadata about the API. The metadata can be used by the clients if needed.\n<a name=\"A2SServers\"></a>servers | [Servers Object](#serversObject) | Provides connection details of servers.\n<a name=\"A2SDefaultContentType\"></a>defaultContentType | [Default Content Type](#defaultContentTypeString) | Default content type to use when encoding/decoding a message's payload.\n<a name=\"A2SChannels\"></a>channels | [Channels Object](#channelsObject) | **Required** The available channels and messages for the API.\n<a name=\"A2SComponents\"></a>components | [Components Object](#componentsObject) | An element to hold various schemas for the specification.\n<a name=\"A2STags\"></a>tags | [Tags Object](#tagsObject) | A list of tags used by the specification with additional metadata. Each tag name in the list MUST be unique.\n<a name=\"A2SExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation.\n\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n#### <a name=\"A2SVersionString\"></a>AsyncAPI Version String\n\nThe version string signifies the version of the AsyncAPI Specification that the document complies to.\nThe format for this string _must_ be `major`.`minor`.`patch`.  The `patch` _may_ be suffixed by a hyphen and extra alphanumeric characters.\n\nA `major`.`minor` shall be used to designate the AsyncAPI Specification version, and will be considered compatible with the AsyncAPI Specification specified by that `major`.`minor` version.\nThe patch version will not be considered by tooling, making no distinction between `1.0.0` and `1.0.1`.\n\nIn subsequent versions of the AsyncAPI Specification, care will be given such that increments of the `minor` version should not interfere with operations of tooling developed to a lower minor version. Thus a hypothetical `1.1.0` specification should be usable with tooling designed for `1.0.0`.\n\n#### <a name=\"A2SIdString\"></a>Identifier\n\nThis field represents a unique universal identifier of the [application](#definitionsApplication) the AsyncAPI document is defining. It must conform to the URI format, according to [RFC3986](https://tools.ietf.org/html/rfc3986).\n\nIt is RECOMMENDED to use a [URN](https://tools.ietf.org/html/rfc8141) to globally and uniquely identify the application during long periods of time, even after it becomes unavailable or ceases to exist.\n\n###### Examples\n\n```json\n{\n  \"id\": \"urn:com:smartylighting:streetlights:server\"\n}\n```\n\n```yaml\nid: 'urn:com:smartylighting:streetlights:server'\n```\n\n```json\n{\n  \"id\": \"https://github.com/smartylighting/streetlights-server\"\n}\n```\n\n```yaml\nid: 'https://github.com/smartylighting/streetlights-server'\n```\n\n#### <a name=\"infoObject\"></a>Info Object\n\nThe object provides metadata about the API.\nThe metadata can be used by the clients if needed.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"infoObjectTitle\"></a>title | `string` | **Required.** The title of the application.\n<a name=\"infoObjectVersion\"></a>version | `string` | **Required** Provides the version of the application API (not to be confused with the specification version).\n<a name=\"infoObjectDescription\"></a>description | `string` | A short description of the application. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"infoObjectTermsOfService\"></a>termsOfService | `string` | A URL to the Terms of Service for the API. MUST be in the format of a URL.\n<a name=\"infoObjectContact\"></a>contact | [Contact Object](#contactObject) | The contact information for the exposed API.\n<a name=\"infoObjectLicense\"></a>license | [License Object](#licenseObject) | The license information for the exposed API.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Info Object Example:\n\n```json\n{\n  \"title\": \"AsyncAPI Sample App\",\n  \"description\": \"This is a sample server.\",\n  \"termsOfService\": \"https://asyncapi.org/terms/\",\n  \"contact\": {\n    \"name\": \"API Support\",\n    \"url\": \"https://www.asyncapi.org/support\",\n    \"email\": \"support@asyncapi.org\"\n  },\n  \"license\": {\n    \"name\": \"Apache 2.0\",\n    \"url\": \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n  },\n  \"version\": \"1.0.1\"\n}\n```\n\n```yaml\ntitle: AsyncAPI Sample App\ndescription: This is a sample server.\ntermsOfService: https://asyncapi.org/terms/\ncontact:\n  name: API Support\n  url: https://www.asyncapi.org/support\n  email: support@asyncapi.org\nlicense:\n  name: Apache 2.0\n  url: https://www.apache.org/licenses/LICENSE-2.0.html\nversion: 1.0.1\n```\n\n#### <a name=\"contactObject\"></a>Contact Object\n\nContact information for the exposed API.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"contactObjectName\"></a>name | `string` | The identifying name of the contact person/organization.\n<a name=\"contactObjectUrl\"></a>url | `string` | The URL pointing to the contact information. MUST be in the format of a URL.\n<a name=\"contactObjectEmail\"></a>email | `string` | The email address of the contact person/organization. MUST be in the format of an email address.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Contact Object Example:\n\n```json\n{\n  \"name\": \"API Support\",\n  \"url\": \"https://www.example.com/support\",\n  \"email\": \"support@example.com\"\n}\n```\n\n```yaml\nname: API Support\nurl: https://www.example.com/support\nemail: support@example.com\n```\n\n#### <a name=\"licenseObject\"></a>License Object\n\nLicense information for the exposed API.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"licenseObjectName\"></a>name | `string` | **Required.** The license name used for the API.\n<a name=\"licenseObjectUrl\"></a>url | `string` | A URL to the license used for the API. MUST be in the format of a URL.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### License Object Example:\n\n```json\n{\n  \"name\": \"Apache 2.0\",\n  \"url\": \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n}\n```\n\n```yaml\nname: Apache 2.0\nurl: https://www.apache.org/licenses/LICENSE-2.0.html\n```\n\n#### <a name=\"serversObject\"></a>Servers Object\n\nThe Servers Object is a map of [Server Objects](#serverObject).\n\n##### Patterned Fields\n\nField Pattern | Type | Description\n---|:---:|---\n<a name=\"serversObjectServer\"></a>`^[A-Za-z0-9_\\-]+$` | [Server Object](#serverObject) | The definition of a server this application MAY connect to.\n\n##### Servers Object Example\n\n```json\n{\n  \"production\": {\n    \"url\": \"development.gigantic-server.com\",\n    \"description\": \"Development server\",\n    \"protocol\": \"kafka\",\n    \"protocolVersion\": \"1.0.0\"\n  }\n}\n```\n\n```yaml\nproduction:\n  url: development.gigantic-server.com\n  description: Development server\n  protocol: kafka\n  protocolVersion: '1.0.0'\n```\n\n\n#### <a name=\"serverObject\"></a>Server Object\n\nAn object representing a message broker, a server or any other kind of computer program capable of sending and/or receiving data. This object is used to capture details such as URIs, protocols and security configuration. Variable substitution can be used so that some details, for example usernames and passwords, can be injected by code generation tools.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"serverObjectUrl\"></a>url | `string` | **REQUIRED**. A URL to the target host.  This URL supports Server Variables and MAY be relative, to indicate that the host location is relative to the location where the AsyncAPI document is being served. Variable substitutions will be made when a variable is named in `{`braces`}`.\n<a name=\"serverObjectProtocol\"></a>protocol | `string` | **REQUIRED**. The protocol this URL supports for connection. Supported protocol include, but are not limited to: `amqp`, `amqps`, `http`, `https`, `ibmmq`, `jms`, `kafka`, `kafka-secure`, `anypointmq`, `mqtt`, `secure-mqtt`, `solace`, `stomp`, `stomps`, `ws`, `wss`, `mercure`.\n<a name=\"serverObjectProtocolVersion\"></a>protocolVersion | `string` | The version of the protocol used for connection. For instance: AMQP `0.9.1`, HTTP `2.0`, Kafka `1.0.0`, etc.\n<a name=\"serverObjectDescription\"></a>description | `string` | An optional string describing the host designated by the URL. [CommonMark syntax](https://spec.commonmark.org/) MAY be used for rich text representation.\n<a name=\"serverObjectVariables\"></a>variables | Map[`string`, [Server Variable Object](#serverVariableObject)] | A map between a variable name and its value.  The value is used for substitution in the server's URL template.\n<a name=\"serverObjectSecurity\"></a>security | [[Security Requirement Object](#securityRequirementObject)] | A declaration of which security mechanisms can be used with this server. The list of values includes alternative security requirement objects that can be used. Only one of the security requirement objects need to be satisfied to authorize a connection or operation.\n<a name=\"serverObjectBindings\"></a>bindings | [Server Bindings Object](#serverBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the server.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n##### Server Object Example\n\nA single server would be described as:\n\n```json\n{\n  \"url\": \"development.gigantic-server.com\",\n  \"description\": \"Development server\",\n  \"protocol\": \"kafka\",\n  \"protocolVersion\": \"1.0.0\"\n}\n```\n\n```yaml\nurl: development.gigantic-server.com\ndescription: Development server\nprotocol: kafka\nprotocolVersion: '1.0.0'\n```\n\nThe following shows how multiple servers can be described, for example, at the AsyncAPI Object's [`servers`](#A2SServers):\n\n```json\n{\n  \"servers\": {\n    \"development\": {\n      \"url\": \"development.gigantic-server.com\",\n      \"description\": \"Development server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\"\n    },\n    \"staging\": {\n      \"url\": \"staging.gigantic-server.com\",\n      \"description\": \"Staging server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\"\n    },\n    \"production\": {\n      \"url\": \"api.gigantic-server.com\",\n      \"description\": \"Production server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\"\n    }\n  }\n}\n```\n\n```yaml\nservers:\n  development:\n    url: development.gigantic-server.com\n    description: Development server\n    protocol: amqp\n    protocolVersion: 0.9.1\n  staging:\n    url: staging.gigantic-server.com\n    description: Staging server\n    protocol: amqp\n    protocolVersion: 0.9.1\n  production:\n    url: api.gigantic-server.com\n    description: Production server\n    protocol: amqp\n    protocolVersion: 0.9.1\n```\n\nThe following shows how variables can be used for a server configuration:\n\n```json\n{\n  \"servers\": {\n    \"production\": {\n      \"url\": \"{username}.gigantic-server.com:{port}/{basePath}\",\n      \"description\": \"The production API server\",\n      \"protocol\": \"secure-mqtt\",\n      \"variables\": {\n        \"username\": {\n          \"default\": \"demo\",\n          \"description\": \"This value is assigned by the service provider, in this example `gigantic-server.com`\"\n        },\n        \"port\": {\n          \"enum\": [\n            \"8883\",\n            \"8884\"\n          ],\n          \"default\": \"8883\"\n        },\n        \"basePath\": {\n          \"default\": \"v2\"\n        }\n      }\n    }\n  }\n}\n```\n\n```yaml\nservers:\n  production:\n    url: '{username}.gigantic-server.com:{port}/{basePath}'\n    description: The production API server\n    protocol: secure-mqtt\n    variables:\n      username:\n        # note! no enum here means it is an open value\n        default: demo\n        description: This value is assigned by the service provider, in this example `gigantic-server.com`\n      port:\n        enum:\n          - '8883'\n          - '8884'\n        default: '8883'\n      basePath:\n        # open meaning there is the opportunity to use special base paths as assigned by the provider, default is `v2`\n        default: v2\n```\n\n\n#### <a name=\"serverVariableObject\"></a>Server Variable Object\n\nAn object representing a Server Variable for server URL template substitution.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"serverVariableObjectEnum\"></a>enum | [`string`] | An enumeration of string values to be used if the substitution options are from a limited set.\n<a name=\"serverVariableObjectDefault\"></a>default | `string` | The default value to use for substitution, and to send, if an alternate value is _not_ supplied.\n<a name=\"serverVariableObjectDescription\"></a>description | `string` | An optional description for the server variable. [CommonMark syntax](https://spec.commonmark.org/) MAY be used for rich text representation.\n<a name=\"serverVariableObjectExamples\"></a>examples | [`string`] | An array of examples of the server variable.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n\n\n#### <a name=\"defaultContentTypeString\"></a>Default Content Type\n\nA string representing the default content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. `application/json`). This value MUST be used by schema parsers when the [contentType](#messageObjectContentType) property is omitted.\n\nIn case a message can't be encoded/decoded using this value, schema parsers MUST use their default content type.\n\n##### Default Content Type Example\n\n```json\n{\n  \"defaultContentType\": \"application/json\"\n}\n```\n\n```yaml\ndefaultContentType: application/json\n```\n\n\n\n\n\n\n#### <a name=\"channelsObject\"></a>Channels Object\n\nHolds the relative paths to the individual channel and their operations. Channel paths are relative to servers.\n\nChannels are also known as \"topics\", \"routing keys\", \"event types\" or \"paths\".\n\n##### Patterned Fields\n\nField Pattern | Type | Description\n---|:---:|---\n<a name=\"channelsObjectChannel\"></a>{channel} | [Channel Item Object](#channelItemObject) | A relative path to an individual channel. The field name MUST be in the form of a [RFC 6570 URI template](https://tools.ietf.org/html/rfc6570). Query parameters and fragments SHALL NOT be used, instead use [bindings](#channelBindingsObject) to define them.\n\n##### Channels Object Example\n\n```json\n{\n  \"user/signedup\": {\n    \"subscribe\": {\n      \"message\": {\n        \"$ref\": \"#/components/messages/userSignedUp\"\n      }\n    }\n  }\n}\n```\n\n```yaml\nuser/signedup:\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n#### <a name=\"channelItemObject\"></a>Channel Item Object\n\nDescribes the operations available on a single channel.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"channelItemObjectRef\"></a>$ref | `string` | Allows for an external definition of this channel item. The referenced structure MUST be in the format of a [Channel Item Object](#channelItemObject). If there are conflicts between the referenced definition and this Channel Item's definition, the behavior is *undefined*. <br/><br/>**Deprecated:** Usage of the `$ref` property has been deprecated.\n<a name=\"channelItemObjectDescription\"></a>description | `string` | An optional description of this channel item. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"channelItemObjectServers\"></a>servers | [`string`] | The servers on which this channel is available, specified as an optional unordered list of names (string keys) of [Server Objects](#serverObject) defined in the [Servers Object](#serversObject) (a map). If `servers` is absent or empty then this channel must be available on all servers defined in the [Servers Object](#serversObject).\n<a name=\"channelItemObjectSubscribe\"></a>subscribe | [Operation Object](#operationObject) | A definition of the SUBSCRIBE operation, which defines the messages produced by the application and sent to the channel.\n<a name=\"channelItemObjectPublish\"></a>publish | [Operation Object](#operationObject) | A definition of the PUBLISH operation, which defines the messages consumed by the application from the channel.\n<a name=\"channelItemObjectParameters\"></a>parameters | [Parameters Object](#parametersObject) | A map of the parameters included in the channel name. It SHOULD be present only when using channels with expressions (as defined by [RFC 6570 section 2.2](https://tools.ietf.org/html/rfc6570#section-2.2)).\n<a name=\"channelItemObjectBindings\"></a>bindings | [Channel Bindings Object](#channelBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the channel.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Channel Item Object Example\n\n```json\n{\n  \"description\": \"This channel is used to exchange messages about users signing up\",\n  \"subscribe\": {\n    \"summary\": \"A user signed up.\",\n    \"message\": {\n      \"description\": \"A longer description of the message\",\n      \"payload\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"user\": {\n            \"$ref\": \"#/components/schemas/user\"\n          },\n          \"signup\": {\n            \"$ref\": \"#/components/schemas/signup\"\n          }\n        }\n      }\n    }\n  },\n  \"bindings\": {\n    \"amqp\": {\n      \"is\": \"queue\",\n      \"queue\": {\n        \"exclusive\": true\n      }\n    }\n  }\n}\n```\n\n```yaml\ndescription: This channel is used to exchange messages about users signing up\nsubscribe:\n  summary: A user signed up.\n  message:\n    description: A longer description of the message\n    payload:\n      type: object\n      properties:\n        user:\n          $ref: \"#/components/schemas/user\"\n        signup:\n          $ref: \"#/components/schemas/signup\"\nbindings:\n  amqp:\n    is: queue\n    queue:\n      exclusive: true\n```\n\nUsing `oneOf` to specify multiple messages per operation:\n\n```json\n{\n  \"subscribe\": {\n    \"message\": {\n      \"oneOf\": [\n        { \"$ref\": \"#/components/messages/signup\" },\n        { \"$ref\": \"#/components/messages/login\" }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nsubscribe:\n  message:\n    oneOf:\n      - $ref: '#/components/messages/signup'\n      - $ref: '#/components/messages/login'\n```\n\n\nUsing explicit by-name references to the servers on which the channel is available:\n\n```json\n{\n  \"description\": \"This application publishes WebUICommand messages to an AMQP queue on RabbitMQ brokers in the Staging and Production environments.\",\n  \"servers\": [\n    \"rabbitmqBrokerInProd\",\n    \"rabbitmqBrokerInStaging\",\n  ],\n  \"subscribe\": {\n    \"message\": {\n      \"$ref\": \"#/components/messages/WebUICommand\"\n    }\n  },\n  \"bindings\": {\n    \"amqp\": {\n      \"is\": \"queue\"\n    }\n  }\n}\n```\n\n```yaml\ndescription: This application publishes WebUICommand messages to an AMQP queue on RabbitMQ brokers in the Staging and Production environments.\nservers:\n  - rabbitmqBrokerInProd\n  - rabbitmqBrokerInStaging\nsubscribe:\n  message:\n    $ref: \"#/components/messages/WebUICommand\"\nbindings:\n  amqp:\n    is: queue\n```\n\n\n\n\n\n#### <a name=\"operationObject\"></a>Operation Object\n\nDescribes a publish or a subscribe operation. This provides a place to document how and why messages are sent and received.\n\nFor example, an operation might describe a chat application use case where a user sends a text message to a group. A publish operation describes messages that are received by the chat application, whereas a subscribe operation describes messages that are sent by the chat application.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"operationObjectOperationId\"></a>operationId | `string` | Unique string used to identify the operation. The id MUST be unique among all operations described in the API. The operationId value is **case-sensitive**. Tools and libraries MAY use the operationId to uniquely identify an operation, therefore, it is RECOMMENDED to follow common programming naming conventions.\n<a name=\"operationObjectSummary\"></a>summary | `string` | A short summary of what the operation is about.\n<a name=\"operationObjectDescription\"></a>description | `string` | A verbose explanation of the operation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"operationObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for API documentation control. Tags can be used for logical grouping of operations.\n<a name=\"operationObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this operation.\n<a name=\"operationObjectBindings\"></a>bindings | [Operation Bindings Object](#operationBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the operation.\n<a name=\"operationObjectTraits\"></a>traits | [[Operation Trait Object](#operationTraitObject) &#124; [Reference Object](#referenceObject) ] | A list of traits to apply to the operation object. Traits MUST be merged into the operation object using the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) algorithm in the same order they are defined here.\n<a name=\"operationObjectMessage\"></a>message | [Message Object](#messageObject) &#124; [Reference Object](#referenceObject) &#124; Map[\"oneOf\", [[Message Object](#messageObject) &#124; [Reference Object](#referenceObject)]] | A definition of the message that will be published or received by this operation. Map containing a single `oneOf` key is allowed here to specify multiple messages. However, **a message MUST be valid only against one of the message objects.**\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Operation Object Example\n\n```json\n{\n  \"operationId\": \"registerUser\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"message\": {\n    \"headers\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"applicationInstanceId\": {\n          \"description\": \"Unique identifier for a given instance of the publishing application\",\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"payload\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"user\": {\n          \"$ref\": \"#/components/schemas/userCreate\"\n        },\n        \"signup\": {\n          \"$ref\": \"#/components/schemas/signup\"\n        }\n      }\n    }\n  },\n  \"bindings\": {\n    \"amqp\": {\n      \"ack\": false\n    }\n  },\n  \"traits\": [\n    { \"$ref\": \"#/components/operationTraits/kafka\" }\n  ]\n}\n```\n\n```yaml\noperationId: registerUser\nsummary: Action to sign a user up.\ndescription: A longer description\ntags:\n  - name: user\n  - name: signup\n  - name: register\nmessage:\n  headers:\n    type: object\n    properties:\n      applicationInstanceId:\n        description: Unique identifier for a given instance of the publishing application\n        type: string\n  payload:\n    type: object\n    properties:\n      user:\n        $ref: \"#/components/schemas/userCreate\"\n      signup:\n        $ref: \"#/components/schemas/signup\"\nbindings:\n  amqp:\n    ack: false\ntraits:\n  - $ref: \"#/components/operationTraits/kafka\"\n```\n\n\n\n\n#### <a name=\"operationTraitObject\"></a>Operation Trait Object\n\nDescribes a trait that MAY be applied to an [Operation Object](#operationObject). This object MAY contain any property from the [Operation Object](#operationObject), except `message` and `traits`.\n\nIf you're looking to apply traits to a message, see the [Message Trait Object](#messageTraitObject).\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"operationTraitObjectOperationId\"></a>operationId | `string` | Unique string used to identify the operation. The id MUST be unique among all operations described in the API. The operationId value is **case-sensitive**. Tools and libraries MAY use the operationId to uniquely identify an operation, therefore, it is RECOMMENDED to follow common programming naming conventions.\n<a name=\"operationTraitObjectSummary\"></a>summary | `string` | A short summary of what the operation is about.\n<a name=\"operationTraitObjectDescription\"></a>description | `string` | A verbose explanation of the operation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"operationTraitObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for API documentation control. Tags can be used for logical grouping of operations.\n<a name=\"operationTraitObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this operation.\n<a name=\"operationTraitObjectBindings\"></a>bindings | [Operation Bindings Object](#operationBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the operation.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Operation Trait Object Example\n\n```json\n{\n  \"bindings\": {\n    \"amqp\": {\n      \"ack\": false\n    }\n  }\n}\n```\n\n```yaml\nbindings:\n  amqp:\n    ack: false\n```\n\n\n\n\n#### <a name=\"parametersObject\"></a>Parameters Object\n\nDescribes a map of parameters included in a channel name.\n\nThis map MUST contain all the parameters used in the parent channel name.\n\n##### Patterned Fields\n\nField Pattern | Type | Description\n---|:---:|---\n<a name=\"parametersObjectName\"></a>`^[A-Za-z0-9_\\-]+$` | [Parameter Object](#parameterObject) &#124; [Reference Object](#referenceObject) | The key represents the name of the parameter. It MUST match the parameter name used in the parent channel name.\n\n##### Parameters Object Example\n\n```json\n{\n  \"user/{userId}/signup\": {\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"subscribe\": {\n      \"message\": {\n        \"$ref\": \"#/components/messages/userSignedUp\"\n      }\n    }\n  }\n}\n```\n\n```yaml\nuser/{userId}/signup:\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n\n#### <a name=\"parameterObject\"></a>Parameter Object\n\nDescribes a parameter included in a channel name.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"parameterObjectDescription\"></a>description | `string` | A verbose explanation of the parameter. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"parameterObjectSchema\"></a>schema | [Schema Object](#schemaObject) \\| [Reference Object](#referenceObject) | Definition of the parameter.\nlocation | `string` | A [runtime expression](#runtimeExpression) that specifies the location of the parameter value. Even when a definition for the target field exists, it MUST NOT be used to validate this parameter but, instead, the `schema` property MUST be used.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Parameter Object Example\n\n```json\n{\n  \"user/{userId}/signup\": {\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"location\": \"$message.payload#/user/id\"\n      }\n    },\n    \"subscribe\": {\n      \"message\": {\n        \"$ref\": \"#/components/messages/userSignedUp\"\n      }\n    }\n  }\n}\n```\n\n```yaml\nuser/{userId}/signup:\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n      location: $message.payload#/user/id\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n#### <a name=\"serverBindingsObject\"></a>Server Bindings Object\n\nMap describing protocol-specific definitions for a server.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"serverBindingsObjectHTTP\"></a>`http` | [HTTP Server Binding](https://github.com/asyncapi/bindings/blob/master/http#server) | Protocol-specific information for an HTTP server.\n<a name=\"serverBindingsObjectWebSockets\"></a>`ws` | [WebSockets Server Binding](https://github.com/asyncapi/bindings/blob/master/websockets#server) | Protocol-specific information for a WebSockets server.\n<a name=\"serverBindingsObjectKafka\"></a>`kafka` | [Kafka Server Binding](https://github.com/asyncapi/bindings/blob/master/kafka#server) | Protocol-specific information for a Kafka server.\n<a name=\"serverBindingsObjectAnypointMQ\"></a>`anypointmq` | [Anypoint MQ Server Binding](https://github.com/asyncapi/bindings/blob/master/anypointmq#server) | Protocol-specific information for an Anypoint MQ server.\n<a name=\"serverBindingsObjectAMQP\"></a>`amqp` | [AMQP Server Binding](https://github.com/asyncapi/bindings/blob/master/amqp#server) | Protocol-specific information for an AMQP 0-9-1 server.\n<a name=\"serverBindingsObjectAMQP1\"></a>`amqp1` | [AMQP 1.0 Server Binding](https://github.com/asyncapi/bindings/blob/master/amqp1#server) | Protocol-specific information for an AMQP 1.0 server.\n<a name=\"serverBindingsObjectMQTT\"></a>`mqtt` | [MQTT Server Binding](https://github.com/asyncapi/bindings/blob/master/mqtt#server) | Protocol-specific information for an MQTT server.\n<a name=\"serverBindingsObjectMQTT5\"></a>`mqtt5` | [MQTT 5 Server Binding](https://github.com/asyncapi/bindings/blob/master/mqtt5#server) | Protocol-specific information for an MQTT 5 server.\n<a name=\"serverBindingsObjectNATS\"></a>`nats` | [NATS Server Binding](https://github.com/asyncapi/bindings/blob/master/nats#server) | Protocol-specific information for a NATS server.\n<a name=\"serverBindingsObjectJMS\"></a>`jms` | [JMS Server Binding](https://github.com/asyncapi/bindings/blob/master/jms#server) | Protocol-specific information for a JMS server.\n<a name=\"serverBindingsObjectSNS\"></a>`sns` | [SNS Server Binding](https://github.com/asyncapi/bindings/blob/master/sns#server) | Protocol-specific information for an SNS server.\n<a name=\"serverBindingsObjectSolace\"></a>`solace` | [Solace Server Binding](https://github.com/asyncapi/bindings/blob/master/solace#server) | Protocol-specific information for a Solace server.\n<a name=\"serverBindingsObjectSQS\"></a>`sqs` | [SQS Server Binding](https://github.com/asyncapi/bindings/blob/master/sqs#server) | Protocol-specific information for an SQS server.\n<a name=\"serverBindingsObjectSTOMP\"></a>`stomp` | [STOMP Server Binding](https://github.com/asyncapi/bindings/blob/master/stomp#server) | Protocol-specific information for a STOMP server.\n<a name=\"serverBindingsObjectRedis\"></a>`redis` | [Redis Server Binding](https://github.com/asyncapi/bindings/blob/master/redis#server) | Protocol-specific information for a Redis server.\n<a name=\"serverBindingsObjectMercure\"></a>`mercure` | [Mercure Server Binding](https://github.com/asyncapi/bindings/blob/master/mercure#server) | Protocol-specific information for a Mercure server.\n<a name=\"serverBindingsObjectIBMMQ\"></a>`ibmmq` | [IBM MQ Server Binding](https://github.com/asyncapi/bindings/blob/master/ibmmq#server-binding-object) | Protocol-specific information for an IBM MQ server.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n#### <a name=\"channelBindingsObject\"></a>Channel Bindings Object\n\nMap describing protocol-specific definitions for a channel.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"channelBindingsObjectHTTP\"></a>`http` | [HTTP Channel Binding](https://github.com/asyncapi/bindings/blob/master/http/README.md#channel) | Protocol-specific information for an HTTP channel.\n<a name=\"channelBindingsObjectWebSockets\"></a>`ws` | [WebSockets Channel Binding](https://github.com/asyncapi/bindings/blob/master/websockets/README.md#channel) | Protocol-specific information for a WebSockets channel.\n<a name=\"channelBindingsObjectKafka\"></a>`kafka` | [Kafka Channel Binding](https://github.com/asyncapi/bindings/blob/master/kafka/README.md#channel) | Protocol-specific information for a Kafka channel.\n<a name=\"channelBindingsObjectAnypointMQ\"></a>`anypointmq` | [Anypoint MQ Channel Binding](https://github.com/asyncapi/bindings/blob/master/anypointmq/README.md#channel) | Protocol-specific information for an Anypoint MQ channel.\n<a name=\"channelBindingsObjectAMQP\"></a>`amqp` | [AMQP Channel Binding](https://github.com/asyncapi/bindings/blob/master/amqp/README.md#channel) | Protocol-specific information for an AMQP 0-9-1 channel.\n<a name=\"channelBindingsObjectAMQP1\"></a>`amqp1` | [AMQP 1.0 Channel Binding](https://github.com/asyncapi/bindings/blob/master/amqp1/README.md#channel) | Protocol-specific information for an AMQP 1.0 channel.\n<a name=\"channelBindingsObjectMQTT\"></a>`mqtt` | [MQTT Channel Binding](https://github.com/asyncapi/bindings/blob/master/mqtt/README.md#channel) | Protocol-specific information for an MQTT channel.\n<a name=\"channelBindingsObjectMQTT5\"></a>`mqtt5` | [MQTT 5 Channel Binding](https://github.com/asyncapi/bindings/blob/master/mqtt5#channel) | Protocol-specific information for an MQTT 5 channel.\n<a name=\"channelBindingsObjectNATS\"></a>`nats` | [NATS Channel Binding](https://github.com/asyncapi/bindings/blob/master/nats/README.md#channel) | Protocol-specific information for a NATS channel.\n<a name=\"channelBindingsObjectJMS\"></a>`jms` | [JMS Channel Binding](https://github.com/asyncapi/bindings/blob/master/jms/README.md#channel) | Protocol-specific information for a JMS channel.\n<a name=\"channelBindingsObjectSNS\"></a>`sns` | [SNS Channel Binding](https://github.com/asyncapi/bindings/blob/master/sns/README.md#channel) | Protocol-specific information for an SNS channel.\n<a name=\"channelBindingsObjectSolace\"></a>`solace` | [Solace Channel Binding](https://github.com/asyncapi/bindings/blob/master/solace#channel) | Protocol-specific information for a Solace channel.\n<a name=\"channelBindingsObjectSQS\"></a>`sqs` | [SQS Channel Binding](https://github.com/asyncapi/bindings/blob/master/sqs/README.md#channel) | Protocol-specific information for an SQS channel.\n<a name=\"channelBindingsObjectSTOMP\"></a>`stomp` | [STOMP Channel Binding](https://github.com/asyncapi/bindings/blob/master/stomp/README.md#channel) | Protocol-specific information for a STOMP channel.\n<a name=\"channelBindingsObjectRedis\"></a>`redis` | [Redis Channel Binding](https://github.com/asyncapi/bindings/blob/master/redis#channel) | Protocol-specific information for a Redis channel.\n<a name=\"channelBindingsObjectMercure\"></a>`mercure` | [Mercure Channel Binding](https://github.com/asyncapi/bindings/blob/master/mercure#channel) | Protocol-specific information for a Mercure channel.\n<a name=\"channelBindingsObjectIBMMQ\"></a>`ibmmq` | [IBM MQ Channel Binding](https://github.com/asyncapi/bindings/tree/master/ibmmq#channel-binding-object) | Protocol-specific information for an IBM MQ channel.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n#### <a name=\"operationBindingsObject\"></a>Operation Bindings Object\n\nMap describing protocol-specific definitions for an operation.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"operationBindingsObjectHTTP\"></a>`http` | [HTTP Operation Binding](https://github.com/asyncapi/bindings/blob/master/http/README.md#operation) | Protocol-specific information for an HTTP operation.\n<a name=\"operationBindingsObjectWebSockets\"></a>`ws` | [WebSockets Operation Binding](https://github.com/asyncapi/bindings/blob/master/websockets/README.md#operation) | Protocol-specific information for a WebSockets operation.\n<a name=\"operationBindingsObjectKafka\"></a>`kafka` | [Kafka Operation Binding](https://github.com/asyncapi/bindings/blob/master/kafka/README.md#operation) | Protocol-specific information for a Kafka operation.\n<a name=\"operationBindingsObjectAnypointMQ\"></a>`anypointmq` | [Anypoint MQ Operation Binding](https://github.com/asyncapi/bindings/blob/master/anypointmq/README.md#operation) | Protocol-specific information for an Anypoint MQ operation.\n<a name=\"operationBindingsObjectAMQP\"></a>`amqp` | [AMQP Operation Binding](https://github.com/asyncapi/bindings/blob/master/amqp/README.md#operation) | Protocol-specific information for an AMQP 0-9-1 operation.\n<a name=\"operationBindingsObjectAMQP1\"></a>`amqp1` | [AMQP 1.0 Operation Binding](https://github.com/asyncapi/bindings/blob/master/amqp1/README.md#operation) | Protocol-specific information for an AMQP 1.0 operation.\n<a name=\"operationBindingsObjectMQTT\"></a>`mqtt` | [MQTT Operation Binding](https://github.com/asyncapi/bindings/blob/master/mqtt/README.md#operation) | Protocol-specific information for an MQTT operation.\n<a name=\"operationBindingsObjectMQTT5\"></a>`mqtt5` | [MQTT 5 Operation Binding](https://github.com/asyncapi/bindings/blob/master/mqtt5/README.md#operation) | Protocol-specific information for an MQTT 5 operation.\n<a name=\"operationBindingsObjectNATS\"></a>`nats` | [NATS Operation Binding](https://github.com/asyncapi/bindings/blob/master/nats/README.md#operation) | Protocol-specific information for a NATS operation.\n<a name=\"operationBindingsObjectJMS\"></a>`jms` | [JMS Operation Binding](https://github.com/asyncapi/bindings/blob/master/jms/README.md#operation) | Protocol-specific information for a JMS operation.\n<a name=\"operationBindingsObjectSNS\"></a>`sns` | [SNS Operation Binding](https://github.com/asyncapi/bindings/blob/master/sns/README.md#operation) | Protocol-specific information for an SNS operation.\n<a name=\"operationBindingsObjectSolace\"></a>`solace` | [Solace Operation Binding](https://github.com/asyncapi/bindings/blob/master/solace#operation) | Protocol-specific information for a Solace operation.\n<a name=\"operationBindingsObjectSQS\"></a>`sqs` | [SQS Operation Binding](https://github.com/asyncapi/bindings/blob/master/sqs/README.md#operation) | Protocol-specific information for an SQS operation.\n<a name=\"operationBindingsObjectSTOMP\"></a>`stomp` | [STOMP Operation Binding](https://github.com/asyncapi/bindings/blob/master/stomp/README.md#operation) | Protocol-specific information for a STOMP operation.\n<a name=\"operationBindingsObjectRedis\"></a>`redis` | [Redis Operation Binding](https://github.com/asyncapi/bindings/blob/master/redis#operation) | Protocol-specific information for a Redis operation.\n<a name=\"operationBindingsObjectMercure\"></a>`mercure` | [Mercure Operation Binding](https://github.com/asyncapi/bindings/blob/master/mercure#operation) | Protocol-specific information for a Mercure operation.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n\n#### <a name=\"messageBindingsObject\"></a>Message Bindings Object\n\nMap describing protocol-specific definitions for a message.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"messageBindingsObjectHTTP\"></a>`http` | [HTTP Message Binding](https://github.com/asyncapi/bindings/blob/master/http/README.md#message) | Protocol-specific information for an HTTP message, i.e., a request or a response.\n<a name=\"messageBindingsObjectWebSockets\"></a>`ws` | [WebSockets Message Binding](https://github.com/asyncapi/bindings/blob/master/websockets/README.md#message) | Protocol-specific information for a WebSockets message.\n<a name=\"messageBindingsObjectKafka\"></a>`kafka` | [Kafka Message Binding](https://github.com/asyncapi/bindings/blob/master/kafka/README.md#message) | Protocol-specific information for a Kafka message.\n<a name=\"messageBindingsObjectAnypointMQ\"></a>`anypointmq` | [Anypoint MQ Message Binding](https://github.com/asyncapi/bindings/blob/master/anypointmq/README.md#message) | Protocol-specific information for an Anypoint MQ message.\n<a name=\"messageBindingsObjectAMQP\"></a>`amqp` | [AMQP Message Binding](https://github.com/asyncapi/bindings/blob/master/amqp/README.md#message) | Protocol-specific information for an AMQP 0-9-1 message.\n<a name=\"messageBindingsObjectAMQP1\"></a>`amqp1` | [AMQP 1.0 Message Binding](https://github.com/asyncapi/bindings/blob/master/amqp1/README.md#message) | Protocol-specific information for an AMQP 1.0 message.\n<a name=\"messageBindingsObjectMQTT\"></a>`mqtt` | [MQTT Message Binding](https://github.com/asyncapi/bindings/blob/master/mqtt/README.md#message) | Protocol-specific information for an MQTT message.\n<a name=\"messageBindingsObjectMQTT5\"></a>`mqtt5` | [MQTT 5 Message Binding](https://github.com/asyncapi/bindings/blob/master/mqtt5/README.md#message) | Protocol-specific information for an MQTT 5 message.\n<a name=\"messageBindingsObjectNATS\"></a>`nats` | [NATS Message Binding](https://github.com/asyncapi/bindings/blob/master/nats/README.md#message) | Protocol-specific information for a NATS message.\n<a name=\"messageBindingsObjectJMS\"></a>`jms` | [JMS Message Binding](https://github.com/asyncapi/bindings/blob/master/jms/README.md#message) | Protocol-specific information for a JMS message.\n<a name=\"messageBindingsObjectSNS\"></a>`sns` | [SNS Message Binding](https://github.com/asyncapi/bindings/blob/master/sns/README.md#message) | Protocol-specific information for an SNS message.\n<a name=\"messageBindingsObjectSolace\"></a>`solace` | [Solace Server Binding](https://github.com/asyncapi/bindings/blob/master/solace#message) | Protocol-specific information for a Solace message.\n<a name=\"messageBindingsObjectSQS\"></a>`sqs` | [SQS Message Binding](https://github.com/asyncapi/bindings/blob/master/sqs/README.md#message) | Protocol-specific information for an SQS message.\n<a name=\"messageBindingsObjectSTOMP\"></a>`stomp` | [STOMP Message Binding](https://github.com/asyncapi/bindings/blob/master/stomp/README.md#message) | Protocol-specific information for a STOMP message.\n<a name=\"messageBindingsObjectRedis\"></a>`redis` | [Redis Message Binding](https://github.com/asyncapi/bindings/blob/master/redis#message) | Protocol-specific information for a Redis message.\n<a name=\"messageBindingsObjectMercure\"></a>`mercure` | [Mercure Message Binding](https://github.com/asyncapi/bindings/blob/master/mercure#message) | Protocol-specific information for a Mercure message.\n<a name=\"messageBindingsObjectIBMMQ\"></a>`ibmmq` | [IBM MQ Message Binding](https://github.com/asyncapi/bindings/tree/master/ibmmq#message-binding-object) | Protocol-specific information for an IBM MQ message.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n\n\n\n\n#### <a name=\"messageObject\"></a>Message Object\n\nDescribes a message received on a given channel and operation.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"messageObjectHeaders\"></a>headers | [Schema Object](#schemaObject) &#124; [Reference Object](#referenceObject) | Schema definition of the application headers. Schema MUST be of type \"object\". It **MUST NOT** define the protocol headers.\n<a name=\"messageObjectPayload\"></a>payload | `any` | Definition of the message payload. It can be of any type but defaults to [Schema object](#schemaObject). It must match the schema format, including encoding type - e.g Avro should be inlined as either a YAML or JSON object NOT a string to be parsed as YAML or JSON.\n<a name=\"messageObjectCorrelationId\"></a>correlationId | [Correlation ID Object](#correlationIdObject) &#124; [Reference Object](#referenceObject) | Definition of the correlation ID used for message tracing or matching.\n<a name=\"messageObjectSchemaFormat\"></a>schemaFormat | `string` | A string containing the name of the schema format used to define the message payload. If omitted, implementations should parse the payload as a [Schema object](#schemaObject). When the payload is defined using a `$ref` to a remote file, it is RECOMMENDED the schema format includes the file encoding type to allow implementations to parse the file correctly. E.g., adding `+yaml` if content type is `application/vnd.apache.avro` results in `application/vnd.apache.avro+yaml`.<br/><br/>Check out the [supported schema formats table](#messageObjectSchemaFormatTable) for more information. Custom values are allowed but their implementation is OPTIONAL. A custom value MUST NOT refer to one of the schema formats listed in the [table](#messageObjectSchemaFormatTable).\n<a name=\"messageObjectContentType\"></a>contentType | `string` | The content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. `application/json`). When omitted, the value MUST be the one specified on the [defaultContentType](#defaultContentTypeString) field.\n<a name=\"messageObjectName\"></a>name | `string` | A machine-friendly name for the message.\n<a name=\"messageObjectTitle\"></a>title | `string` | A human-friendly title for the message.\n<a name=\"messageObjectSummary\"></a>summary | `string` | A short summary of what the message is about.\n<a name=\"messageObjectDescription\"></a>description | `string` | A verbose explanation of the message. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"messageObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for API documentation control. Tags can be used for logical grouping of messages.\n<a name=\"messageObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this message.\n<a name=\"messageObjectBindings\"></a>bindings | [Message Bindings Object](#messageBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the message.\n<a name=\"messageObjectExamples\"></a>examples | [[Message Example Object](#messageExampleObject)] | List of examples.\n<a name=\"messageObjectTraits\"></a>traits | [[Message Trait Object](#messageTraitObject) &#124; [Reference Object](#referenceObject)] | A list of traits to apply to the message object. Traits MUST be merged into the message object using the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) algorithm in the same order they are defined here. The resulting object MUST be a valid [Message Object](#messageObject).\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### <a name=\"messageObjectSchemaFormatTable\"></a>Schema formats table\n\nThe following table contains a set of values that every implementation MUST support.\n\nName | Allowed values | Notes\n---|:---:|---\n[AsyncAPI 2.3.0 Schema Object](#schemaObject) | `application/vnd.aai.asyncapi;version=2.3.0`, `application/vnd.aai.asyncapi+json;version=2.3.0`, `application/vnd.aai.asyncapi+yaml;version=2.3.0` | This is the default when a `schemaFormat` is not provided.\n[JSON Schema Draft 07](https://json-schema.org/specification-links.html#draft-7) | `application/schema+json;version=draft-07`, `application/schema+yaml;version=draft-07` | \n\nThe following table contains a set of values that every implementation is RECOMMENDED to support.\n\nName | Allowed values | Notes\n---|:---:|---\n[Avro 1.9.0 schema](https://avro.apache.org/docs/1.9.0/spec.html#schemas) | `application/vnd.apache.avro;version=1.9.0`, `application/vnd.apache.avro+json;version=1.9.0`, `application/vnd.apache.avro+yaml;version=1.9.0` |\n[OpenAPI 3.0.0 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject) | `application/vnd.oai.openapi;version=3.0.0`, `application/vnd.oai.openapi+json;version=3.0.0`, `application/vnd.oai.openapi+yaml;version=3.0.0` | \n[RAML 1.0 data type](https://github.com/raml-org/raml-spec/blob/master/versions/raml-10/raml-10.md/) | `application/raml+yaml;version=1.0` |\n\n\n##### Message Object Example\n\n```json\n{\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"contentType\": \"application/json\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"headers\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"correlationId\": {\n        \"description\": \"Correlation ID set by application\",\n        \"type\": \"string\"\n      },\n      \"applicationInstanceId\": {\n        \"description\": \"Unique identifier for a given instance of the publishing application\",\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"payload\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"user\": {\n        \"$ref\": \"#/components/schemas/userCreate\"\n      },\n      \"signup\": {\n        \"$ref\": \"#/components/schemas/signup\"\n      }\n    }\n  },\n  \"correlationId\": {\n    \"description\": \"Default Correlation ID\",\n    \"location\": \"$message.header#/correlationId\"\n  },\n  \"traits\": [\n    { \"$ref\": \"#/components/messageTraits/commonHeaders\" }\n  ],\n  \"examples\": [\n    {\n      \"name\": \"SimpleSignup\",\n      \"summary\": \"A simple UserSignup example message\",\n      \"headers\": {\n        \"correlationId\": \"my-correlation-id\",\n        \"applicationInstanceId\": \"myInstanceId\"\n      },\n      \"payload\": {\n        \"user\": {\n          \"someUserKey\": \"someUserValue\"\n        },\n        \"signup\": {\n          \"someSignupKey\": \"someSignupValue\"\n        }\n      }\n    }\n  ]\n}\n```\n\n```yaml\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ncontentType: application/json\ntags:\n  - name: user\n  - name: signup\n  - name: register\nheaders:\n  type: object\n  properties:\n    correlationId:\n      description: Correlation ID set by application\n      type: string\n    applicationInstanceId:\n      description: Unique identifier for a given instance of the publishing application\n      type: string\npayload:\n  type: object\n  properties:\n    user:\n      $ref: \"#/components/schemas/userCreate\"\n    signup:\n      $ref: \"#/components/schemas/signup\"\ncorrelationId:\n  description: Default Correlation ID\n  location: $message.header#/correlationId\ntraits:\n  - $ref: \"#/components/messageTraits/commonHeaders\"\nexamples:\n  - name: SimpleSignup\n    summary: A simple UserSignup example message\n    headers:\n      correlationId: my-correlation-id\n      applicationInstanceId: myInstanceId\n    payload:\n      user:\n        someUserKey: someUserValue\n      signup:\n        someSignupKey: someSignupValue\n```\n\nExample using Avro to define the payload:\n\n```json\n{\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"schemaFormat\": \"application/vnd.apache.avro+json;version=1.9.0\",\n  \"payload\": {\n    \"$ref\": \"path/to/user-create.avsc#/UserCreate\"\n  }\n}\n```\n\n```yaml\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ntags:\n  - name: user\n  - name: signup\n  - name: register\nschemaFormat: 'application/vnd.apache.avro+yaml;version=1.9.0'\npayload:\n  $ref: 'path/to/user-create.avsc/#UserCreate'\n```\n\n\n\n\n\n\n\n#### <a name=\"messageTraitObject\"></a>Message Trait Object\n\nDescribes a trait that MAY be applied to a [Message Object](#messageObject). This object MAY contain any property from the [Message Object](#messageObject), except `payload` and `traits`.\n\nIf you're looking to apply traits to an operation, see the [Operation Trait Object](#operationTraitObject).\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"messageTraitObjectHeaders\"></a>headers | [Schema Object](#schemaObject) &#124; [Reference Object](#referenceObject) | Schema definition of the application headers. Schema MUST be of type \"object\". It **MUST NOT** define the protocol headers.\n<a name=\"messageTraitObjectCorrelationId\"></a>correlationId | [Correlation ID Object](#correlationIdObject) &#124; [Reference Object](#referenceObject) | Definition of the correlation ID used for message tracing or matching.\n<a name=\"messageTraitObjectSchemaFormat\"></a>schemaFormat | `string` | A string containing the name of the schema format/language used to define the message payload. If omitted, implementations should parse the payload as a [Schema object](#schemaObject).\n<a name=\"messageTraitObjectContentType\"></a>contentType | `string` | The content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. `application/json`). When omitted, the value MUST be the one specified on the [defaultContentType](#defaultContentTypeString) field.\n<a name=\"messageTraitObjectName\"></a>name | `string` | A machine-friendly name for the message.\n<a name=\"messageTraitObjectTitle\"></a>title | `string` | A human-friendly title for the message.\n<a name=\"messageTraitObjectSummary\"></a>summary | `string` | A short summary of what the message is about.\n<a name=\"messageTraitObjectDescription\"></a>description | `string` | A verbose explanation of the message. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"messageTraitObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for API documentation control. Tags can be used for logical grouping of messages.\n<a name=\"messageTraitObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this message.\n<a name=\"messageTraitObjectBindings\"></a>bindings | [Message Bindings Object](#messageBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the message.\n<a name=\"messageTraitObjectExamples\"></a>examples | [[Message Example Object](#messageExampleObject)] | List of examples.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Message Trait Object Example\n\n```json\n{\n  \"schemaFormat\": \"application/vnd.apache.avro+json;version=1.9.0\",\n  \"contentType\": \"application/json\"\n}\n```\n\n```yaml\nschemaFormat: 'application/vnd.apache.avro+yaml;version=1.9.0'\ncontentType: application/json\n```\n\n#### <a name=\"messageExampleObject\"></a> Message Example Object\n\nMessage Example Object represents an example of a [Message Object](#messageObject) and MUST contain either **headers** and/or **payload** fields. \n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"messageExampleObjectHeaders\"></a>headers | `Map[string, any]` | The value of this field MUST validate against the [Message Object's headers](#messageObjectHeaders) field. \n<a name=\"messageExampleObjectPayload\"></a>payload | `any` | The value of this field MUST validate against the [Message Object's payload](#messageObjectPayload) field.\n<a name=\"messageExampleObjectName\"></a>name | `string` | A machine-friendly name.\n<a name=\"messageExampleObjectSummary\"></a>summary | `string` |  A short summary of what the example is about.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Message Example Object Example\n\n```json\n{\n  \"name\": \"SimpleSignup\",\n  \"summary\": \"A simple UserSignup example message\",\n  \"headers\": {\n    \"correlationId\": \"my-correlation-id\",\n    \"applicationInstanceId\": \"myInstanceId\"\n  },\n  \"payload\": {\n    \"user\": {\n      \"someUserKey\": \"someUserValue\"\n    },\n    \"signup\": {\n      \"someSignupKey\": \"someSignupValue\"\n    }\n  }\n}\n```\n\n```yaml\nname: SimpleSignup\nsummary: A simple UserSignup example message\nheaders:\n  correlationId: my-correlation-id\n  applicationInstanceId: myInstanceId\npayload:\n  user:\n    someUserKey: someUserValue\n  signup:\n    someSignupKey: someSignupValue\n```\n\n#### <a name=\"tagsObject\"></a>Tags Object\n\nA Tags object is a list of Tag Objects.\n\n#### <a name=\"tagObject\"></a>Tag Object\n\nAllows adding meta data to a single tag.\n\n##### Fixed Fields\nField Name | Type | Description\n---|:---:|---\n<a name=\"tagObjectName\"></a>name | `string` | **Required.** The name of the tag.\n<a name=\"tagObjectDescription\"></a>description | `string` | A short description for the tag. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"tagObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this tag.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Tag Object Example\n\n```json\n{\n\t\"name\": \"user\",\n\t\"description\": \"User-related messages\"\n}\n```\n\n```yaml\nname: user\ndescription: User-related messages\n```\n\n\n\n\n\n\n\n#### <a name=\"externalDocumentationObject\"></a>External Documentation Object\n\nAllows referencing an external resource for extended documentation.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **Required.** The URL for the target documentation. Value MUST be in the format of a URL.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### External Documentation Object Example\n\n```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n#### <a name=\"referenceObject\"></a>Reference Object\n\nA simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n##### Fixed Fields\nField Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **Required.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n##### Reference Object Example\n\n```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n#### <a name=\"componentsObject\"></a>Components Object\n\nHolds a set of reusable objects for different aspects of the AsyncAPI specification.\nAll objects defined within the components object will have no effect on the API unless they are explicitly referenced from properties outside the components object.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---|--- \n<a name=\"componentsSchemas\"></a> schemas | Map[`string`, [Schema Object](#schemaObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Schema Objects](#schemaObject).\n<a name=\"componentsServers\"></a> servers | Map[`string`, [Server Object](#serverObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Server Objects](#serverObject).\n<a name=\"componentsChannels\"></a> channels | Map[`string`, [Channel Item Object](#channelItemObject)] | An object to hold reusable [Channel Item Objects](#channelItemObject).\n<a name=\"componentsMessages\"></a> messages | Map[`string`, [Message Object](#messageObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Message Objects](#messageObject).\n<a name=\"componentsSecuritySchemes\"></a> securitySchemes| Map[`string`, [Security Scheme Object](#securitySchemeObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Security Scheme Objects](#securitySchemeObject).\n<a name=\"componentsParameters\"></a> parameters | Map[`string`, [Parameter Object](#parameterObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Parameter Objects](#parameterObject).\n<a name=\"componentsCorrelationIDs\"></a> correlationIds | Map[`string`, [Correlation ID Object](#correlationIdObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Correlation ID Objects](#correlationIdObject).\n<a name=\"componentsOperationTraits\"></a> operationTraits | Map[`string`, [Operation Trait Object](#operationTraitObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Operation Trait Objects](#operationTraitObject).\n<a name=\"componentsMessageTraits\"></a> messageTraits | Map[`string`, [Message Trait Object](#messageTraitObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Message Trait Objects](#messageTraitObject).\n<a name=\"componentsServerBindings\"></a> serverBindings | Map[`string`, [Server Bindings Object](#serverBindingsObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Server Bindings Objects](#serverBindingsObject).\n<a name=\"componentsChannelBindings\"></a> channelBindings | Map[`string`, [Channel Bindings Object](#channelBindingsObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Channel Bindings Objects](#channelBindingsObject).\n<a name=\"componentsOperationBindings\"></a> operationBindings | Map[`string`, [Operation Bindings Object](#operationBindingsObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Operation Bindings Objects](#operationBindingsObject).\n<a name=\"componentsMessageBindings\"></a> messageBindings | Map[`string`, [Message Bindings Object](#messageBindingsObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Message Bindings Objects](#messageBindingsObject).\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\nAll the fixed fields declared above are objects that MUST use keys that match the regular expression: `^[a-zA-Z0-9\\.\\-_]+$`.\n\nField Name Examples:\n\n```\nUser\nUser_1\nUser_Name\nuser-name\nmy.org.User\n```\n\n##### Components Object Example\n\n```json\n{\n  \"components\": {\n    \"schemas\": {\n      \"Category\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"servers\": {\n      \"development\": {\n        \"url\": \"development.gigantic-server.com\",\n        \"description\": \"Development server\",\n        \"protocol\": \"amqp\",\n        \"protocolVersion\": \"0.9.1\"\n      }\n    },\n    \"channels\": {\n      \"user/signedup\": {\n        \"subscribe\": {\n          \"message\": {\n            \"$ref\": \"#/components/messages/userSignUp\"\n          }\n        }\n      }\n    },\n    \"messages\": {\n      \"userSignUp\": {\n        \"summary\": \"Action to sign a user up.\",\n        \"description\": \"Multiline description of what this action does.\\nHere you have another line.\\n\",\n        \"tags\": [\n          {\n            \"name\": \"user\"\n          },\n          {\n            \"name\": \"signup\"\n          }\n        ],\n        \"headers\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"applicationInstanceId\": {\n              \"description\": \"Unique identifier for a given instance of the publishing application\",\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"payload\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"user\": {\n              \"$ref\": \"#/components/schemas/userCreate\"\n            },\n            \"signup\": {\n              \"$ref\": \"#/components/schemas/signup\"\n            }\n          }\n        }\n      }\n    },\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"correlationIds\": {\n      \"default\": {\n        \"description\": \"Default Correlation ID\",\n        \"location\": \"$message.header#/correlationId\"\n      }\n    },\n    \"messageTraits\": {\n      \"commonHeaders\": {\n        \"headers\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"my-app-header\": {\n              \"type\": \"integer\",\n              \"minimum\": 0,\n              \"maximum\": 100\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\n```yaml\ncomponents:\n  schemas:\n    Category:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n    Tag:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n  servers:\n    development:\n      url: development.gigantic-server.com\n      description: Development server\n      protocol: amqp\n      protocolVersion: 0.9.1\n  channels:\n    user/signedup:\n      subscribe:\n        message:\n          $ref: \"#/components/messages/userSignUp\"\n  messages:\n    userSignUp:\n      summary: Action to sign a user up.\n      description: |\n        Multiline description of what this action does.\n        Here you have another line.\n      tags:\n        - name: user\n        - name: signup\n      headers:\n        type: object\n        properties:\n          applicationInstanceId:\n            description: Unique identifier for a given instance of the publishing application\n            type: string\n      payload:\n        type: object\n        properties:\n          user:\n            $ref: \"#/components/schemas/userCreate\"\n          signup:\n            $ref: \"#/components/schemas/signup\"\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n  correlationIds:\n    default:\n      description: Default Correlation ID\n      location: $message.header#/correlationId\n  messageTraits:\n    commonHeaders:\n      headers:\n        type: object\n        properties:\n          my-app-header:\n            type: integer\n            minimum: 0\n            maximum: 100\n```\n\n#### <a name=\"schemaObject\"></a>Schema Object\n\nThe Schema Object allows the definition of input and output data types.\nThese types can be objects, but also primitives and arrays. This object is a superset of the [JSON Schema Specification Draft 07](https://json-schema.org/). The empty schema (which allows any instance to validate) MAY be represented by the `boolean` value `true` and a schema which allows no instance to validate MAY be represented by the `boolean` value `false`.\n\nFurther information about the properties can be found in [JSON Schema Core](https://tools.ietf.org/html/draft-handrews-json-schema-01) and [JSON Schema Validation](https://tools.ietf.org/html/draft-handrews-json-schema-validation-01).\nUnless stated otherwise, the property definitions follow the JSON Schema specification as referenced here.\n\n##### Properties\n\nThe AsyncAPI Schema Object is a JSON Schema vocabulary which extends JSON Schema Core and Validation vocabularies. As such, any keyword available for those vocabularies is by definition available in AsyncAPI, and will work the exact same way, including but not limited to:\n\n- title\n- type\n- required\n- multipleOf\n- maximum\n- exclusiveMaximum\n- minimum\n- exclusiveMinimum\n- maxLength\n- minLength\n- pattern (This string SHOULD be a valid regular expression, according to the [ECMA 262 regular expression](https://www.ecma-international.org/ecma-262/5.1/#sec-7.8.5) dialect)\n- maxItems\n- minItems\n- uniqueItems\n- maxProperties\n- minProperties\n- enum\n- const\n- examples\n- if / then / else\n- readOnly\n- writeOnly\n- properties\n- patternProperties\n- additionalProperties\n- additionalItems\n- items\n- propertyNames\n- contains\n- allOf\n- oneOf\n- anyOf\n- not\n\nThe following properties are taken from the JSON Schema definition but their definitions were adjusted to the AsyncAPI Specification.\n\n- description - [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n- format - See [Data Type Formats](#dataTypeFormat) for further details. While relying on JSON Schema's defined formats, the AsyncAPI Specification offers a few additional predefined formats.\n- default - The default value represents what would be assumed by the consumer of the input as the value of the schema if one is not provided. Unlike JSON Schema, the value MUST conform to the defined type for the Schema Object defined at the same level. For example, of `type` is `string`, then `default` can be `\"foo\"` but cannot be `1`.\n\nAlternatively, any time a Schema Object can be used, a [Reference Object](#referenceObject) can be used in its place. This allows referencing definitions in place of defining them inline. It is appropriate to clarify that the `$ref` keyword MUST follow the behavior described by [Reference Object](#referenceObject) instead of the one in [JSON Schema definition](https://json-schema.org/understanding-json-schema/structuring.html#ref).\n\nIn addition to the JSON Schema fields, the following AsyncAPI vocabulary fields MAY be used for further schema documentation:\n\n##### Fixed Fields\nField Name | Type | Description\n---|:---:|---\n<a name=\"schemaObjectDiscriminator\"></a>discriminator | `string` | Adds support for polymorphism. The discriminator is the schema property name that is used to differentiate between other schema that inherit this schema. The property name used MUST be defined at this schema and it MUST be in the `required` property list. When used, the value MUST be the name of this schema or any schema that inherits it. See [Composition and Inheritance](#schemaComposition) for more details.\n<a name=\"schemaObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this schema.\n<a name=\"schemaObjectDeprecated\"></a> deprecated | `boolean` | Specifies that a schema is deprecated and SHOULD be transitioned out of usage. Default value is `false`.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n###### <a name=\"schemaComposition\"></a>Composition and Inheritance (Polymorphism)\n\nThe AsyncAPI Specification allows combining and extending model definitions using the `allOf` property of JSON Schema, in effect offering model composition.\n`allOf` takes in an array of object definitions that are validated *independently* but together compose a single object.\n\nWhile composition offers model extensibility, it does not imply a hierarchy between the models.\nTo support polymorphism, AsyncAPI Specification adds the support of the `discriminator` field.\nWhen used, the `discriminator` will be the name of the property used to decide which schema definition is used to validate the structure of the model.\nAs such, the `discriminator` field MUST be a required field.\nThere are are two ways to define the value of a discriminator for an inheriting instance.\n\n- Use the schema's name.\n- Override the schema's name by overriding the property with a new value. If exists, this takes precedence over the schema's name.\n\nAs such, inline schema definitions, which do not have a given id, *cannot* be used in polymorphism.\n\n##### Schema Object Examples\n\n###### Primitive Sample\n\n```json\n{\n  \"type\": \"string\",\n  \"format\": \"email\"\n}\n```\n\n```yaml\ntype: string\nformat: email\n```\n\n###### Simple Model\n\n```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"name\"\n  ],\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"address\": {\n      \"$ref\": \"#/components/schemas/Address\"\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"format\": \"int32\",\n      \"minimum\": 0\n    }\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- name\nproperties:\n  name:\n    type: string\n  address:\n    $ref: '#/components/schemas/Address'\n  age:\n    type: integer\n    format: int32\n    minimum: 0\n```\n\n###### Model with Map/Dictionary Properties\n\nFor a simple string to string mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"type\": \"string\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  type: string\n```\n\nFor a string to model mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"$ref\": \"#/components/schemas/ComplexModel\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  $ref: '#/components/schemas/ComplexModel'\n```\n\n###### Model with Example\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"integer\",\n      \"format\": \"int64\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"example\": {\n    \"name\": \"Puma\",\n    \"id\": 1\n  }\n}\n```\n\n```yaml\ntype: object\nproperties:\n  id:\n    type: integer\n    format: int64\n  name:\n    type: string\nrequired:\n- name\nexample:\n  name: Puma\n  id: 1\n```\n\n###### Model with Boolean Schemas\n\n```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"anySchema\"\n  ],\n  \"properties\": {\n    \"anySchema\": true,\n    \"cannotBeDefined\": false\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- anySchema\nproperties:\n  anySchema: true\n  cannotBeDefined: false\n```\n\n###### Models with Composition\n\n```json\n{\n  \"schemas\": {\n    \"ErrorModel\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"message\",\n        \"code\"\n      ],\n      \"properties\": {\n        \"message\": {\n          \"type\": \"string\"\n        },\n        \"code\": {\n          \"type\": \"integer\",\n          \"minimum\": 100,\n          \"maximum\": 600\n        }\n      }\n    },\n    \"ExtendedErrorModel\": {\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/ErrorModel\"\n        },\n        {\n          \"type\": \"object\",\n          \"required\": [\n            \"rootCause\"\n          ],\n          \"properties\": {\n            \"rootCause\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  ErrorModel:\n    type: object\n    required:\n    - message\n    - code\n    properties:\n      message:\n        type: string\n      code:\n        type: integer\n        minimum: 100\n        maximum: 600\n  ExtendedErrorModel:\n    allOf:\n    - $ref: '#/components/schemas/ErrorModel'\n    - type: object\n      required:\n      - rootCause\n      properties:\n        rootCause:\n          type: string\n```\n\n###### Models with Polymorphism Support\n\n```json\n{\n  \"schemas\": {\n    \"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"petType\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"petType\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"petType\"\n      ]\n    },\n    \"Cat\": {\n      \"description\": \"A representation of a cat. Note that `Cat` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"huntingSkill\": {\n              \"type\": \"string\",\n              \"description\": \"The measured skill for hunting\",\n              \"enum\": [\n                \"clueless\",\n                \"lazy\",\n                \"adventurous\",\n                \"aggressive\"\n              ]\n            }\n          },\n          \"required\": [\n            \"huntingSkill\"\n          ]\n        }\n      ]\n    },\n    \"Dog\": {\n      \"description\": \"A representation of a dog. Note that `Dog` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"packSize\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"description\": \"the size of the pack the dog is from\",\n              \"minimum\": 0\n            }\n          },\n          \"required\": [\n            \"packSize\"\n          ]\n        }\n      ]\n    },\n    \"StickInsect\": {\n      \"description\": \"A representation of an Australian walking stick. Note that `StickBug` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"petType\": {\n              \"const\": \"StickBug\"\n            },\n            \"color\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"color\"\n          ]\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  Pet:\n    type: object\n    discriminator: petType\n    properties:\n      name:\n        type: string\n      petType:\n        type: string\n    required:\n    - name\n    - petType\n  ## applies to instances with `petType: \"Cat\"`\n  ## because that is the schema name\n  Cat:\n    description: A representation of a cat\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        huntingSkill:\n          type: string\n          description: The measured skill for hunting\n          enum:\n          - clueless\n          - lazy\n          - adventurous\n          - aggressive\n      required:\n      - huntingSkill\n  ## applies to instances with `petType: \"Dog\"`\n  ## because that is the schema name\n  Dog:\n    description: A representation of a dog\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        packSize:\n          type: integer\n          format: int32\n          description: the size of the pack the dog is from\n          minimum: 0\n      required:\n      - packSize\n  ## applies to instances with `petType: \"StickBug\"`\n  ## because that is the required value of the discriminator field,\n  ## overriding the schema name\n  StickInsect:\n    description: A representation of an Australian walking stick\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        petType:\n          const: StickBug\n        color:\n          type: string\n      required:\n      - color\n```\n\n\n\n\n\n#### <a name=\"securitySchemeObject\"></a>Security Scheme Object\n\nDefines a security scheme that can be used by the operations. Supported schemes are:\n\n* User/Password.\n* API key (either as user or as password).\n* X.509 certificate.\n* End-to-end encryption (either symmetric or asymmetric).\n* HTTP authentication.\n* HTTP API key.\n* OAuth2's common flows (Implicit, Resource Owner Protected Credentials, Client Credentials and Authorization Code) as defined in [RFC6749](https://tools.ietf.org/html/rfc6749).\n* [OpenID Connect Discovery](https://tools.ietf.org/html/draft-ietf-oauth-discovery-06).\n* SASL (Simple Authentication and Security Layer) as defined in [RFC4422](https://tools.ietf.org/html/rfc4422).\n\n##### Fixed Fields\nField Name | Type | Applies To | Description\n---|:---:|---|---\n<a name=\"securitySchemeObjectType\"></a>type | `string` | Any | **REQUIRED**. The type of the security scheme. Valid values are `\"userPassword\"`, `\"apiKey\"`, `\"X509\"`, `\"symmetricEncryption\"`, `\"asymmetricEncryption\"`, `\"httpApiKey\"`, `\"http\"`, `\"oauth2\"`, `\"openIdConnect\"`, `\"plain\"`, `\"scramSha256\"`, `\"scramSha512\"`, and `\"gssapi\"`.\n<a name=\"securitySchemeObjectDescription\"></a>description | `string` | Any | A short description for security scheme. [CommonMark syntax](https://spec.commonmark.org/) MAY be used for rich text representation.\n<a name=\"securitySchemeObjectName\"></a>name | `string` | `httpApiKey` | **REQUIRED**. The name of the header, query or cookie parameter to be used.\n<a name=\"securitySchemeObjectIn\"></a>in | `string` | `apiKey` \\| `httpApiKey` | **REQUIRED**. The location of the API key. Valid values are `\"user\"` and `\"password\"` for `apiKey` and `\"query\"`, `\"header\"` or `\"cookie\"` for `httpApiKey`.\n<a name=\"securitySchemeObjectScheme\"></a>scheme | `string` | `http` | **REQUIRED**. The name of the HTTP Authorization scheme to be used in the [Authorization header as defined in RFC7235](https://tools.ietf.org/html/rfc7235#section-5.1).\n<a name=\"securitySchemeObjectBearerFormat\"></a>bearerFormat | `string` | `http` (`\"bearer\"`) | A hint to the client to identify how the bearer token is formatted.  Bearer tokens are usually generated by an authorization server, so this information is primarily for documentation purposes.\n<a name=\"securitySchemeFlows\"></a>flows | [OAuth Flows Object](#oauthFlowsObject) | `oauth2` | **REQUIRED**. An object containing configuration information for the flow types supported.\n<a name=\"securitySchemeOpenIdConnectUrl\"></a>openIdConnectUrl | `string` | `openIdConnect` | **REQUIRED**. OpenId Connect URL to discover OAuth2 configuration values. This MUST be in the form of a URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n##### Security Scheme Object Example\n\n###### User/Password Authentication Sample\n\n```json\n{\n  \"type\": \"userPassword\"\n}\n```\n\n```yaml\ntype: userPassword\n```\n\n###### API Key Authentication Sample\n\n```json\n{\n  \"type\": \"apiKey\",\n  \"in\": \"user\"\n}\n```\n\n```yaml\ntype: apiKey,\nin: user\n```\n\n###### X.509 Authentication Sample\n\n```json\n{\n  \"type\": \"X509\"\n}\n```\n\n```yaml\ntype: X509\n```\n\n###### End-to-end Encryption Authentication Sample\n\n```json\n{\n  \"type\": \"symmetricEncryption\"\n}\n```\n\n```yaml\ntype: symmetricEncryption\n```\n\n###### Basic Authentication Sample\n\n```json\n{\n  \"type\": \"http\",\n  \"scheme\": \"basic\"\n}\n```\n\n```yaml\ntype: http\nscheme: basic\n```\n\n###### API Key Sample\n\n```json\n{\n  \"type\": \"httpApiKey\",\n  \"name\": \"api_key\",\n  \"in\": \"header\"\n}\n```\n\n```yaml\ntype: httpApiKey\nname: api_key\nin: header\n```\n\n###### JWT Bearer Sample\n\n```json\n{\n  \"type\": \"http\",\n  \"scheme\": \"bearer\",\n  \"bearerFormat\": \"JWT\"\n}\n```\n\n```yaml\ntype: http\nscheme: bearer\nbearerFormat: JWT\n```\n\n###### Implicit OAuth2 Sample\n\n```json\n{\n  \"type\": \"oauth2\",\n  \"flows\": {\n    \"implicit\": {\n      \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n      \"scopes\": {\n        \"write:pets\": \"modify pets in your account\",\n        \"read:pets\": \"read your pets\"\n      }\n    }\n  }\n}\n```\n\n```yaml\ntype: oauth2\nflows:\n  implicit:\n    authorizationUrl: https://example.com/api/oauth/dialog\n    scopes:\n      write:pets: modify pets in your account\n      read:pets: read your pets\n```\n\n###### SASL Sample\n\n```json\n{\n  \"type\": \"scramSha512\"\n}\n```\n\n```yaml\ntype: scramSha512\n```\n\n#### <a name=\"oauthFlowsObject\"></a>OAuth Flows Object\n\nAllows configuration of the supported OAuth Flows.\n\n##### Fixed Fields\nField Name | Type | Description\n---|:---:|---\n<a name=\"oauthFlowsImplicit\"></a>implicit| [OAuth Flow Object](#oauthFlowObject) | Configuration for the OAuth Implicit flow\n<a name=\"oauthFlowsPassword\"></a>password| [OAuth Flow Object](#oauthFlowObject) | Configuration for the OAuth Resource Owner Protected Credentials flow\n<a name=\"oauthFlowsClientCredentials\"></a>clientCredentials| [OAuth Flow Object](#oauthFlowObject) | Configuration for the OAuth Client Credentials flow.\n<a name=\"oauthFlowsAuthorizationCode\"></a>authorizationCode| [OAuth Flow Object](#oauthFlowObject) | Configuration for the OAuth Authorization Code flow.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n#### <a name=\"oauthFlowObject\"></a>OAuth Flow Object\n\nConfiguration details for a supported OAuth Flow\n\n##### Fixed Fields\nField Name | Type | Applies To | Description\n---|:---:|---|---\n<a name=\"oauthFlowAuthorizationUrl\"></a>authorizationUrl | `string` | `oauth2` (`\"implicit\"`, `\"authorizationCode\"`) | **REQUIRED**. The authorization URL to be used for this flow. This MUST be in the form of a URL.\n<a name=\"oauthFlowTokenUrl\"></a>tokenUrl | `string` | `oauth2` (`\"password\"`, `\"clientCredentials\"`, `\"authorizationCode\"`) | **REQUIRED**. The token URL to be used for this flow. This MUST be in the form of a URL.\n<a name=\"oauthFlowRefreshUrl\"></a>refreshUrl | `string` | `oauth2` | The URL to be used for obtaining refresh tokens. This MUST be in the form of a URL.\n<a name=\"oauthFlowScopes\"></a>scopes | Map[`string`, `string`] | `oauth2` | **REQUIRED**. The available scopes for the OAuth2 security scheme. A map between the scope name and a short description for it.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n##### OAuth Flow Object Examples\n\n```JSON\n{\n  \"type\": \"oauth2\",\n  \"flows\": {\n    \"implicit\": {\n      \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n      \"scopes\": {\n        \"write:pets\": \"modify pets in your account\",\n        \"read:pets\": \"read your pets\"\n      }\n    },\n    \"authorizationCode\": {\n      \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n      \"tokenUrl\": \"https://example.com/api/oauth/token\",\n      \"scopes\": {\n        \"write:pets\": \"modify pets in your account\",\n        \"read:pets\": \"read your pets\"\n      }\n    }\n  }\n}\n```\n\n```YAML\ntype: oauth2\nflows:\n  implicit:\n    authorizationUrl: https://example.com/api/oauth/dialog\n    scopes:\n      write:pets: modify pets in your account\n      read:pets: read your pets\n  authorizationCode:\n    authorizationUrl: https://example.com/api/oauth/dialog\n    tokenUrl: https://example.com/api/oauth/token\n    scopes:\n      write:pets: modify pets in your account\n      read:pets: read your pets\n```\n\n#### <a name=\"securityRequirementObject\"></a>Security Requirement Object\n\nLists the required security schemes to execute this operation.\nThe name used for each property MUST correspond to a security scheme declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject).\n\nWhen a list of Security Requirement Objects is defined on a [Server object](#serverObject), only one of the Security Requirement Objects in the list needs to be satisfied to authorize the connection.\n\n##### Patterned Fields\n\nField Pattern | Type | Description\n---|:---:|---\n<a name=\"securityRequirementsName\"></a>{name} | [`string`] | Each name MUST correspond to a security scheme which is declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject). If the security scheme is of type `\"oauth2\"` or `\"openIdConnect\"`, then the value is a list of scope names. Provide scopes that are required to establish successful connection with the server. If scopes are not needed, the list can be empty. For other security scheme types, the array MUST be empty.\n\n##### Security Requirement Object Examples\n\n###### User/Password Security Requirement\n\n```json\n{\n  \"user_pass\": []\n}\n```\n\n```yaml\nuser_pass: []\n```\n\n###### API Key Security Requirement\n\n```json\n{\n  \"api_key\": []\n}\n```\n\n```yaml\napi_key: []\n```\n\n###### OAuth2 Security Requirement\n\n```json\n{\n  \"petstore_auth\": [\n    \"write:pets\",\n    \"read:pets\"\n  ]\n}\n```\n\n```yaml\npetstore_auth:\n- write:pets\n- read:pets\n```\n\n### <a name=\"correlationIdObject\"></a>Correlation ID Object\n\nAn object that specifies an identifier at design time that can used for message tracing and correlation. \n\nFor specifying and computing the location of a Correlation ID, a [runtime expression](#runtimeExpression) is used.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---|---\ndescription | `string` | An optional description of the identifier. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\nlocation | `string` | **REQUIRED.** A [runtime expression](#runtimeExpression) that specifies the location of the correlation ID.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Examples\n\n```json\n{\n  \"description\": \"Default Correlation ID\",\n  \"location\": \"$message.header#/correlationId\"\n}\n```\n\n```yaml\ndescription: Default Correlation ID\nlocation: $message.header#/correlationId\n```\n\n### <a name=\"runtimeExpression\"></a>Runtime Expression\n\nA runtime expression allows values to be defined based on information that will be available within the message.\nThis mechanism is used by [Correlation ID Object](#correlationIdObject).\n\nThe runtime expression is defined by the following [ABNF](https://tools.ietf.org/html/rfc5234) syntax:\n\n```\n      expression = ( \"$message\" \".\" source )\n      source = ( header-reference | payload-reference )\n      header-reference = \"header\" [\"#\" fragment]\n      payload-reference = \"payload\" [\"#\" fragment]\n      fragment = a JSON Pointer [RFC 6901](https://tools.ietf.org/html/rfc6901)\n```\n\nThe table below provides examples of runtime expressions and examples of their use in a value:\n\n##### <a name=\"runtimeExpressionExamples\"></a>Examples\n\nSource Location | Example expression  | Notes\n---|:---|:---|\nMessage Header Property | `$message.header#/MQMD/CorrelId` | Correlation ID is set using the `CorrelId` value from the `MQMD` header.\nMessage Payload Property | `$message.payload#/messageId` | Correlation ID is set using the `messageId` value from the message payload.\n\nRuntime expressions preserve the type of the referenced value.\n\n### <a name=\"specificationExtensions\"></a>Specification Extensions\n\nWhile the AsyncAPI Specification tries to accommodate most use cases, additional data can be added to extend the specification at certain points.\n\nThe extensions properties are implemented as patterned fields that are always prefixed by `\"x-\"`.\n\nField Pattern | Type | Description\n---|:---:|---\n<a name=\"infoExtensions\"></a>`^x-[\\w\\d\\-\\_]+$` | Any | Allows extensions to the AsyncAPI Schema. The field name MUST begin with `x-`, for example, `x-internal-id`. The value can be `null`, a primitive, an array or an object. Can have any valid JSON format value.\n\nThe extensions may or may not be supported by the available tooling, but those may be extended as well to add requested support (if tools are internal or open-sourced).\n\n### <a name=\"dataTypeFormat\"></a>Data Type Formats\n\nPrimitives have an optional modifier property: `format`.\nThe AsyncAPI specification uses several known formats to more finely define the data type being used.\nHowever, the `format` property is an open `string`-valued property, and can have any value to support documentation needs.\nFormats such as `\"email\"`, `\"uuid\"`, etc., can be used even though they are not defined by this specification.\nTypes that are not accompanied by a `format` property follow their definition from the JSON Schema.\nTools that do not recognize a specific `format` MAY default back to the `type` alone, as if the `format` was not specified.\n\nThe formats defined by the AsyncAPI Specification are:\n\n\nCommon Name | `type` | [`format`](#dataTypeFormat) | Comments\n----------- | ------ | -------- | --------\ninteger | `integer` | `int32` | signed 32 bits\nlong | `integer` | `int64` | signed 64 bits\nfloat | `number` | `float` | |\ndouble | `number` | `double` | |\nstring | `string` | | |\nbyte | `string` | `byte` | base64 encoded characters\nbinary | `string` | `binary` | any sequence of octets\nboolean | `boolean` | | |\ndate | `string` | `date` | As defined by `full-date` - [RFC3339](https://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14)\ndateTime | `string` | `date-time` | As defined by `date-time` - [RFC3339](https://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14)\npassword | `string` | `password` | Used to hint UIs the input needs to be obscured.\n\n\n<DocsButton suggestions={[ { href: '/docs/specifications/v2.4.0', title: 'Release 2.4.0', type:'back', }, { href: '/docs/specifications/v2.2.0', title: 'Release 2.2.0', type:'next', } ]} />\n",
              "toc": [
                {
                  "content": "AsyncAPI Specification",
                  "slug": "asyncapi-specification",
                  "lvl": 1,
                  "i": 0,
                  "seen": 0
                },
                {
                  "content": "Disclaimer",
                  "slug": "disclaimer",
                  "lvl": 4,
                  "i": 1,
                  "seen": 0
                },
                {
                  "content": "Version 2.3.0",
                  "slug": "version-230",
                  "lvl": 4,
                  "i": 2,
                  "seen": 0
                },
                {
                  "content": "Introduction",
                  "slug": "introduction",
                  "lvl": 2,
                  "i": 3,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitions\"></a>Definitions",
                  "slug": "definitions",
                  "lvl": 2,
                  "i": 4,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsApplication\"></a>Application",
                  "slug": "definitionsApplication",
                  "lvl": 4,
                  "i": 5,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsProducer\"></a>Producer",
                  "slug": "definitionsProducer",
                  "lvl": 4,
                  "i": 6,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsConsumer\"></a>Consumer",
                  "slug": "definitionsConsumer",
                  "lvl": 4,
                  "i": 7,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsMessage\"></a>Message",
                  "slug": "definitionsMessage",
                  "lvl": 4,
                  "i": 8,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsChannel\"></a>Channel",
                  "slug": "definitionsChannel",
                  "lvl": 4,
                  "i": 9,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsProtocol\"></a>Protocol",
                  "slug": "definitionsProtocol",
                  "lvl": 4,
                  "i": 10,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsBindings\"></a>Bindings",
                  "slug": "definitionsBindings",
                  "lvl": 4,
                  "i": 11,
                  "seen": 0
                },
                {
                  "content": "<a name=\"specification\"></a>Specification",
                  "slug": "specification",
                  "lvl": 2,
                  "i": 12,
                  "seen": 0
                },
                {
                  "content": "<a name=\"format\"></a>Format",
                  "slug": "format",
                  "lvl": 3,
                  "i": 13,
                  "seen": 0
                },
                {
                  "content": "<a name=\"file-structure\"></a>File Structure",
                  "slug": "file-structure",
                  "lvl": 3,
                  "i": 14,
                  "seen": 0
                },
                {
                  "content": "<a name=\"schema\"></a>Schema",
                  "slug": "schema",
                  "lvl": 3,
                  "i": 15,
                  "seen": 0
                },
                {
                  "content": "<a name=\"A2SObject\"></a>AsyncAPI Object",
                  "slug": "A2SObject",
                  "lvl": 4,
                  "i": 16,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 17,
                  "seen": 0
                },
                {
                  "content": "<a name=\"A2SVersionString\"></a>AsyncAPI Version String",
                  "slug": "A2SVersionString",
                  "lvl": 4,
                  "i": 18,
                  "seen": 0
                },
                {
                  "content": "<a name=\"A2SIdString\"></a>Identifier",
                  "slug": "A2SIdString",
                  "lvl": 4,
                  "i": 19,
                  "seen": 0
                },
                {
                  "content": "Examples",
                  "slug": "examples",
                  "lvl": 6,
                  "i": 20,
                  "seen": 0
                },
                {
                  "content": "<a name=\"infoObject\"></a>Info Object",
                  "slug": "infoObject",
                  "lvl": 4,
                  "i": 21,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 22,
                  "seen": 1
                },
                {
                  "content": "Info Object Example:",
                  "slug": "info-object-example",
                  "lvl": 5,
                  "i": 23,
                  "seen": 0
                },
                {
                  "content": "<a name=\"contactObject\"></a>Contact Object",
                  "slug": "contactObject",
                  "lvl": 4,
                  "i": 24,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 25,
                  "seen": 2
                },
                {
                  "content": "Contact Object Example:",
                  "slug": "contact-object-example",
                  "lvl": 5,
                  "i": 26,
                  "seen": 0
                },
                {
                  "content": "<a name=\"licenseObject\"></a>License Object",
                  "slug": "licenseObject",
                  "lvl": 4,
                  "i": 27,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 28,
                  "seen": 3
                },
                {
                  "content": "License Object Example:",
                  "slug": "license-object-example",
                  "lvl": 5,
                  "i": 29,
                  "seen": 0
                },
                {
                  "content": "<a name=\"serversObject\"></a>Servers Object",
                  "slug": "serversObject",
                  "lvl": 4,
                  "i": 30,
                  "seen": 0
                },
                {
                  "content": "Patterned Fields",
                  "slug": "patterned-fields",
                  "lvl": 5,
                  "i": 31,
                  "seen": 0
                },
                {
                  "content": "Servers Object Example",
                  "slug": "servers-object-example",
                  "lvl": 5,
                  "i": 32,
                  "seen": 0
                },
                {
                  "content": "<a name=\"serverObject\"></a>Server Object",
                  "slug": "serverObject",
                  "lvl": 4,
                  "i": 33,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 34,
                  "seen": 4
                },
                {
                  "content": "Server Object Example",
                  "slug": "server-object-example",
                  "lvl": 5,
                  "i": 35,
                  "seen": 0
                },
                {
                  "content": "<a name=\"serverVariableObject\"></a>Server Variable Object",
                  "slug": "serverVariableObject",
                  "lvl": 4,
                  "i": 36,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 37,
                  "seen": 5
                },
                {
                  "content": "<a name=\"defaultContentTypeString\"></a>Default Content Type",
                  "slug": "defaultContentTypeString",
                  "lvl": 4,
                  "i": 38,
                  "seen": 0
                },
                {
                  "content": "Default Content Type Example",
                  "slug": "default-content-type-example",
                  "lvl": 5,
                  "i": 39,
                  "seen": 0
                },
                {
                  "content": "<a name=\"channelsObject\"></a>Channels Object",
                  "slug": "channelsObject",
                  "lvl": 4,
                  "i": 40,
                  "seen": 0
                },
                {
                  "content": "Patterned Fields",
                  "slug": "patterned-fields",
                  "lvl": 5,
                  "i": 41,
                  "seen": 1
                },
                {
                  "content": "Channels Object Example",
                  "slug": "channels-object-example",
                  "lvl": 5,
                  "i": 42,
                  "seen": 0
                },
                {
                  "content": "<a name=\"channelItemObject\"></a>Channel Item Object",
                  "slug": "channelItemObject",
                  "lvl": 4,
                  "i": 43,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 44,
                  "seen": 6
                },
                {
                  "content": "Channel Item Object Example",
                  "slug": "channel-item-object-example",
                  "lvl": 5,
                  "i": 45,
                  "seen": 0
                },
                {
                  "content": "<a name=\"operationObject\"></a>Operation Object",
                  "slug": "operationObject",
                  "lvl": 4,
                  "i": 46,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 47,
                  "seen": 7
                },
                {
                  "content": "Operation Object Example",
                  "slug": "operation-object-example",
                  "lvl": 5,
                  "i": 48,
                  "seen": 0
                },
                {
                  "content": "<a name=\"operationTraitObject\"></a>Operation Trait Object",
                  "slug": "operationTraitObject",
                  "lvl": 4,
                  "i": 49,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 50,
                  "seen": 8
                },
                {
                  "content": "Operation Trait Object Example",
                  "slug": "operation-trait-object-example",
                  "lvl": 5,
                  "i": 51,
                  "seen": 0
                },
                {
                  "content": "<a name=\"parametersObject\"></a>Parameters Object",
                  "slug": "parametersObject",
                  "lvl": 4,
                  "i": 52,
                  "seen": 0
                },
                {
                  "content": "Patterned Fields",
                  "slug": "patterned-fields",
                  "lvl": 5,
                  "i": 53,
                  "seen": 2
                },
                {
                  "content": "Parameters Object Example",
                  "slug": "parameters-object-example",
                  "lvl": 5,
                  "i": 54,
                  "seen": 0
                },
                {
                  "content": "<a name=\"parameterObject\"></a>Parameter Object",
                  "slug": "parameterObject",
                  "lvl": 4,
                  "i": 55,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 56,
                  "seen": 9
                },
                {
                  "content": "Parameter Object Example",
                  "slug": "parameter-object-example",
                  "lvl": 5,
                  "i": 57,
                  "seen": 0
                },
                {
                  "content": "<a name=\"serverBindingsObject\"></a>Server Bindings Object",
                  "slug": "serverBindingsObject",
                  "lvl": 4,
                  "i": 58,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 59,
                  "seen": 10
                },
                {
                  "content": "<a name=\"channelBindingsObject\"></a>Channel Bindings Object",
                  "slug": "channelBindingsObject",
                  "lvl": 4,
                  "i": 60,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 61,
                  "seen": 11
                },
                {
                  "content": "<a name=\"operationBindingsObject\"></a>Operation Bindings Object",
                  "slug": "operationBindingsObject",
                  "lvl": 4,
                  "i": 62,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 63,
                  "seen": 12
                },
                {
                  "content": "<a name=\"messageBindingsObject\"></a>Message Bindings Object",
                  "slug": "messageBindingsObject",
                  "lvl": 4,
                  "i": 64,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 65,
                  "seen": 13
                },
                {
                  "content": "<a name=\"messageObject\"></a>Message Object",
                  "slug": "messageObject",
                  "lvl": 4,
                  "i": 66,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 67,
                  "seen": 14
                },
                {
                  "content": "<a name=\"messageObjectSchemaFormatTable\"></a>Schema formats table",
                  "slug": "messageObjectSchemaFormatTable",
                  "lvl": 5,
                  "i": 68,
                  "seen": 0
                },
                {
                  "content": "Message Object Example",
                  "slug": "message-object-example",
                  "lvl": 5,
                  "i": 69,
                  "seen": 0
                },
                {
                  "content": "<a name=\"messageTraitObject\"></a>Message Trait Object",
                  "slug": "messageTraitObject",
                  "lvl": 4,
                  "i": 70,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 71,
                  "seen": 15
                },
                {
                  "content": "Message Trait Object Example",
                  "slug": "message-trait-object-example",
                  "lvl": 5,
                  "i": 72,
                  "seen": 0
                },
                {
                  "content": "<a name=\"messageExampleObject\"></a> Message Example Object",
                  "slug": "messageExampleObject",
                  "lvl": 4,
                  "i": 73,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 74,
                  "seen": 16
                },
                {
                  "content": "Message Example Object Example",
                  "slug": "message-example-object-example",
                  "lvl": 5,
                  "i": 75,
                  "seen": 0
                },
                {
                  "content": "<a name=\"tagsObject\"></a>Tags Object",
                  "slug": "tagsObject",
                  "lvl": 4,
                  "i": 76,
                  "seen": 0
                },
                {
                  "content": "<a name=\"tagObject\"></a>Tag Object",
                  "slug": "tagObject",
                  "lvl": 4,
                  "i": 77,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 78,
                  "seen": 17
                },
                {
                  "content": "Tag Object Example",
                  "slug": "tag-object-example",
                  "lvl": 5,
                  "i": 79,
                  "seen": 0
                },
                {
                  "content": "<a name=\"externalDocumentationObject\"></a>External Documentation Object",
                  "slug": "externalDocumentationObject",
                  "lvl": 4,
                  "i": 80,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 81,
                  "seen": 18
                },
                {
                  "content": "External Documentation Object Example",
                  "slug": "external-documentation-object-example",
                  "lvl": 5,
                  "i": 82,
                  "seen": 0
                },
                {
                  "content": "<a name=\"referenceObject\"></a>Reference Object",
                  "slug": "referenceObject",
                  "lvl": 4,
                  "i": 83,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 84,
                  "seen": 19
                },
                {
                  "content": "Reference Object Example",
                  "slug": "reference-object-example",
                  "lvl": 5,
                  "i": 85,
                  "seen": 0
                },
                {
                  "content": "<a name=\"componentsObject\"></a>Components Object",
                  "slug": "componentsObject",
                  "lvl": 4,
                  "i": 86,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 87,
                  "seen": 20
                },
                {
                  "content": "Components Object Example",
                  "slug": "components-object-example",
                  "lvl": 5,
                  "i": 88,
                  "seen": 0
                },
                {
                  "content": "<a name=\"schemaObject\"></a>Schema Object",
                  "slug": "schemaObject",
                  "lvl": 4,
                  "i": 89,
                  "seen": 0
                },
                {
                  "content": "Properties",
                  "slug": "properties",
                  "lvl": 5,
                  "i": 90,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 91,
                  "seen": 21
                },
                {
                  "content": "<a name=\"schemaComposition\"></a>Composition and Inheritance (Polymorphism)",
                  "slug": "schemaComposition",
                  "lvl": 6,
                  "i": 92,
                  "seen": 0
                },
                {
                  "content": "Schema Object Examples",
                  "slug": "schema-object-examples",
                  "lvl": 5,
                  "i": 93,
                  "seen": 0
                },
                {
                  "content": "Primitive Sample",
                  "slug": "primitive-sample",
                  "lvl": 6,
                  "i": 94,
                  "seen": 0
                },
                {
                  "content": "Simple Model",
                  "slug": "simple-model",
                  "lvl": 6,
                  "i": 95,
                  "seen": 0
                },
                {
                  "content": "Model with Map/Dictionary Properties",
                  "slug": "model-with-mapdictionary-properties",
                  "lvl": 6,
                  "i": 96,
                  "seen": 0
                },
                {
                  "content": "Model with Example",
                  "slug": "model-with-example",
                  "lvl": 6,
                  "i": 97,
                  "seen": 0
                },
                {
                  "content": "Model with Boolean Schemas",
                  "slug": "model-with-boolean-schemas",
                  "lvl": 6,
                  "i": 98,
                  "seen": 0
                },
                {
                  "content": "Models with Composition",
                  "slug": "models-with-composition",
                  "lvl": 6,
                  "i": 99,
                  "seen": 0
                },
                {
                  "content": "Models with Polymorphism Support",
                  "slug": "models-with-polymorphism-support",
                  "lvl": 6,
                  "i": 100,
                  "seen": 0
                },
                {
                  "content": "<a name=\"securitySchemeObject\"></a>Security Scheme Object",
                  "slug": "securitySchemeObject",
                  "lvl": 4,
                  "i": 101,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 102,
                  "seen": 22
                },
                {
                  "content": "Security Scheme Object Example",
                  "slug": "security-scheme-object-example",
                  "lvl": 5,
                  "i": 103,
                  "seen": 0
                },
                {
                  "content": "User/Password Authentication Sample",
                  "slug": "userpassword-authentication-sample",
                  "lvl": 6,
                  "i": 104,
                  "seen": 0
                },
                {
                  "content": "API Key Authentication Sample",
                  "slug": "api-key-authentication-sample",
                  "lvl": 6,
                  "i": 105,
                  "seen": 0
                },
                {
                  "content": "X.509 Authentication Sample",
                  "slug": "x509-authentication-sample",
                  "lvl": 6,
                  "i": 106,
                  "seen": 0
                },
                {
                  "content": "End-to-end Encryption Authentication Sample",
                  "slug": "end-to-end-encryption-authentication-sample",
                  "lvl": 6,
                  "i": 107,
                  "seen": 0
                },
                {
                  "content": "Basic Authentication Sample",
                  "slug": "basic-authentication-sample",
                  "lvl": 6,
                  "i": 108,
                  "seen": 0
                },
                {
                  "content": "API Key Sample",
                  "slug": "api-key-sample",
                  "lvl": 6,
                  "i": 109,
                  "seen": 0
                },
                {
                  "content": "JWT Bearer Sample",
                  "slug": "jwt-bearer-sample",
                  "lvl": 6,
                  "i": 110,
                  "seen": 0
                },
                {
                  "content": "Implicit OAuth2 Sample",
                  "slug": "implicit-oauth2-sample",
                  "lvl": 6,
                  "i": 111,
                  "seen": 0
                },
                {
                  "content": "SASL Sample",
                  "slug": "sasl-sample",
                  "lvl": 6,
                  "i": 112,
                  "seen": 0
                },
                {
                  "content": "<a name=\"oauthFlowsObject\"></a>OAuth Flows Object",
                  "slug": "oauthFlowsObject",
                  "lvl": 4,
                  "i": 113,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 114,
                  "seen": 23
                },
                {
                  "content": "<a name=\"oauthFlowObject\"></a>OAuth Flow Object",
                  "slug": "oauthFlowObject",
                  "lvl": 4,
                  "i": 115,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 116,
                  "seen": 24
                },
                {
                  "content": "OAuth Flow Object Examples",
                  "slug": "oauth-flow-object-examples",
                  "lvl": 5,
                  "i": 117,
                  "seen": 0
                },
                {
                  "content": "<a name=\"securityRequirementObject\"></a>Security Requirement Object",
                  "slug": "securityRequirementObject",
                  "lvl": 4,
                  "i": 118,
                  "seen": 0
                },
                {
                  "content": "Patterned Fields",
                  "slug": "patterned-fields",
                  "lvl": 5,
                  "i": 119,
                  "seen": 3
                },
                {
                  "content": "Security Requirement Object Examples",
                  "slug": "security-requirement-object-examples",
                  "lvl": 5,
                  "i": 120,
                  "seen": 0
                },
                {
                  "content": "User/Password Security Requirement",
                  "slug": "userpassword-security-requirement",
                  "lvl": 6,
                  "i": 121,
                  "seen": 0
                },
                {
                  "content": "API Key Security Requirement",
                  "slug": "api-key-security-requirement",
                  "lvl": 6,
                  "i": 122,
                  "seen": 0
                },
                {
                  "content": "OAuth2 Security Requirement",
                  "slug": "oauth2-security-requirement",
                  "lvl": 6,
                  "i": 123,
                  "seen": 0
                },
                {
                  "content": "<a name=\"correlationIdObject\"></a>Correlation ID Object",
                  "slug": "correlationIdObject",
                  "lvl": 3,
                  "i": 124,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 125,
                  "seen": 25
                },
                {
                  "content": "Examples",
                  "slug": "examples",
                  "lvl": 5,
                  "i": 126,
                  "seen": 1
                },
                {
                  "content": "<a name=\"runtimeExpression\"></a>Runtime Expression",
                  "slug": "runtimeExpression",
                  "lvl": 3,
                  "i": 127,
                  "seen": 0
                },
                {
                  "content": "<a name=\"runtimeExpressionExamples\"></a>Examples",
                  "slug": "runtimeExpressionExamples",
                  "lvl": 5,
                  "i": 128,
                  "seen": 0
                },
                {
                  "content": "<a name=\"specificationExtensions\"></a>Specification Extensions",
                  "slug": "specificationExtensions",
                  "lvl": 3,
                  "i": 129,
                  "seen": 0
                },
                {
                  "content": "<a name=\"dataTypeFormat\"></a>Data Type Formats",
                  "slug": "dataTypeFormat",
                  "lvl": 3,
                  "i": 130,
                  "seen": 0
                }
              ],
              "slug": "/docs/reference/specification/v2.3.0",
              "filePath": "pages/docs/reference/specification/v2.3.0.md",
              "sectionTitle": "Specification"
            },
            {
              "meta": {
                "weight": -2,
                "title": "2.2.0"
              },
              "content": "# AsyncAPI Specification\n\n#### Disclaimer\n\nPart of this content has been taken from the great work done by the folks at the [OpenAPI Initiative](https://openapis.org). Mainly because **it's a great work** and we want to keep as much compatibility as possible with the [OpenAPI Specification](https://github.com/OAI/OpenAPI-Specification).\n\n#### Version 2.2.0\n\nThe key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC 2119](https://www.ietf.org/rfc/rfc2119.txt).\n\nThe AsyncAPI Specification is licensed under [The Apache License, Version 2.0](https://www.apache.org/licenses/LICENSE-2.0.html).\n\n## Introduction\n\nThe AsyncAPI Specification is a project used to describe and document message-driven APIs in a machine-readable format. It‚Äôs protocol-agnostic, so you can use it for APIs that work over any protocol (e.g., AMQP, MQTT, WebSockets, Kafka, STOMP, HTTP, Mercure, etc).\n\nThe AsyncAPI Specification defines a set of files required to describe such an API.\nThese files can then be used to create utilities, such as documentation, integration and/or testing tools.\n\nThe file(s) MUST describe the operations an [application](#definitionsApplication) accepts. For instance, consider the following AsyncAPI definition snippet:\n\n```yaml\nuser/signedup:\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignUp\"\n```\n\nIt means that the [application](#definitionsApplication) allows [consumers](#definitionsConsumer) to subscribe to the `user/signedup` [channel](#definitionsChannel) to receive userSignUp [messages](#definitionsMessage) produced by the application.\n\n**The AsyncAPI specification does not assume any kind of software topology, architecture or pattern.** Therefore, a server MAY be a message broker, a web server or any other kind of computer program capable of sending and/or receiving data. However, AsyncAPI offers a mechanism called \"bindings\" that aims to help with more specific information about the protocol.\n\n\n## <a name=\"definitions\"></a>Definitions\n\n#### <a name=\"definitionsApplication\"></a>Application\nAn application is any kind of computer program or a group of them. It MUST be a [producer](#definitionsProducer), a [consumer](#definitionsConsumer) or both. An application MAY be a microservice, IoT device (sensor), mainframe process, etc. An application MAY be written in any number of different programming languages as long as they support the selected [protocol](#definitionsProtocol). An application MUST also use a protocol supported by the server in order to connect and exchange [messages](#definitionsMessage). \n\n#### <a name=\"definitionsProducer\"></a>Producer\nA producer is a type of application, connected to a server, that is creating [messages](#definitionsMessage) and addressing them to [channels](#definitionsChannel). A producer MAY be publishing to multiple channels depending on the server, protocol, and use-case pattern.\n\n#### <a name=\"definitionsConsumer\"></a>Consumer\nA consumer is a type of application, connected to a server via a supported [protocol](#definitionsProtocol), that is consuming [messages](#definitionsMessage) from [channels](#definitionsChannel). A consumer MAY be consuming from multiple channels depending on the server, protocol, and the use-case pattern.\n\n#### <a name=\"definitionsMessage\"></a>Message\nA message is the mechanism by which information is exchanged via a channel between servers and applications. A message MUST contain a payload and MAY also contain headers. The headers MAY be subdivided into [protocol](#definitionsProtocol)-defined headers and header properties defined by the application which can act as supporting metadata. The payload contains the data, defined by the application, which MUST be serialized into a format (JSON, XML, Avro, binary, etc.). Since a message is a generic mechanism, it can support multiple interaction patterns such as event, command, request, or response. \n\n#### <a name=\"definitionsChannel\"></a>Channel\nA channel is an addressable component, made available by the server, for the organization of [messages](#definitionsMessage). [Producer](#definitionsProducer) applications send messages to channels and [consumer](#definitionsConsumer) applications consume messages from channels. Servers MAY support many channel instances, allowing messages with different content to be addressed to different channels. Depending on the server implementation, the channel MAY be included in the message via protocol-defined headers.\n\n#### <a name=\"definitionsProtocol\"></a>Protocol\nA protocol is the mechanism (wireline protocol or API) by which [messages](#definitionsMessage) are exchanged between the application and the [channel](#definitionsChannel). Example protocols include, but are not limited to, AMQP, HTTP, JMS, Kafka, Anypoint MQ, MQTT, STOMP, Mercure, WebSocket.  \n\n#### <a name=\"definitionsBindings\"></a>Bindings\nA \"binding\" (or \"protocol binding\") is a mechanism to define protocol-specific information. Therefore, a protocol binding MUST define protocol-specific information only. \n\n## <a name=\"specification\"></a>Specification\n\n### <a name=\"format\"></a>Format\n\nThe files describing the message-driven API in accordance with the AsyncAPI Specification are represented as JSON objects and conform to the JSON standards.\nYAML, being a superset of JSON, can be used as well to represent a A2S (AsyncAPI Specification) file.\n\nFor example, if a field is said to have an array value, the JSON array representation will be used:\n\n```yaml\n{\n   \"field\" : [...]\n}\n```\n\nWhile the API is described using JSON it does not impose a JSON input/output to the API itself.\n\nAll field names in the specification are **case sensitive**.\n\nThe schema exposes two types of fields.\nFixed fields, which have a declared name, and Patterned fields, which declare a regex pattern for the field name.\nPatterned fields can have multiple occurrences as long as each has a unique name.\n\nIn order to preserve the ability to round-trip between YAML and JSON formats, YAML version [1.2](https://www.yaml.org/spec/1.2/spec.html) is recommended along with some additional constraints:\n\n- Tags MUST be limited to those allowed by the [JSON Schema ruleset](https://www.yaml.org/spec/1.2/spec.html#id2803231)\n- Keys used in YAML maps MUST be limited to a scalar string, as defined by the YAML Failsafe schema ruleset\n\n### <a name=\"file-structure\"></a>File Structure\n\nAn AsyncAPI document MAY be made up of a single document or be divided into multiple,\nconnected parts at the discretion of the author. In the latter case, [Reference Objects](#referenceObject) are used.\n\nBy convention, the AsyncAPI Specification (A2S) file is named `asyncapi.json` or `asyncapi.yaml`.\n\n### <a name=\"schema\"></a>Schema\n\n#### <a name=\"A2SObject\"></a>AsyncAPI Object\n\nThis is the root document object for the API specification.\nIt combines resource listing and API declaration together into one document.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"A2SAsyncAPI\"></a>asyncapi | [AsyncAPI Version String](#A2SVersionString) | **Required.** Specifies the AsyncAPI Specification version being used. It can be used by tooling Specifications and clients to interpret the version. The structure shall be `major`.`minor`.`patch`, where `patch` versions _must_ be compatible with the existing `major`.`minor` tooling. Typically patch versions will be introduced to address errors in the documentation, and tooling should typically be compatible with the corresponding `major`.`minor` (1.0.*). Patch versions will correspond to patches of this document.\n<a name=\"A2SId\"></a>id | [Identifier](#A2SIdString) | Identifier of the [application](#definitionsApplication) the AsyncAPI document is defining.\n<a name=\"A2SInfo\"></a>info | [Info Object](#infoObject) | **Required.** Provides metadata about the API. The metadata can be used by the clients if needed.\n<a name=\"A2SServers\"></a>servers | [Servers Object](#serversObject) | Provides connection details of servers.\n<a name=\"A2SDefaultContentType\"></a>defaultContentType | [Default Content Type](#defaultContentTypeString) | Default content type to use when encoding/decoding a message's payload.\n<a name=\"A2SChannels\"></a>channels | [Channels Object](#channelsObject) | **Required** The available channels and messages for the API.\n<a name=\"A2SComponents\"></a>components | [Components Object](#componentsObject) | An element to hold various schemas for the specification.\n<a name=\"A2STags\"></a>tags | [Tags Object](#tagsObject) | A list of tags used by the specification with additional metadata. Each tag name in the list MUST be unique.\n<a name=\"A2SExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation.\n\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n#### <a name=\"A2SVersionString\"></a>AsyncAPI Version String\n\nThe version string signifies the version of the AsyncAPI Specification that the document complies to.\nThe format for this string _must_ be `major`.`minor`.`patch`.  The `patch` _may_ be suffixed by a hyphen and extra alphanumeric characters.\n\nA `major`.`minor` shall be used to designate the AsyncAPI Specification version, and will be considered compatible with the AsyncAPI Specification specified by that `major`.`minor` version.\nThe patch version will not be considered by tooling, making no distinction between `1.0.0` and `1.0.1`.\n\nIn subsequent versions of the AsyncAPI Specification, care will be given such that increments of the `minor` version should not interfere with operations of tooling developed to a lower minor version. Thus a hypothetical `1.1.0` specification should be usable with tooling designed for `1.0.0`.\n\n#### <a name=\"A2SIdString\"></a>Identifier\n\nThis field represents a unique universal identifier of the [application](#definitionsApplication) the AsyncAPI document is defining. It must conform to the URI format, according to [RFC3986](https://tools.ietf.org/html/rfc3986).\n\nIt is RECOMMENDED to use a [URN](https://tools.ietf.org/html/rfc8141) to globally and uniquely identify the application during long periods of time, even after it becomes unavailable or ceases to exist.\n\n###### Examples\n\n```json\n{\n  \"id\": \"urn:com:smartylighting:streetlights:server\"\n}\n```\n\n```yaml\nid: 'urn:com:smartylighting:streetlights:server'\n```\n\n```json\n{\n  \"id\": \"https://github.com/smartylighting/streetlights-server\"\n}\n```\n\n```yaml\nid: 'https://github.com/smartylighting/streetlights-server'\n```\n\n#### <a name=\"infoObject\"></a>Info Object\n\nThe object provides metadata about the API.\nThe metadata can be used by the clients if needed.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"infoObjectTitle\"></a>title | `string` | **Required.** The title of the application.\n<a name=\"infoObjectVersion\"></a>version | `string` | **Required** Provides the version of the application API (not to be confused with the specification version).\n<a name=\"infoObjectDescription\"></a>description | `string` | A short description of the application. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"infoObjectTermsOfService\"></a>termsOfService | `string` | A URL to the Terms of Service for the API. MUST be in the format of a URL.\n<a name=\"infoObjectContact\"></a>contact | [Contact Object](#contactObject) | The contact information for the exposed API.\n<a name=\"infoObjectLicense\"></a>license | [License Object](#licenseObject) | The license information for the exposed API.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Info Object Example:\n\n```json\n{\n  \"title\": \"AsyncAPI Sample App\",\n  \"description\": \"This is a sample server.\",\n  \"termsOfService\": \"https://asyncapi.org/terms/\",\n  \"contact\": {\n    \"name\": \"API Support\",\n    \"url\": \"https://www.asyncapi.org/support\",\n    \"email\": \"support@asyncapi.org\"\n  },\n  \"license\": {\n    \"name\": \"Apache 2.0\",\n    \"url\": \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n  },\n  \"version\": \"1.0.1\"\n}\n```\n\n```yaml\ntitle: AsyncAPI Sample App\ndescription: This is a sample server.\ntermsOfService: https://asyncapi.org/terms/\ncontact:\n  name: API Support\n  url: https://www.asyncapi.org/support\n  email: support@asyncapi.org\nlicense:\n  name: Apache 2.0\n  url: https://www.apache.org/licenses/LICENSE-2.0.html\nversion: 1.0.1\n```\n\n#### <a name=\"contactObject\"></a>Contact Object\n\nContact information for the exposed API.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"contactObjectName\"></a>name | `string` | The identifying name of the contact person/organization.\n<a name=\"contactObjectUrl\"></a>url | `string` | The URL pointing to the contact information. MUST be in the format of a URL.\n<a name=\"contactObjectEmail\"></a>email | `string` | The email address of the contact person/organization. MUST be in the format of an email address.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Contact Object Example:\n\n```json\n{\n  \"name\": \"API Support\",\n  \"url\": \"https://www.example.com/support\",\n  \"email\": \"support@example.com\"\n}\n```\n\n```yaml\nname: API Support\nurl: https://www.example.com/support\nemail: support@example.com\n```\n\n#### <a name=\"licenseObject\"></a>License Object\n\nLicense information for the exposed API.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"licenseObjectName\"></a>name | `string` | **Required.** The license name used for the API.\n<a name=\"licenseObjectUrl\"></a>url | `string` | A URL to the license used for the API. MUST be in the format of a URL.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### License Object Example:\n\n```json\n{\n  \"name\": \"Apache 2.0\",\n  \"url\": \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n}\n```\n\n```yaml\nname: Apache 2.0\nurl: https://www.apache.org/licenses/LICENSE-2.0.html\n```\n\n#### <a name=\"serversObject\"></a>Servers Object\n\nThe Servers Object is a map of [Server Objects](#serverObject).\n\n##### Patterned Fields\n\nField Pattern | Type | Description\n---|:---:|---\n<a name=\"serversObjectServer\"></a>`^[A-Za-z0-9_\\-]+$` | [Server Object](#serverObject) | The definition of a server this application MAY connect to.\n\n##### Servers Object Example\n\n```json\n{\n  \"production\": {\n    \"url\": \"development.gigantic-server.com\",\n    \"description\": \"Development server\",\n    \"protocol\": \"kafka\",\n    \"protocolVersion\": \"1.0.0\"\n  }\n}\n```\n\n```yaml\nproduction:\n  url: development.gigantic-server.com\n  description: Development server\n  protocol: kafka\n  protocolVersion: '1.0.0'\n```\n\n\n#### <a name=\"serverObject\"></a>Server Object\n\nAn object representing a message broker, a server or any other kind of computer program capable of sending and/or receiving data. This object is used to capture details such as URIs, protocols and security configuration. Variable substitution can be used so that some details, for example usernames and passwords, can be injected by code generation tools.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"serverObjectUrl\"></a>url | `string` | **REQUIRED**. A URL to the target host.  This URL supports Server Variables and MAY be relative, to indicate that the host location is relative to the location where the AsyncAPI document is being served. Variable substitutions will be made when a variable is named in `{`brackets`}`.\n<a name=\"serverObjectProtocol\"></a>protocol | `string` | **REQUIRED**. The protocol this URL supports for connection. Supported protocol include, but are not limited to: `amqp`, `amqps`, `http`, `https`, `ibmmq`, `jms`, `kafka`, `kafka-secure`, `anypointmq`, `mqtt`, `secure-mqtt`, `stomp`, `stomps`, `ws`, `wss`, `mercure`.\n<a name=\"serverObjectProtocolVersion\"></a>protocolVersion | `string` | The version of the protocol used for connection. For instance: AMQP `0.9.1`, HTTP `2.0`, Kafka `1.0.0`, etc.\n<a name=\"serverObjectDescription\"></a>description | `string` | An optional string describing the host designated by the URL. [CommonMark syntax](https://spec.commonmark.org/) MAY be used for rich text representation.\n<a name=\"serverObjectVariables\"></a>variables | Map[`string`, [Server Variable Object](#serverVariableObject)] | A map between a variable name and its value.  The value is used for substitution in the server's URL template.\n<a name=\"serverObjectSecurity\"></a>security | [[Security Requirement Object](#securityRequirementObject)] | A declaration of which security mechanisms can be used with this server. The list of values includes alternative security requirement objects that can be used. Only one of the security requirement objects need to be satisfied to authorize a connection or operation.\n<a name=\"serverObjectBindings\"></a>bindings | [Server Bindings Object](#serverBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the server.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n##### Server Object Example\n\nA single server would be described as:\n\n```json\n{\n  \"url\": \"development.gigantic-server.com\",\n  \"description\": \"Development server\",\n  \"protocol\": \"kafka\",\n  \"protocolVersion\": \"1.0.0\"\n}\n```\n\n```yaml\nurl: development.gigantic-server.com\ndescription: Development server\nprotocol: kafka\nprotocolVersion: '1.0.0'\n```\n\nThe following shows how multiple servers can be described, for example, at the AsyncAPI Object's [`servers`](#A2SServers):\n\n```json\n{\n  \"servers\": {\n    \"development\": {\n      \"url\": \"development.gigantic-server.com\",\n      \"description\": \"Development server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\"\n    },\n    \"staging\": {\n      \"url\": \"staging.gigantic-server.com\",\n      \"description\": \"Staging server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\"\n    },\n    \"production\": {\n      \"url\": \"api.gigantic-server.com\",\n      \"description\": \"Production server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\"\n    }\n  }\n}\n```\n\n```yaml\nservers:\n  development:\n    url: development.gigantic-server.com\n    description: Development server\n    protocol: amqp\n    protocolVersion: 0.9.1\n  staging:\n    url: staging.gigantic-server.com\n    description: Staging server\n    protocol: amqp\n    protocolVersion: 0.9.1\n  production:\n    url: api.gigantic-server.com\n    description: Production server\n    protocol: amqp\n    protocolVersion: 0.9.1\n```\n\nThe following shows how variables can be used for a server configuration:\n\n```json\n{\n  \"servers\": {\n    \"production\": {\n      \"url\": \"{username}.gigantic-server.com:{port}/{basePath}\",\n      \"description\": \"The production API server\",\n      \"protocol\": \"secure-mqtt\",\n      \"variables\": {\n        \"username\": {\n          \"default\": \"demo\",\n          \"description\": \"This value is assigned by the service provider, in this example `gigantic-server.com`\"\n        },\n        \"port\": {\n          \"enum\": [\n            \"8883\",\n            \"8884\"\n          ],\n          \"default\": \"8883\"\n        },\n        \"basePath\": {\n          \"default\": \"v2\"\n        }\n      }\n    }\n  }\n}\n```\n\n```yaml\nservers:\n  production:\n    url: '{username}.gigantic-server.com:{port}/{basePath}'\n    description: The production API server\n    protocol: secure-mqtt\n    variables:\n      username:\n        # note! no enum here means it is an open value\n        default: demo\n        description: This value is assigned by the service provider, in this example `gigantic-server.com`\n      port:\n        enum:\n          - '8883'\n          - '8884'\n        default: '8883'\n      basePath:\n        # open meaning there is the opportunity to use special base paths as assigned by the provider, default is `v2`\n        default: v2\n```\n\n\n#### <a name=\"serverVariableObject\"></a>Server Variable Object\n\nAn object representing a Server Variable for server URL template substitution.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"serverVariableObjectEnum\"></a>enum | [`string`] | An enumeration of string values to be used if the substitution options are from a limited set.\n<a name=\"serverVariableObjectDefault\"></a>default | `string` | The default value to use for substitution, and to send, if an alternate value is _not_ supplied.\n<a name=\"serverVariableObjectDescription\"></a>description | `string` | An optional description for the server variable. [CommonMark syntax](https://spec.commonmark.org/) MAY be used for rich text representation.\n<a name=\"serverVariableObjectExamples\"></a>examples | [`string`] | An array of examples of the server variable.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n\n\n#### <a name=\"defaultContentTypeString\"></a>Default Content Type\n\nA string representing the default content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. `application/json`). This value MUST be used by schema parsers when the [contentType](#messageObjectContentType) property is omitted.\n\nIn case a message can't be encoded/decoded using this value, schema parsers MUST use their default content type.\n\n##### Default Content Type Example\n\n```json\n{\n  \"defaultContentType\": \"application/json\"\n}\n```\n\n```yaml\ndefaultContentType: application/json\n```\n\n\n\n\n\n\n#### <a name=\"channelsObject\"></a>Channels Object\n\nHolds the relative paths to the individual channel and their operations. Channel paths are relative to servers.\n\nChannels are also known as \"topics\", \"routing keys\", \"event types\" or \"paths\".\n\n##### Patterned Fields\n\nField Pattern | Type | Description\n---|:---:|---\n<a name=\"channelsObjectChannel\"></a>{channel} | [Channel Item Object](#channelItemObject) | A relative path to an individual channel. The field name MUST be in the form of a [RFC 6570 URI template](https://tools.ietf.org/html/rfc6570). Query parameters and fragments SHALL NOT be used, instead use [bindings](#channelBindingsObject) to define them.\n\n##### Channels Object Example\n\n```json\n{\n  \"user/signedup\": {\n    \"subscribe\": {\n      \"message\": {\n        \"$ref\": \"#/components/messages/userSignedUp\"\n      }\n    }\n  }\n}\n```\n\n```yaml\nuser/signedup:\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n#### <a name=\"channelItemObject\"></a>Channel Item Object\n\nDescribes the operations available on a single channel.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"channelItemObjectRef\"></a>$ref | `string` | Allows for an external definition of this channel item. The referenced structure MUST be in the format of a [Channel Item Object](#channelItemObject). If there are conflicts between the referenced definition and this Channel Item's definition, the behavior is *undefined*.\n<a name=\"channelItemObjectDescription\"></a>description | `string` | An optional description of this channel item. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"channelItemObjectServers\"></a>servers | [`string`] | The servers on which this channel is available, specified as an optional unordered list of names (string keys) of [Server Objects](#serverObject) defined in the [Servers Object](#serversObject) (a map). If `servers` is absent or empty then this channel must be available on all servers defined in the [Servers Object](#serversObject).\n<a name=\"channelItemObjectSubscribe\"></a>subscribe | [Operation Object](#operationObject) | A definition of the SUBSCRIBE operation, which defines the messages produced by the application and sent to the channel.\n<a name=\"channelItemObjectPublish\"></a>publish | [Operation Object](#operationObject) | A definition of the PUBLISH operation, which defines the messages consumed by the application from the channel.\n<a name=\"channelItemObjectParameters\"></a>parameters | [Parameters Object](#parametersObject) | A map of the parameters included in the channel name. It SHOULD be present only when using channels with expressions (as defined by [RFC 6570 section 2.2](https://tools.ietf.org/html/rfc6570#section-2.2)).\n<a name=\"channelItemObjectBindings\"></a>bindings | [Channel Bindings Object](#channelBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the channel.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Channel Item Object Example\n\n```json\n{\n  \"description\": \"This channel is used to exchange messages about users signing up\",\n  \"subscribe\": {\n    \"summary\": \"A user signed up.\",\n    \"message\": {\n      \"description\": \"A longer description of the message\",\n      \"payload\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"user\": {\n            \"$ref\": \"#/components/schemas/user\"\n          },\n          \"signup\": {\n            \"$ref\": \"#/components/schemas/signup\"\n          }\n        }\n      }\n    }\n  },\n  \"bindings\": {\n    \"amqp\": {\n      \"is\": \"queue\",\n      \"queue\": {\n        \"exclusive\": true\n      }\n    }\n  }\n}\n```\n\n```yaml\ndescription: This channel is used to exchange messages about users signing up\nsubscribe:\n  summary: A user signed up.\n  message:\n    description: A longer description of the message\n    payload:\n      type: object\n      properties:\n        user:\n          $ref: \"#/components/schemas/user\"\n        signup:\nbindings:\n  amqp:\n    is: queue\n    queue:\n      exclusive: true\n```\n\nUsing `oneOf` to specify multiple messages per operation:\n\n```json\n{\n  \"subscribe\": {\n    \"message\": {\n      \"oneOf\": [\n        { \"$ref\": \"#/components/messages/signup\" },\n        { \"$ref\": \"#/components/messages/login\" }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nsubscribe:\n  message:\n    oneOf:\n      - $ref: '#/components/messages/signup'\n      - $ref: '#/components/messages/login'\n```\n\n\nUsing explicit by-name references to the servers on which the channel is available:\n\n```json\n{\n  \"description\": \"This application publishes WebUICommand messages to an AMQP queue on RabbitMQ brokers in the Staging and Production environments.\",\n  \"servers\": [\n    \"rabbitmqBrokerInProd\",\n    \"rabbitmqBrokerInStaging\",\n  ],\n  \"subscribe\": {\n    \"message\": {\n      \"$ref\": \"#/components/messages/WebUICommand\"\n    }\n  },\n  \"bindings\": {\n    \"amqp\": {\n      \"is\": \"queue\"\n    }\n  }\n}\n```\n\n```yaml\ndescription: This application publishes WebUICommand messages to an AMQP queue on RabbitMQ brokers in the Staging and Production environments.\nservers:\n  - rabbitmqBrokerInProd\n  - rabbitmqBrokerInStaging\nsubscribe:\n  message:\n    $ref: \"#/components/messages/WebUICommand\"\nbindings:\n  amqp:\n    is: queue\n```\n\n\n\n\n\n#### <a name=\"operationObject\"></a>Operation Object\n\nDescribes a publish or a subscribe operation. This provides a place to document how and why messages are sent and received.\n\nFor example, an operation might describe a chat application use case where a user sends a text message to a group. A publish operation describes messages that are received by the chat application, whereas a subscribe operation describes messages that are sent by the chat application.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"operationObjectOperationId\"></a>operationId | `string` | Unique string used to identify the operation. The id MUST be unique among all operations described in the API. The operationId value is **case-sensitive**. Tools and libraries MAY use the operationId to uniquely identify an operation, therefore, it is RECOMMENDED to follow common programming naming conventions.\n<a name=\"operationObjectSummary\"></a>summary | `string` | A short summary of what the operation is about.\n<a name=\"operationObjectDescription\"></a>description | `string` | A verbose explanation of the operation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"operationObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for API documentation control. Tags can be used for logical grouping of operations.\n<a name=\"operationObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this operation.\n<a name=\"operationObjectBindings\"></a>bindings | [Operation Bindings Object](#operationBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the operation.\n<a name=\"operationObjectTraits\"></a>traits | [[Operation Trait Object](#operationTraitObject) &#124; [Reference Object](#referenceObject) ] | A list of traits to apply to the operation object. Traits MUST be merged into the operation object using the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) algorithm in the same order they are defined here.\n<a name=\"operationObjectMessage\"></a>message | [[Message Object](#messageObject) &#124; [Reference Object](#referenceObject)] | A definition of the message that will be published or received on this channel. `oneOf` is allowed here to specify multiple messages, however, **a message MUST be valid only against one of the referenced message objects.**\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Operation Object Example\n\n```json\n{\n  \"operationId\": \"registerUser\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"message\": {\n    \"headers\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"applicationInstanceId\": {\n          \"description\": \"Unique identifier for a given instance of the publishing application\",\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"payload\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"user\": {\n          \"$ref\": \"#/components/schemas/userCreate\"\n        },\n        \"signup\": {\n          \"$ref\": \"#/components/schemas/signup\"\n        }\n      }\n    }\n  },\n  \"bindings\": {\n    \"amqp\": {\n      \"ack\": false\n    }\n  },\n  \"traits\": [\n    { \"$ref\": \"#/components/operationTraits/kafka\" }\n  ]\n}\n```\n\n```yaml\noperationId: registerUser\nsummary: Action to sign a user up.\ndescription: A longer description\ntags:\n  - name: user\n  - name: signup\n  - name: register\nmessage:\n  headers:\n    type: object\n    properties:\n      applicationInstanceId:\n        description: Unique identifier for a given instance of the publishing application\n        type: string\n  payload:\n    type: object\n    properties:\n      user:\n        $ref: \"#/components/schemas/userCreate\"\n      signup:\n        $ref: \"#/components/schemas/signup\"\nbindings:\n  amqp:\n    ack: false\ntraits:\n  - $ref: \"#/components/operationTraits/kafka\"\n```\n\n\n\n\n#### <a name=\"operationTraitObject\"></a>Operation Trait Object\n\nDescribes a trait that MAY be applied to an [Operation Object](#operationObject). This object MAY contain any property from the [Operation Object](#operationObject), except `message` and `traits`.\n\nIf you're looking to apply traits to a message, see the [Message Trait Object](#messageTraitObject).\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"operationTraitObjectOperationId\"></a>operationId | `string` | Unique string used to identify the operation. The id MUST be unique among all operations described in the API. The operationId value is **case-sensitive**. Tools and libraries MAY use the operationId to uniquely identify an operation, therefore, it is RECOMMENDED to follow common programming naming conventions.\n<a name=\"operationTraitObjectSummary\"></a>summary | `string` | A short summary of what the operation is about.\n<a name=\"operationTraitObjectDescription\"></a>description | `string` | A verbose explanation of the operation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"operationTraitObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for API documentation control. Tags can be used for logical grouping of operations.\n<a name=\"operationTraitObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this operation.\n<a name=\"operationTraitObjectBindings\"></a>bindings | [Operation Bindings Object](#operationBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the operation.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Operation Trait Object Example\n\n```json\n{\n  \"bindings\": {\n    \"amqp\": {\n      \"ack\": false\n    }\n  }\n}\n```\n\n```yaml\nbindings:\n  amqp:\n    ack: false\n```\n\n\n\n\n#### <a name=\"parametersObject\"></a>Parameters Object\n\nDescribes a map of parameters included in a channel name.\n\nThis map MUST contain all the parameters used in the parent channel name.\n\n##### Patterned Fields\n\nField Pattern | Type | Description\n---|:---:|---\n<a name=\"parametersObjectName\"></a>`^[A-Za-z0-9_\\-]+$` | [Parameter Object](#parameterObject) &#124; [Reference Object](#referenceObject) | The key represents the name of the parameter. It MUST match the parameter name used in the parent channel name.\n\n##### Parameters Object Example\n\n```json\n{\n  \"user/{userId}/signup\": {\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"subscribe\": {\n      \"message\": {\n        \"$ref\": \"#/components/messages/userSignedUp\"\n      }\n    }\n  }\n}\n```\n\n```yaml\nuser/{userId}/signup:\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n\n#### <a name=\"parameterObject\"></a>Parameter Object\n\nDescribes a parameter included in a channel name.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"parameterObjectDescription\"></a>description | `string` | A verbose explanation of the parameter. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"parameterObjectSchema\"></a>schema | [Schema Object](#schemaObject) \\| [Reference Object](#referenceObject) | Definition of the parameter.\nlocation | `string` | A [runtime expression](#runtimeExpression) that specifies the location of the parameter value. Even when a definition for the target field exists, it MUST NOT be used to validate this parameter but, instead, the `schema` property MUST be used.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Parameter Object Example\n\n```json\n{\n  \"user/{userId}/signup\": {\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"location\": \"$message.payload#/user/id\"\n      }\n    },\n    \"subscribe\": {\n      \"message\": {\n        \"$ref\": \"#/components/messages/userSignedUp\"\n      }\n    }\n  }\n}\n```\n\n```yaml\nuser/{userId}/signup:\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n      location: $message.payload#/user/id\n  subscribe:\n    message:\n      $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n#### <a name=\"serverBindingsObject\"></a>Server Bindings Object\n\nMap describing protocol-specific definitions for a server.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"serverBindingsObjectHTTP\"></a>`http` | [HTTP Server Binding](https://github.com/asyncapi/bindings/blob/master/http#server) | Protocol-specific information for an HTTP server.\n<a name=\"serverBindingsObjectWebSockets\"></a>`ws` | [WebSockets Server Binding](https://github.com/asyncapi/bindings/blob/master/websockets#server) | Protocol-specific information for a WebSockets server.\n<a name=\"serverBindingsObjectKafka\"></a>`kafka` | [Kafka Server Binding](https://github.com/asyncapi/bindings/blob/master/kafka#server) | Protocol-specific information for a Kafka server.\n<a name=\"serverBindingsObjectAnypointMQ\"></a>`anypointmq` | [Anypoint MQ Server Binding](https://github.com/asyncapi/bindings/blob/master/anypointmq#server) | Protocol-specific information for an Anypoint MQ server.\n<a name=\"serverBindingsObjectAMQP\"></a>`amqp` | [AMQP Server Binding](https://github.com/asyncapi/bindings/blob/master/amqp#server) | Protocol-specific information for an AMQP 0-9-1 server.\n<a name=\"serverBindingsObjectAMQP1\"></a>`amqp1` | [AMQP 1.0 Server Binding](https://github.com/asyncapi/bindings/blob/master/amqp1#server) | Protocol-specific information for an AMQP 1.0 server.\n<a name=\"serverBindingsObjectMQTT\"></a>`mqtt` | [MQTT Server Binding](https://github.com/asyncapi/bindings/blob/master/mqtt#server) | Protocol-specific information for an MQTT server.\n<a name=\"serverBindingsObjectMQTT5\"></a>`mqtt5` | [MQTT 5 Server Binding](https://github.com/asyncapi/bindings/blob/master/mqtt5#server) | Protocol-specific information for an MQTT 5 server.\n<a name=\"serverBindingsObjectNATS\"></a>`nats` | [NATS Server Binding](https://github.com/asyncapi/bindings/blob/master/nats#server) | Protocol-specific information for a NATS server.\n<a name=\"serverBindingsObjectJMS\"></a>`jms` | [JMS Server Binding](https://github.com/asyncapi/bindings/blob/master/jms#server) | Protocol-specific information for a JMS server.\n<a name=\"serverBindingsObjectSNS\"></a>`sns` | [SNS Server Binding](https://github.com/asyncapi/bindings/blob/master/sns#server) | Protocol-specific information for an SNS server.\n<a name=\"serverBindingsObjectSQS\"></a>`sqs` | [SQS Server Binding](https://github.com/asyncapi/bindings/blob/master/sqs#server) | Protocol-specific information for an SQS server.\n<a name=\"serverBindingsObjectSTOMP\"></a>`stomp` | [STOMP Server Binding](https://github.com/asyncapi/bindings/blob/master/stomp#server) | Protocol-specific information for a STOMP server.\n<a name=\"serverBindingsObjectRedis\"></a>`redis` | [Redis Server Binding](https://github.com/asyncapi/bindings/blob/master/redis#server) | Protocol-specific information for a Redis server.\n<a name=\"serverBindingsObjectMercure\"></a>`mercure` | [Mercure Server Binding](https://github.com/asyncapi/bindings/blob/master/mercure#server) | Protocol-specific information for a Mercure server.\n<a name=\"serverBindingsObjectIBMMQ\"></a>`ibmmq` | [IBM MQ Server Binding](https://github.com/asyncapi/bindings/blob/master/ibmmq#server-binding-object) | Protocol-specific information for an IBM MQ server.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n#### <a name=\"channelBindingsObject\"></a>Channel Bindings Object\n\nMap describing protocol-specific definitions for a channel.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"channelBindingsObjectHTTP\"></a>`http` | [HTTP Channel Binding](https://github.com/asyncapi/bindings/blob/master/http/README.md#channel) | Protocol-specific information for an HTTP channel.\n<a name=\"channelBindingsObjectWebSockets\"></a>`ws` | [WebSockets Channel Binding](https://github.com/asyncapi/bindings/blob/master/websockets/README.md#channel) | Protocol-specific information for a WebSockets channel.\n<a name=\"channelBindingsObjectKafka\"></a>`kafka` | [Kafka Channel Binding](https://github.com/asyncapi/bindings/blob/master/kafka/README.md#channel) | Protocol-specific information for a Kafka channel.\n<a name=\"channelBindingsObjectAnypointMQ\"></a>`anypointmq` | [Anypoint MQ Channel Binding](https://github.com/asyncapi/bindings/blob/master/anypointmq/README.md#channel) | Protocol-specific information for an Anypoint MQ channel.\n<a name=\"channelBindingsObjectAMQP\"></a>`amqp` | [AMQP Channel Binding](https://github.com/asyncapi/bindings/blob/master/amqp/README.md#channel) | Protocol-specific information for an AMQP 0-9-1 channel.\n<a name=\"channelBindingsObjectAMQP1\"></a>`amqp1` | [AMQP 1.0 Channel Binding](https://github.com/asyncapi/bindings/blob/master/amqp1/README.md#channel) | Protocol-specific information for an AMQP 1.0 channel.\n<a name=\"channelBindingsObjectMQTT\"></a>`mqtt` | [MQTT Channel Binding](https://github.com/asyncapi/bindings/blob/master/mqtt/README.md#channel) | Protocol-specific information for an MQTT channel.\n<a name=\"channelBindingsObjectMQTT5\"></a>`mqtt5` | [MQTT 5 Channel Binding](https://github.com/asyncapi/bindings/blob/master/mqtt5#channel) | Protocol-specific information for an MQTT 5 channel.\n<a name=\"channelBindingsObjectNATS\"></a>`nats` | [NATS Channel Binding](https://github.com/asyncapi/bindings/blob/master/nats/README.md#channel) | Protocol-specific information for a NATS channel.\n<a name=\"channelBindingsObjectJMS\"></a>`jms` | [JMS Channel Binding](https://github.com/asyncapi/bindings/blob/master/jms/README.md#channel) | Protocol-specific information for a JMS channel.\n<a name=\"channelBindingsObjectSNS\"></a>`sns` | [SNS Channel Binding](https://github.com/asyncapi/bindings/blob/master/sns/README.md#channel) | Protocol-specific information for an SNS channel.\n<a name=\"channelBindingsObjectSQS\"></a>`sqs` | [SQS Channel Binding](https://github.com/asyncapi/bindings/blob/master/sqs/README.md#channel) | Protocol-specific information for an SQS channel.\n<a name=\"channelBindingsObjectSTOMP\"></a>`stomp` | [STOMP Channel Binding](https://github.com/asyncapi/bindings/blob/master/stomp/README.md#channel) | Protocol-specific information for a STOMP channel.\n<a name=\"channelBindingsObjectRedis\"></a>`redis` | [Redis Channel Binding](https://github.com/asyncapi/bindings/blob/master/redis#channel) | Protocol-specific information for a Redis channel.\n<a name=\"channelBindingsObjectMercure\"></a>`mercure` | [Mercure Channel Binding](https://github.com/asyncapi/bindings/blob/master/mercure#channel) | Protocol-specific information for a Mercure channel.\n<a name=\"channelBindingsObjectIBMMQ\"></a>`ibmmq` | [IBM MQ Channel Binding](https://github.com/asyncapi/bindings/tree/master/ibmmq#channel-binding-object) | Protocol-specific information for an IBM MQ channel.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n#### <a name=\"operationBindingsObject\"></a>Operation Bindings Object\n\nMap describing protocol-specific definitions for an operation.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"operationBindingsObjectHTTP\"></a>`http` | [HTTP Operation Binding](https://github.com/asyncapi/bindings/blob/master/http/README.md#operation) | Protocol-specific information for an HTTP operation.\n<a name=\"operationBindingsObjectWebSockets\"></a>`ws` | [WebSockets Operation Binding](https://github.com/asyncapi/bindings/blob/master/websockets/README.md#operation) | Protocol-specific information for a WebSockets operation.\n<a name=\"operationBindingsObjectKafka\"></a>`kafka` | [Kafka Operation Binding](https://github.com/asyncapi/bindings/blob/master/kafka/README.md#operation) | Protocol-specific information for a Kafka operation.\n<a name=\"operationBindingsObjectAnypointMQ\"></a>`anypointmq` | [Anypoint MQ Operation Binding](https://github.com/asyncapi/bindings/blob/master/anypointmq/README.md#operation) | Protocol-specific information for an Anypoint MQ operation.\n<a name=\"operationBindingsObjectAMQP\"></a>`amqp` | [AMQP Operation Binding](https://github.com/asyncapi/bindings/blob/master/amqp/README.md#operation) | Protocol-specific information for an AMQP 0-9-1 operation.\n<a name=\"operationBindingsObjectAMQP1\"></a>`amqp1` | [AMQP 1.0 Operation Binding](https://github.com/asyncapi/bindings/blob/master/amqp1/README.md#operation) | Protocol-specific information for an AMQP 1.0 operation.\n<a name=\"operationBindingsObjectMQTT\"></a>`mqtt` | [MQTT Operation Binding](https://github.com/asyncapi/bindings/blob/master/mqtt/README.md#operation) | Protocol-specific information for an MQTT operation.\n<a name=\"operationBindingsObjectMQTT5\"></a>`mqtt5` | [MQTT 5 Operation Binding](https://github.com/asyncapi/bindings/blob/master/mqtt5/README.md#operation) | Protocol-specific information for an MQTT 5 operation.\n<a name=\"operationBindingsObjectNATS\"></a>`nats` | [NATS Operation Binding](https://github.com/asyncapi/bindings/blob/master/nats/README.md#operation) | Protocol-specific information for a NATS operation.\n<a name=\"operationBindingsObjectJMS\"></a>`jms` | [JMS Operation Binding](https://github.com/asyncapi/bindings/blob/master/jms/README.md#operation) | Protocol-specific information for a JMS operation.\n<a name=\"operationBindingsObjectSNS\"></a>`sns` | [SNS Operation Binding](https://github.com/asyncapi/bindings/blob/master/sns/README.md#operation) | Protocol-specific information for an SNS operation.\n<a name=\"operationBindingsObjectSQS\"></a>`sqs` | [SQS Operation Binding](https://github.com/asyncapi/bindings/blob/master/sqs/README.md#operation) | Protocol-specific information for an SQS operation.\n<a name=\"operationBindingsObjectSTOMP\"></a>`stomp` | [STOMP Operation Binding](https://github.com/asyncapi/bindings/blob/master/stomp/README.md#operation) | Protocol-specific information for a STOMP operation.\n<a name=\"operationBindingsObjectRedis\"></a>`redis` | [Redis Operation Binding](https://github.com/asyncapi/bindings/blob/master/redis#operation) | Protocol-specific information for a Redis operation.\n<a name=\"operationBindingsObjectMercure\"></a>`mercure` | [Mercure Operation Binding](https://github.com/asyncapi/bindings/blob/master/mercure#operation) | Protocol-specific information for a Mercure operation.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n\n#### <a name=\"messageBindingsObject\"></a>Message Bindings Object\n\nMap describing protocol-specific definitions for a message.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"messageBindingsObjectHTTP\"></a>`http` | [HTTP Message Binding](https://github.com/asyncapi/bindings/blob/master/http/README.md#message) | Protocol-specific information for an HTTP message, i.e., a request or a response.\n<a name=\"messageBindingsObjectWebSockets\"></a>`ws` | [WebSockets Message Binding](https://github.com/asyncapi/bindings/blob/master/websockets/README.md#message) | Protocol-specific information for a WebSockets message.\n<a name=\"messageBindingsObjectKafka\"></a>`kafka` | [Kafka Message Binding](https://github.com/asyncapi/bindings/blob/master/kafka/README.md#message) | Protocol-specific information for a Kafka message.\n<a name=\"messageBindingsObjectAnypointMQ\"></a>`anypointmq` | [Anypoint MQ Message Binding](https://github.com/asyncapi/bindings/blob/master/anypointmq/README.md#message) | Protocol-specific information for an Anypoint MQ message.\n<a name=\"messageBindingsObjectAMQP\"></a>`amqp` | [AMQP Message Binding](https://github.com/asyncapi/bindings/blob/master/amqp/README.md#message) | Protocol-specific information for an AMQP 0-9-1 message.\n<a name=\"messageBindingsObjectAMQP1\"></a>`amqp1` | [AMQP 1.0 Message Binding](https://github.com/asyncapi/bindings/blob/master/amqp1/README.md#message) | Protocol-specific information for an AMQP 1.0 message.\n<a name=\"messageBindingsObjectMQTT\"></a>`mqtt` | [MQTT Message Binding](https://github.com/asyncapi/bindings/blob/master/mqtt/README.md#message) | Protocol-specific information for an MQTT message.\n<a name=\"messageBindingsObjectMQTT5\"></a>`mqtt5` | [MQTT 5 Message Binding](https://github.com/asyncapi/bindings/blob/master/mqtt5/README.md#message) | Protocol-specific information for an MQTT 5 message.\n<a name=\"messageBindingsObjectNATS\"></a>`nats` | [NATS Message Binding](https://github.com/asyncapi/bindings/blob/master/nats/README.md#message) | Protocol-specific information for a NATS message.\n<a name=\"messageBindingsObjectJMS\"></a>`jms` | [JMS Message Binding](https://github.com/asyncapi/bindings/blob/master/jms/README.md#message) | Protocol-specific information for a JMS message.\n<a name=\"messageBindingsObjectSNS\"></a>`sns` | [SNS Message Binding](https://github.com/asyncapi/bindings/blob/master/sns/README.md#message) | Protocol-specific information for an SNS message.\n<a name=\"messageBindingsObjectSQS\"></a>`sqs` | [SQS Message Binding](https://github.com/asyncapi/bindings/blob/master/sqs/README.md#message) | Protocol-specific information for an SQS message.\n<a name=\"messageBindingsObjectSTOMP\"></a>`stomp` | [STOMP Message Binding](https://github.com/asyncapi/bindings/blob/master/stomp/README.md#message) | Protocol-specific information for a STOMP message.\n<a name=\"messageBindingsObjectRedis\"></a>`redis` | [Redis Message Binding](https://github.com/asyncapi/bindings/blob/master/redis#message) | Protocol-specific information for a Redis message.\n<a name=\"messageBindingsObjectMercure\"></a>`mercure` | [Mercure Message Binding](https://github.com/asyncapi/bindings/blob/master/mercure#message) | Protocol-specific information for a Mercure message.\n<a name=\"messageBindingsObjectIBMMQ\"></a>`ibmmq` | [IBM MQ Message Binding](https://github.com/asyncapi/bindings/tree/master/ibmmq#message-binding-object) | Protocol-specific information for an IBM MQ message.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n\n\n\n\n#### <a name=\"messageObject\"></a>Message Object\n\nDescribes a message received on a given channel and operation.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"messageObjectHeaders\"></a>headers | [Schema Object](#schemaObject) &#124; [Reference Object](#referenceObject) | Schema definition of the application headers. Schema MUST be of type \"object\". It **MUST NOT** define the protocol headers.\n<a name=\"messageObjectPayload\"></a>payload | `any` | Definition of the message payload. It can be of any type but defaults to [Schema object](#schemaObject). It must match the schema format, including encoding type - e.g Avro should be inlined as either a YAML or JSON object NOT a string to be parsed as YAML or JSON.\n<a name=\"messageObjectCorrelationId\"></a>correlationId | [Correlation ID Object](#correlationIdObject) &#124; [Reference Object](#referenceObject) | Definition of the correlation ID used for message tracing or matching.\n<a name=\"messageObjectSchemaFormat\"></a>schemaFormat | `string` | A string containing the name of the schema format used to define the message payload. If omitted, implementations should parse the payload as a [Schema object](#schemaObject). When the payload is defined using a `$ref` to a remote file, it is RECOMMENDED the schema format includes the file encoding type to allow implementations to parse the file correctly. E.g., adding `+yaml` if content type is `application/vnd.apache.avro` results in `application/vnd.apache.avro+yaml`.<br/><br/>Check out the [supported schema formats table](#messageObjectSchemaFormatTable) for more information. Custom values are allowed but their implementation is OPTIONAL. A custom value MUST NOT refer to one of the schema formats listed in the [table](#messageObjectSchemaFormatTable).\n<a name=\"messageObjectContentType\"></a>contentType | `string` | The content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. `application/json`). When omitted, the value MUST be the one specified on the [defaultContentType](#defaultContentTypeString) field.\n<a name=\"messageObjectName\"></a>name | `string` | A machine-friendly name for the message.\n<a name=\"messageObjectTitle\"></a>title | `string` | A human-friendly title for the message.\n<a name=\"messageObjectSummary\"></a>summary | `string` | A short summary of what the message is about.\n<a name=\"messageObjectDescription\"></a>description | `string` | A verbose explanation of the message. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"messageObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for API documentation control. Tags can be used for logical grouping of messages.\n<a name=\"messageObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this message.\n<a name=\"messageObjectBindings\"></a>bindings | [Message Bindings Object](#messageBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the message.\n<a name=\"messageObjectExamples\"></a>examples | [[Message Example Object](#messageExampleObject)] | List of examples.\n<a name=\"messageObjectTraits\"></a>traits | [[Message Trait Object](#messageTraitObject) &#124; [Reference Object](#referenceObject)] | A list of traits to apply to the message object. Traits MUST be merged into the message object using the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) algorithm in the same order they are defined here. The resulting object MUST be a valid [Message Object](#messageObject).\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### <a name=\"messageObjectSchemaFormatTable\"></a>Schema formats table\n\nThe following table contains a set of values that every implementation MUST support.\n\nName | Allowed values | Notes\n---|:---:|---\n[AsyncAPI 2.2.0 Schema Object](#schemaObject) | `application/vnd.aai.asyncapi;version=2.2.0`, `application/vnd.aai.asyncapi+json;version=2.2.0`, `application/vnd.aai.asyncapi+yaml;version=2.2.0` | This is the default when a `schemaFormat` is not provided.\n[JSON Schema Draft 07](https://json-schema.org/specification-links.html#draft-7) | `application/schema+json;version=draft-07`, `application/schema+yaml;version=draft-07` | \n\nThe following table contains a set of values that every implementation is RECOMMENDED to support.\n\nName | Allowed values | Notes\n---|:---:|---\n[Avro 1.9.0 schema](https://avro.apache.org/docs/1.9.0/spec.html#schemas) | `application/vnd.apache.avro;version=1.9.0`, `application/vnd.apache.avro+json;version=1.9.0`, `application/vnd.apache.avro+yaml;version=1.9.0` |\n[OpenAPI 3.0.0 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject) | `application/vnd.oai.openapi;version=3.0.0`, `application/vnd.oai.openapi+json;version=3.0.0`, `application/vnd.oai.openapi+yaml;version=3.0.0` | \n[RAML 1.0 data type](https://github.com/raml-org/raml-spec/blob/master/versions/raml-10/raml-10.md/) | `application/raml+yaml;version=1.0` |\n\n\n##### Message Object Example\n\n```json\n{\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"contentType\": \"application/json\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"headers\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"correlationId\": {\n        \"description\": \"Correlation ID set by application\",\n        \"type\": \"string\"\n      },\n      \"applicationInstanceId\": {\n        \"description\": \"Unique identifier for a given instance of the publishing application\",\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"payload\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"user\": {\n        \"$ref\": \"#/components/schemas/userCreate\"\n      },\n      \"signup\": {\n        \"$ref\": \"#/components/schemas/signup\"\n      }\n    }\n  },\n  \"correlationId\": {\n    \"description\": \"Default Correlation ID\",\n    \"location\": \"$message.header#/correlationId\"\n  },\n  \"traits\": [\n    { \"$ref\": \"#/components/messageTraits/commonHeaders\" }\n  ],\n  \"examples\": [\n    {\n      \"name\": \"SimpleSignup\",\n      \"summary\": \"A simple UserSignup example message\",\n      \"headers\": {\n        \"correlationId\": \"my-correlation-id\",\n        \"applicationInstanceId\": \"myInstanceId\"\n      },\n      \"payload\": {\n        \"user\": {\n          \"someUserKey\": \"someUserValue\"\n        },\n        \"signup\": {\n          \"someSignupKey\": \"someSignupValue\"\n        }\n      }\n    }\n  ]\n}\n```\n\n```yaml\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ncontentType: application/json\ntags:\n  - name: user\n  - name: signup\n  - name: register\nheaders:\n  type: object\n  properties:\n    correlationId:\n      description: Correlation ID set by application\n      type: string\n    applicationInstanceId:\n      description: Unique identifier for a given instance of the publishing application\n      type: string\npayload:\n  type: object\n  properties:\n    user:\n      $ref: \"#/components/schemas/userCreate\"\n    signup:\n      $ref: \"#/components/schemas/signup\"\ncorrelationId:\n  description: Default Correlation ID\n  location: $message.header#/correlationId\ntraits:\n  - $ref: \"#/components/messageTraits/commonHeaders\"\nexamples:\n  - name: SimpleSignup\n    summary: A simple UserSignup example message\n    headers:\n      correlationId: my-correlation-id\n      applicationInstanceId: myInstanceId\n    payload:\n      user:\n        someUserKey: someUserValue\n      signup:\n        someSignupKey: someSignupValue\n```\n\nExample using Avro to define the payload:\n\n```json\n{\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"schemaFormat\": \"application/vnd.apache.avro+json;version=1.9.0\",\n  \"payload\": {\n    \"$ref\": \"path/to/user-create.avsc#/UserCreate\"\n  }\n}\n```\n\n```yaml\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ntags:\n  - name: user\n  - name: signup\n  - name: register\nschemaFormat: 'application/vnd.apache.avro+yaml;version=1.9.0'\npayload:\n  $ref: 'path/to/user-create.avsc/#UserCreate'\n```\n\n\n\n\n\n\n\n#### <a name=\"messageTraitObject\"></a>Message Trait Object\n\nDescribes a trait that MAY be applied to a [Message Object](#messageObject). This object MAY contain any property from the [Message Object](#messageObject), except `payload` and `traits`.\n\nIf you're looking to apply traits to an operation, see the [Operation Trait Object](#operationTraitObject).\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"messageTraitObjectHeaders\"></a>headers | [Schema Object](#schemaObject) &#124; [Reference Object](#referenceObject) | Schema definition of the application headers. Schema MUST be of type \"object\". It **MUST NOT** define the protocol headers.\n<a name=\"messageTraitObjectCorrelationId\"></a>correlationId | [Correlation ID Object](#correlationIdObject) &#124; [Reference Object](#referenceObject) | Definition of the correlation ID used for message tracing or matching.\n<a name=\"messageTraitObjectSchemaFormat\"></a>schemaFormat | `string` | A string containing the name of the schema format/language used to define the message payload. If omitted, implementations should parse the payload as a [Schema object](#schemaObject).\n<a name=\"messageTraitObjectContentType\"></a>contentType | `string` | The content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. `application/json`). When omitted, the value MUST be the one specified on the [defaultContentType](#defaultContentTypeString) field.\n<a name=\"messageTraitObjectName\"></a>name | `string` | A machine-friendly name for the message.\n<a name=\"messageTraitObjectTitle\"></a>title | `string` | A human-friendly title for the message.\n<a name=\"messageTraitObjectSummary\"></a>summary | `string` | A short summary of what the message is about.\n<a name=\"messageTraitObjectDescription\"></a>description | `string` | A verbose explanation of the message. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"messageTraitObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for API documentation control. Tags can be used for logical grouping of messages.\n<a name=\"messageTraitObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this message.\n<a name=\"messageTraitObjectBindings\"></a>bindings | [Message Bindings Object](#messageBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the message.\n<a name=\"messageTraitObjectExamples\"></a>examples | [[Message Example Object](#messageExampleObject)] | List of examples.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Message Trait Object Example\n\n```json\n{\n  \"schemaFormat\": \"application/vnd.apache.avro+json;version=1.9.0\",\n  \"contentType\": \"application/json\"\n}\n```\n\n```yaml\nschemaFormat: 'application/vnd.apache.avro+yaml;version=1.9.0'\ncontentType: application/json\n```\n\n#### <a name=\"messageExampleObject\"></a> Message Example Object\n\nMessage Example Object represents an example of a [Message Object](#messageObject) and MUST contain either **headers** and/or **payload** fields. \n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"messageExampleObjectHeaders\"></a>headers | `Map[string, any]` | The value of this field MUST validate against the [Message Object's headers](#messageObjectHeaders) field. \n<a name=\"messageExampleObjectPayload\"></a>payload | `any` | The value of this field MUST validate against the [Message Object's payload](#messageObjectPayload) field.\n<a name=\"messageExampleObjectName\"></a>name | `string` | A machine-friendly name.\n<a name=\"messageExampleObjectSummary\"></a>summary | `string` |  A short summary of what the example is about.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Message Example Object Example\n\n```json\n{\n  \"name\": \"SimpleSignup\",\n  \"summary\": \"A simple UserSignup example message\",\n  \"headers\": {\n    \"correlationId\": \"my-correlation-id\",\n    \"applicationInstanceId\": \"myInstanceId\"\n  },\n  \"payload\": {\n    \"user\": {\n      \"someUserKey\": \"someUserValue\"\n    },\n    \"signup\": {\n      \"someSignupKey\": \"someSignupValue\"\n    }\n  }\n}\n```\n\n```yaml\nname: SimpleSignup\nsummary: A simple UserSignup example message\nheaders:\n  correlationId: my-correlation-id\n  applicationInstanceId: myInstanceId\npayload:\n  user:\n    someUserKey: someUserValue\n  signup:\n    someSignupKey: someSignupValue\n```\n\n#### <a name=\"tagsObject\"></a>Tags Object\n\nA Tags object is a list of Tag Objects.\n\n#### <a name=\"tagObject\"></a>Tag Object\n\nAllows adding meta data to a single tag.\n\n##### Fixed Fields\nField Name | Type | Description\n---|:---:|---\n<a name=\"tagObjectName\"></a>name | `string` | **Required.** The name of the tag.\n<a name=\"tagObjectDescription\"></a>description | `string` | A short description for the tag. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"tagObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this tag.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Tag Object Example\n\n```json\n{\n\t\"name\": \"user\",\n\t\"description\": \"User-related messages\"\n}\n```\n\n```yaml\nname: user\ndescription: User-related messages\n```\n\n\n\n\n\n\n\n#### <a name=\"externalDocumentationObject\"></a>External Documentation Object\n\nAllows referencing an external resource for extended documentation.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **Required.** The URL for the target documentation. Value MUST be in the format of a URL.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### External Documentation Object Example\n\n```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n#### <a name=\"referenceObject\"></a>Reference Object\n\nA simple object to allow referencing other components in the specification, internally and externally.\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n##### Fixed Fields\nField Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **Required.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n##### Reference Object Example\n\n```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n#### <a name=\"componentsObject\"></a>Components Object\n\nHolds a set of reusable objects for different aspects of the AsyncAPI specification.\nAll objects defined within the components object will have no effect on the API unless they are explicitly referenced from properties outside the components object.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---|---\n<a name=\"componentsSchemas\"></a> schemas | Map[`string`, [Schema Object](#schemaObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Schema Objects](#schemaObject).\n<a name=\"componentsMessages\"></a> messages | Map[`string`, [Message Object](#messageObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Message Objects](#messageObject).\n<a name=\"componentsSecuritySchemes\"></a> securitySchemes| Map[`string`, [Security Scheme Object](#securitySchemeObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Security Scheme Objects](#securitySchemeObject).\n<a name=\"componentsParameters\"></a> parameters | Map[`string`, [Parameter Object](#parameterObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Parameter Objects](#parameterObject).\n<a name=\"componentsCorrelationIDs\"></a> correlationIds | Map[`string`, [Correlation ID Object](#correlationIdObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Correlation ID Objects](#correlationIdObject).\n<a name=\"componentsOperationTraits\"></a> operationTraits | Map[`string`, [Operation Trait Object](#operationTraitObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Operation Trait Objects](#operationTraitObject).\n<a name=\"componentsMessageTraits\"></a> messageTraits | Map[`string`, [Message Trait Object](#messageTraitObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Message Trait Objects](#messageTraitObject).\n<a name=\"componentsServerBindings\"></a> serverBindings | Map[`string`, [Server Bindings Object](#serverBindingsObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Server Bindings Objects](#serverBindingsObject).\n<a name=\"componentsChannelBindings\"></a> channelBindings | Map[`string`, [Channel Bindings Object](#channelBindingsObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Channel Bindings Objects](#channelBindingsObject).\n<a name=\"componentsOperationBindings\"></a> operationBindings | Map[`string`, [Operation Bindings Object](#operationBindingsObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Operation Bindings Objects](#operationBindingsObject).\n<a name=\"componentsMessageBindings\"></a> messageBindings | Map[`string`, [Message Bindings Object](#messageBindingsObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Message Bindings Objects](#messageBindingsObject).\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\nAll the fixed fields declared above are objects that MUST use keys that match the regular expression: `^[a-zA-Z0-9\\.\\-_]+$`.\n\nField Name Examples:\n\n```\nUser\nUser_1\nUser_Name\nuser-name\nmy.org.User\n```\n\n##### Components Object Example\n\n```json\n{\n  \"components\": {\n    \"schemas\": {\n      \"Category\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"messages\": {\n      \"userSignUp\": {\n        \"summary\": \"Action to sign a user up.\",\n        \"description\": \"Multiline description of what this action does.\\nHere you have another line.\\n\",\n        \"tags\": [\n          {\n            \"name\": \"user\"\n          },\n          {\n            \"name\": \"signup\"\n          }\n        ],\n        \"headers\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"applicationInstanceId\": {\n              \"description\": \"Unique identifier for a given instance of the publishing application\",\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"payload\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"user\": {\n              \"$ref\": \"#/components/schemas/userCreate\"\n            },\n            \"signup\": {\n              \"$ref\": \"#/components/schemas/signup\"\n            }\n          }\n        }\n      }\n    },\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"correlationIds\": {\n      \"default\": {\n        \"description\": \"Default Correlation ID\",\n        \"location\": \"$message.header#/correlationId\"\n      }\n    },\n    \"messageTraits\": {\n      \"commonHeaders\": {\n        \"headers\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"my-app-header\": {\n              \"type\": \"integer\",\n              \"minimum\": 0,\n              \"maximum\": 100\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\n```yaml\ncomponents:\n  schemas:\n    Category:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n    Tag:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n  messages:\n    userSignUp:\n      summary: Action to sign a user up.\n      description: |\n        Multiline description of what this action does.\n        Here you have another line.\n      tags:\n        - name: user\n        - name: signup\n      headers:\n        type: object\n        properties:\n          applicationInstanceId:\n            description: Unique identifier for a given instance of the publishing application\n            type: string\n      payload:\n        type: object\n        properties:\n          user:\n            $ref: \"#/components/schemas/userCreate\"\n          signup:\n            $ref: \"#/components/schemas/signup\"\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n  correlationIds:\n    default:\n      description: Default Correlation ID\n      location: $message.header#/correlationId\n  messageTraits:\n    commonHeaders:\n      headers:\n        type: object\n        properties:\n          my-app-header:\n            type: integer\n            minimum: 0\n            maximum: 100\n```\n\n#### <a name=\"schemaObject\"></a>Schema Object\n\nThe Schema Object allows the definition of input and output data types.\nThese types can be objects, but also primitives and arrays. This object is a superset of the [JSON Schema Specification Draft 07](https://json-schema.org/). The empty schema (which allows any instance to validate) MAY be represented by the `boolean` value `true` and a schema which allows no instance to validate MAY be represented by the `boolean` value `false`.\n\nFurther information about the properties can be found in [JSON Schema Core](https://tools.ietf.org/html/draft-handrews-json-schema-01) and [JSON Schema Validation](https://tools.ietf.org/html/draft-handrews-json-schema-validation-01).\nUnless stated otherwise, the property definitions follow the JSON Schema specification as referenced here.\n\n##### Properties\n\nThe AsyncAPI Schema Object is a JSON Schema vocabulary which extends JSON Schema Core and Validation vocabularies. As such, any keyword available for those vocabularies is by definition available in AsyncAPI, and will work the exact same way, including but not limited to:\n\n- title\n- type\n- required\n- multipleOf\n- maximum\n- exclusiveMaximum\n- minimum\n- exclusiveMinimum\n- maxLength\n- minLength\n- pattern (This string SHOULD be a valid regular expression, according to the [ECMA 262 regular expression](https://www.ecma-international.org/ecma-262/5.1/#sec-7.8.5) dialect)\n- maxItems\n- minItems\n- uniqueItems\n- maxProperties\n- minProperties\n- enum\n- const\n- examples\n- if / then / else\n- readOnly\n- writeOnly\n- properties\n- patternProperties\n- additionalProperties\n- additionalItems\n- items\n- propertyNames\n- contains\n- allOf\n- oneOf\n- anyOf\n- not\n\nThe following properties are taken from the JSON Schema definition but their definitions were adjusted to the AsyncAPI Specification.\n\n- description - [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n- format - See [Data Type Formats](#dataTypeFormat) for further details. While relying on JSON Schema's defined formats, the AsyncAPI Specification offers a few additional predefined formats.\n- default - The default value represents what would be assumed by the consumer of the input as the value of the schema if one is not provided. Unlike JSON Schema, the value MUST conform to the defined type for the Schema Object defined at the same level. For example, of `type` is `string`, then `default` can be `\"foo\"` but cannot be `1`.\n\nAlternatively, any time a Schema Object can be used, a [Reference Object](#referenceObject) can be used in its place. This allows referencing definitions in place of defining them inline. It is appropriate to clarify that the `$ref` keyword MUST follow the behavior described by [Reference Object](#referenceObject) instead of the one in [JSON Schema definition](https://json-schema.org/understanding-json-schema/structuring.html#ref).\n\nIn addition to the JSON Schema fields, the following AsyncAPI vocabulary fields MAY be used for further schema documentation:\n\n##### Fixed Fields\nField Name | Type | Description\n---|:---:|---\n<a name=\"schemaObjectDiscriminator\"></a>discriminator | `string` | Adds support for polymorphism. The discriminator is the schema property name that is used to differentiate between other schema that inherit this schema. The property name used MUST be defined at this schema and it MUST be in the `required` property list. When used, the value MUST be the name of this schema or any schema that inherits it. See [Composition and Inheritance](#schemaComposition) for more details.\n<a name=\"schemaObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this schema.\n<a name=\"schemaObjectDeprecated\"></a> deprecated | `boolean` | Specifies that a schema is deprecated and SHOULD be transitioned out of usage. Default value is `false`.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n###### <a name=\"schemaComposition\"></a>Composition and Inheritance (Polymorphism)\n\nThe AsyncAPI Specification allows combining and extending model definitions using the `allOf` property of JSON Schema, in effect offering model composition.\n`allOf` takes in an array of object definitions that are validated *independently* but together compose a single object.\n\nWhile composition offers model extensibility, it does not imply a hierarchy between the models.\nTo support polymorphism, AsyncAPI Specification adds the support of the `discriminator` field.\nWhen used, the `discriminator` will be the name of the property used to decide which schema definition is used to validate the structure of the model.\nAs such, the `discriminator` field MUST be a required field.\nThere are are two ways to define the value of a discriminator for an inheriting instance.\n\n- Use the schema's name.\n- Override the schema's name by overriding the property with a new value. If exists, this takes precedence over the schema's name.\n\nAs such, inline schema definitions, which do not have a given id, *cannot* be used in polymorphism.\n\n##### Schema Object Examples\n\n###### Primitive Sample\n\n```json\n{\n  \"type\": \"string\",\n  \"format\": \"email\"\n}\n```\n\n```yaml\ntype: string\nformat: email\n```\n\n###### Simple Model\n\n```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"name\"\n  ],\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"address\": {\n      \"$ref\": \"#/components/schemas/Address\"\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"format\": \"int32\",\n      \"minimum\": 0\n    }\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- name\nproperties:\n  name:\n    type: string\n  address:\n    $ref: '#/components/schemas/Address'\n  age:\n    type: integer\n    format: int32\n    minimum: 0\n```\n\n###### Model with Map/Dictionary Properties\n\nFor a simple string to string mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"type\": \"string\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  type: string\n```\n\nFor a string to model mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"$ref\": \"#/components/schemas/ComplexModel\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  $ref: '#/components/schemas/ComplexModel'\n```\n\n###### Model with Example\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"integer\",\n      \"format\": \"int64\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"example\": {\n    \"name\": \"Puma\",\n    \"id\": 1\n  }\n}\n```\n\n```yaml\ntype: object\nproperties:\n  id:\n    type: integer\n    format: int64\n  name:\n    type: string\nrequired:\n- name\nexample:\n  name: Puma\n  id: 1\n```\n\n###### Model with Boolean Schemas\n\n```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"anySchema\"\n  ],\n  \"properties\": {\n    \"anySchema\": true,\n    \"cannotBeDefined\": false\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- anySchema\nproperties:\n  anySchema: true\n  cannotBeDefined: false\n```\n\n###### Models with Composition\n\n```json\n{\n  \"schemas\": {\n    \"ErrorModel\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"message\",\n        \"code\"\n      ],\n      \"properties\": {\n        \"message\": {\n          \"type\": \"string\"\n        },\n        \"code\": {\n          \"type\": \"integer\",\n          \"minimum\": 100,\n          \"maximum\": 600\n        }\n      }\n    },\n    \"ExtendedErrorModel\": {\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/ErrorModel\"\n        },\n        {\n          \"type\": \"object\",\n          \"required\": [\n            \"rootCause\"\n          ],\n          \"properties\": {\n            \"rootCause\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  ErrorModel:\n    type: object\n    required:\n    - message\n    - code\n    properties:\n      message:\n        type: string\n      code:\n        type: integer\n        minimum: 100\n        maximum: 600\n  ExtendedErrorModel:\n    allOf:\n    - $ref: '#/components/schemas/ErrorModel'\n    - type: object\n      required:\n      - rootCause\n      properties:\n        rootCause:\n          type: string\n```\n\n###### Models with Polymorphism Support\n\n```json\n{\n  \"schemas\": {\n    \"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"petType\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"petType\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"petType\"\n      ]\n    },\n    \"Cat\": {\n      \"description\": \"A representation of a cat. Note that `Cat` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"huntingSkill\": {\n              \"type\": \"string\",\n              \"description\": \"The measured skill for hunting\",\n              \"enum\": [\n                \"clueless\",\n                \"lazy\",\n                \"adventurous\",\n                \"aggressive\"\n              ]\n            }\n          },\n          \"required\": [\n            \"huntingSkill\"\n          ]\n        }\n      ]\n    },\n    \"Dog\": {\n      \"description\": \"A representation of a dog. Note that `Dog` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"packSize\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"description\": \"the size of the pack the dog is from\",\n              \"minimum\": 0\n            }\n          },\n          \"required\": [\n            \"packSize\"\n          ]\n        }\n      ]\n    },\n    \"StickInsect\": {\n      \"description\": \"A representation of an Australian walking stick. Note that `StickBug` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"petType\": {\n              \"const\": \"StickBug\"\n            },\n            \"color\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"color\"\n          ]\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  Pet:\n    type: object\n    discriminator: petType\n    properties:\n      name:\n        type: string\n      petType:\n        type: string\n    required:\n    - name\n    - petType\n  ## applies to instances with `petType: \"Cat\"`\n  ## because that is the schema name\n  Cat:\n    description: A representation of a cat\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        huntingSkill:\n          type: string\n          description: The measured skill for hunting\n          enum:\n          - clueless\n          - lazy\n          - adventurous\n          - aggressive\n      required:\n      - huntingSkill\n  ## applies to instances with `petType: \"Dog\"`\n  ## because that is the schema name\n  Dog:\n    description: A representation of a dog\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        packSize:\n          type: integer\n          format: int32\n          description: the size of the pack the dog is from\n          minimum: 0\n      required:\n      - packSize\n  ## applies to instances with `petType: \"StickBug\"`\n  ## because that is the required value of the discriminator field,\n  ## overriding the schema name\n  StickInsect:\n    description: A representation of an Australian walking stick\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        petType:\n          const: StickBug\n        color:\n          type: string\n      required:\n      - color\n```\n\n\n\n\n\n#### <a name=\"securitySchemeObject\"></a>Security Scheme Object\n\nDefines a security scheme that can be used by the operations. Supported schemes are:\n\n* User/Password.\n* API key (either as user or as password).\n* X.509 certificate.\n* End-to-end encryption (either symmetric or asymmetric).\n* HTTP authentication.\n* HTTP API key.\n* OAuth2's common flows (Implicit, Resource Owner Protected Credentials, Client Credentials and Authorization Code) as defined in [RFC6749](https://tools.ietf.org/html/rfc6749).\n* [OpenID Connect Discovery](https://tools.ietf.org/html/draft-ietf-oauth-discovery-06).\n* SASL (Simple Authentication and Security Layer) as defined in [RFC4422](https://tools.ietf.org/html/rfc4422).\n\n##### Fixed Fields\nField Name | Type | Applies To | Description\n---|:---:|---|---\n<a name=\"securitySchemeObjectType\"></a>type | `string` | Any | **REQUIRED**. The type of the security scheme. Valid values are `\"userPassword\"`, `\"apiKey\"`, `\"X509\"`, `\"symmetricEncryption\"`, `\"asymmetricEncryption\"`, `\"httpApiKey\"`, `\"http\"`, `\"oauth2\"`, `\"openIdConnect\"`, `\"plain\"`, `\"scramSha256\"`, `\"scramSha512\"`, and `\"gssapi\"`.\n<a name=\"securitySchemeObjectDescription\"></a>description | `string` | Any | A short description for security scheme. [CommonMark syntax](https://spec.commonmark.org/) MAY be used for rich text representation.\n<a name=\"securitySchemeObjectName\"></a>name | `string` | `httpApiKey` | **REQUIRED**. The name of the header, query or cookie parameter to be used.\n<a name=\"securitySchemeObjectIn\"></a>in | `string` | `apiKey` \\| `httpApiKey` | **REQUIRED**. The location of the API key. Valid values are `\"user\"` and `\"password\"` for `apiKey` and `\"query\"`, `\"header\"` or `\"cookie\"` for `httpApiKey`.\n<a name=\"securitySchemeObjectScheme\"></a>scheme | `string` | `http` | **REQUIRED**. The name of the HTTP Authorization scheme to be used in the [Authorization header as defined in RFC7235](https://tools.ietf.org/html/rfc7235#section-5.1).\n<a name=\"securitySchemeObjectBearerFormat\"></a>bearerFormat | `string` | `http` (`\"bearer\"`) | A hint to the client to identify how the bearer token is formatted.  Bearer tokens are usually generated by an authorization server, so this information is primarily for documentation purposes.\n<a name=\"securitySchemeFlows\"></a>flows | [OAuth Flows Object](#oauthFlowsObject) | `oauth2` | **REQUIRED**. An object containing configuration information for the flow types supported.\n<a name=\"securitySchemeOpenIdConnectUrl\"></a>openIdConnectUrl | `string` | `openIdConnect` | **REQUIRED**. OpenId Connect URL to discover OAuth2 configuration values. This MUST be in the form of a URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n##### Security Scheme Object Example\n\n###### User/Password Authentication Sample\n\n```json\n{\n  \"type\": \"userPassword\"\n}\n```\n\n```yaml\ntype: userPassword\n```\n\n###### API Key Authentication Sample\n\n```json\n{\n  \"type\": \"apiKey\",\n  \"in\": \"user\"\n}\n```\n\n```yaml\ntype: apiKey,\nin: user\n```\n\n###### X.509 Authentication Sample\n\n```json\n{\n  \"type\": \"X509\"\n}\n```\n\n```yaml\ntype: X509\n```\n\n###### End-to-end Encryption Authentication Sample\n\n```json\n{\n  \"type\": \"symmetricEncryption\"\n}\n```\n\n```yaml\ntype: symmetricEncryption\n```\n\n###### Basic Authentication Sample\n\n```json\n{\n  \"type\": \"http\",\n  \"scheme\": \"basic\"\n}\n```\n\n```yaml\ntype: http\nscheme: basic\n```\n\n###### API Key Sample\n\n```json\n{\n  \"type\": \"httpApiKey\",\n  \"name\": \"api_key\",\n  \"in\": \"header\"\n}\n```\n\n```yaml\ntype: httpApiKey\nname: api_key\nin: header\n```\n\n###### JWT Bearer Sample\n\n```json\n{\n  \"type\": \"http\",\n  \"scheme\": \"bearer\",\n  \"bearerFormat\": \"JWT\"\n}\n```\n\n```yaml\ntype: http\nscheme: bearer\nbearerFormat: JWT\n```\n\n###### Implicit OAuth2 Sample\n\n```json\n{\n  \"type\": \"oauth2\",\n  \"flows\": {\n    \"implicit\": {\n      \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n      \"scopes\": {\n        \"write:pets\": \"modify pets in your account\",\n        \"read:pets\": \"read your pets\"\n      }\n    }\n  }\n}\n```\n\n```yaml\ntype: oauth2\nflows:\n  implicit:\n    authorizationUrl: https://example.com/api/oauth/dialog\n    scopes:\n      write:pets: modify pets in your account\n      read:pets: read your pets\n```\n\n###### SASL Sample\n\n```json\n{\n  \"type\": \"scramSha512\"\n}\n```\n\n```yaml\ntype: scramSha512\n```\n\n#### <a name=\"oauthFlowsObject\"></a>OAuth Flows Object\n\nAllows configuration of the supported OAuth Flows.\n\n##### Fixed Fields\nField Name | Type | Description\n---|:---:|---\n<a name=\"oauthFlowsImplicit\"></a>implicit| [OAuth Flow Object](#oauthFlowObject) | Configuration for the OAuth Implicit flow\n<a name=\"oauthFlowsPassword\"></a>password| [OAuth Flow Object](#oauthFlowObject) | Configuration for the OAuth Resource Owner Protected Credentials flow\n<a name=\"oauthFlowsClientCredentials\"></a>clientCredentials| [OAuth Flow Object](#oauthFlowObject) | Configuration for the OAuth Client Credentials flow.\n<a name=\"oauthFlowsAuthorizationCode\"></a>authorizationCode| [OAuth Flow Object](#oauthFlowObject) | Configuration for the OAuth Authorization Code flow.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n#### <a name=\"oauthFlowObject\"></a>OAuth Flow Object\n\nConfiguration details for a supported OAuth Flow\n\n##### Fixed Fields\nField Name | Type | Applies To | Description\n---|:---:|---|---\n<a name=\"oauthFlowAuthorizationUrl\"></a>authorizationUrl | `string` | `oauth2` (`\"implicit\"`, `\"authorizationCode\"`) | **REQUIRED**. The authorization URL to be used for this flow. This MUST be in the form of a URL.\n<a name=\"oauthFlowTokenUrl\"></a>tokenUrl | `string` | `oauth2` (`\"password\"`, `\"clientCredentials\"`, `\"authorizationCode\"`) | **REQUIRED**. The token URL to be used for this flow. This MUST be in the form of a URL.\n<a name=\"oauthFlowRefreshUrl\"></a>refreshUrl | `string` | `oauth2` | The URL to be used for obtaining refresh tokens. This MUST be in the form of a URL.\n<a name=\"oauthFlowScopes\"></a>scopes | Map[`string`, `string`] | `oauth2` | **REQUIRED**. The available scopes for the OAuth2 security scheme. A map between the scope name and a short description for it.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n##### OAuth Flow Object Examples\n\n```JSON\n{\n  \"type\": \"oauth2\",\n  \"flows\": {\n    \"implicit\": {\n      \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n      \"scopes\": {\n        \"write:pets\": \"modify pets in your account\",\n        \"read:pets\": \"read your pets\"\n      }\n    },\n    \"authorizationCode\": {\n      \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n      \"tokenUrl\": \"https://example.com/api/oauth/token\",\n      \"scopes\": {\n        \"write:pets\": \"modify pets in your account\",\n        \"read:pets\": \"read your pets\"\n      }\n    }\n  }\n}\n```\n\n```YAML\ntype: oauth2\nflows:\n  implicit:\n    authorizationUrl: https://example.com/api/oauth/dialog\n    scopes:\n      write:pets: modify pets in your account\n      read:pets: read your pets\n  authorizationCode:\n    authorizationUrl: https://example.com/api/oauth/dialog\n    tokenUrl: https://example.com/api/oauth/token\n    scopes:\n      write:pets: modify pets in your account\n      read:pets: read your pets\n```\n\n#### <a name=\"securityRequirementObject\"></a>Security Requirement Object\n\nLists the required security schemes to execute this operation.\nThe name used for each property MUST correspond to a security scheme declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject).\n\nWhen a list of Security Requirement Objects is defined on a [Server object](#serverObject), only one of the Security Requirement Objects in the list needs to be satisfied to authorize the connection.\n\n##### Patterned Fields\n\nField Pattern | Type | Description\n---|:---:|---\n<a name=\"securityRequirementsName\"></a>{name} | [`string`] | Each name MUST correspond to a security scheme which is declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject). If the security scheme is of type `\"oauth2\"` or `\"openIdConnect\"`, then the value is a list of scope names. Provide scopes that are required to establish successful connection with the server. If scopes are not needed, the list can be empty. For other security scheme types, the array MUST be empty.\n\n##### Security Requirement Object Examples\n\n###### User/Password Security Requirement\n\n```json\n{\n  \"user_pass\": []\n}\n```\n\n```yaml\nuser_pass: []\n```\n\n###### API Key Security Requirement\n\n```json\n{\n  \"api_key\": []\n}\n```\n\n```yaml\napi_key: []\n```\n\n###### OAuth2 Security Requirement\n\n```json\n{\n  \"petstore_auth\": [\n    \"write:pets\",\n    \"read:pets\"\n  ]\n}\n```\n\n```yaml\npetstore_auth:\n- write:pets\n- read:pets\n```\n\n### <a name=\"correlationIdObject\"></a>Correlation ID Object\n\nAn object that specifies an identifier at design time that can used for message tracing and correlation. \n\nFor specifying and computing the location of a Correlation ID, a [runtime expression](#runtimeExpression) is used.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---|---\ndescription | `string` | An optional description of the identifier. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\nlocation | `string` | **REQUIRED.** A [runtime expression](#runtimeExpression) that specifies the location of the correlation ID.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Examples\n\n```json\n{\n  \"description\": \"Default Correlation ID\",\n  \"location\": \"$message.header#/correlationId\"\n}\n```\n\n```yaml\ndescription: Default Correlation ID\nlocation: $message.header#/correlationId\n```\n\n### <a name=\"runtimeExpression\"></a>Runtime Expression\n\nA runtime expression allows values to be defined based on information that will be available within the message.\nThis mechanism is used by [Correlation ID Object](#correlationIdObject).\n\nThe runtime expression is defined by the following [ABNF](https://tools.ietf.org/html/rfc5234) syntax:\n\n```\n      expression = ( \"$message\" \".\" source )\n      source = ( header-reference | payload-reference )\n      header-reference = \"header\" [\"#\" fragment]\n      payload-reference = \"payload\" [\"#\" fragment]\n      fragment = a JSON Pointer [RFC 6901](https://tools.ietf.org/html/rfc6901)\n```\n\nThe table below provides examples of runtime expressions and examples of their use in a value:\n\n##### <a name=\"runtimeExpressionExamples\"></a>Examples\n\nSource Location | Example expression  | Notes\n---|:---|:---|\nMessage Header Property | `$message.header#/MQMD/CorrelId` | Correlation ID is set using the `CorrelId` value from the `MQMD` header.\nMessage Payload Property | `$message.payload#/messageId` | Correlation ID is set using the `messageId` value from the message payload.\n\nRuntime expressions preserve the type of the referenced value.\n\n### <a name=\"specificationExtensions\"></a>Specification Extensions\n\nWhile the AsyncAPI Specification tries to accommodate most use cases, additional data can be added to extend the specification at certain points.\n\nThe extensions properties are implemented as patterned fields that are always prefixed by `\"x-\"`.\n\nField Pattern | Type | Description\n---|:---:|---\n<a name=\"infoExtensions\"></a>`^x-[\\w\\d\\-\\_]+$` | Any | Allows extensions to the AsyncAPI Schema. The field name MUST begin with `x-`, for example, `x-internal-id`. The value can be `null`, a primitive, an array or an object. Can have any valid JSON format value.\n\nThe extensions may or may not be supported by the available tooling, but those may be extended as well to add requested support (if tools are internal or open-sourced).\n\n### <a name=\"dataTypeFormat\"></a>Data Type Formats\n\nPrimitives have an optional modifier property: `format`.\nThe AsyncAPI specification uses several known formats to more finely define the data type being used.\nHowever, the `format` property is an open `string`-valued property, and can have any value to support documentation needs.\nFormats such as `\"email\"`, `\"uuid\"`, etc., can be used even though they are not defined by this specification.\nTypes that are not accompanied by a `format` property follow their definition from the JSON Schema.\nTools that do not recognize a specific `format` MAY default back to the `type` alone, as if the `format` was not specified.\n\nThe formats defined by the AsyncAPI Specification are:\n\n\nCommon Name | `type` | [`format`](#dataTypeFormat) | Comments\n----------- | ------ | -------- | --------\ninteger | `integer` | `int32` | signed 32 bits\nlong | `integer` | `int64` | signed 64 bits\nfloat | `number` | `float` | |\ndouble | `number` | `double` | |\nstring | `string` | | |\nbyte | `string` | `byte` | base64 encoded characters\nbinary | `string` | `binary` | any sequence of octets\nboolean | `boolean` | | |\ndate | `string` | `date` | As defined by `full-date` - [RFC3339](https://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14)\ndateTime | `string` | `date-time` | As defined by `date-time` - [RFC3339](https://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14)\npassword | `string` | `password` | Used to hint UIs the input needs to be obscured.\n\n---\n\n<DocsButton\n  suggestions={[\n    {\n      href: '/docs/specifications/v2.3.0',\n      title: 'Release 2.3.0',\n      type:'back',\n    },\n    {\n      href: '/docs/specifications/v2.1.0',\n      title: 'Release 2.1.0',\n      type:'next',\n    }\n  ]}\n/>",
              "toc": [
                {
                  "content": "AsyncAPI Specification",
                  "slug": "asyncapi-specification",
                  "lvl": 1,
                  "i": 0,
                  "seen": 0
                },
                {
                  "content": "Disclaimer",
                  "slug": "disclaimer",
                  "lvl": 4,
                  "i": 1,
                  "seen": 0
                },
                {
                  "content": "Version 2.2.0",
                  "slug": "version-220",
                  "lvl": 4,
                  "i": 2,
                  "seen": 0
                },
                {
                  "content": "Introduction",
                  "slug": "introduction",
                  "lvl": 2,
                  "i": 3,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitions\"></a>Definitions",
                  "slug": "definitions",
                  "lvl": 2,
                  "i": 4,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsApplication\"></a>Application",
                  "slug": "definitionsApplication",
                  "lvl": 4,
                  "i": 5,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsProducer\"></a>Producer",
                  "slug": "definitionsProducer",
                  "lvl": 4,
                  "i": 6,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsConsumer\"></a>Consumer",
                  "slug": "definitionsConsumer",
                  "lvl": 4,
                  "i": 7,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsMessage\"></a>Message",
                  "slug": "definitionsMessage",
                  "lvl": 4,
                  "i": 8,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsChannel\"></a>Channel",
                  "slug": "definitionsChannel",
                  "lvl": 4,
                  "i": 9,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsProtocol\"></a>Protocol",
                  "slug": "definitionsProtocol",
                  "lvl": 4,
                  "i": 10,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsBindings\"></a>Bindings",
                  "slug": "definitionsBindings",
                  "lvl": 4,
                  "i": 11,
                  "seen": 0
                },
                {
                  "content": "<a name=\"specification\"></a>Specification",
                  "slug": "specification",
                  "lvl": 2,
                  "i": 12,
                  "seen": 0
                },
                {
                  "content": "<a name=\"format\"></a>Format",
                  "slug": "format",
                  "lvl": 3,
                  "i": 13,
                  "seen": 0
                },
                {
                  "content": "<a name=\"file-structure\"></a>File Structure",
                  "slug": "file-structure",
                  "lvl": 3,
                  "i": 14,
                  "seen": 0
                },
                {
                  "content": "<a name=\"schema\"></a>Schema",
                  "slug": "schema",
                  "lvl": 3,
                  "i": 15,
                  "seen": 0
                },
                {
                  "content": "<a name=\"A2SObject\"></a>AsyncAPI Object",
                  "slug": "A2SObject",
                  "lvl": 4,
                  "i": 16,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 17,
                  "seen": 0
                },
                {
                  "content": "<a name=\"A2SVersionString\"></a>AsyncAPI Version String",
                  "slug": "A2SVersionString",
                  "lvl": 4,
                  "i": 18,
                  "seen": 0
                },
                {
                  "content": "<a name=\"A2SIdString\"></a>Identifier",
                  "slug": "A2SIdString",
                  "lvl": 4,
                  "i": 19,
                  "seen": 0
                },
                {
                  "content": "Examples",
                  "slug": "examples",
                  "lvl": 6,
                  "i": 20,
                  "seen": 0
                },
                {
                  "content": "<a name=\"infoObject\"></a>Info Object",
                  "slug": "infoObject",
                  "lvl": 4,
                  "i": 21,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 22,
                  "seen": 1
                },
                {
                  "content": "Info Object Example:",
                  "slug": "info-object-example",
                  "lvl": 5,
                  "i": 23,
                  "seen": 0
                },
                {
                  "content": "<a name=\"contactObject\"></a>Contact Object",
                  "slug": "contactObject",
                  "lvl": 4,
                  "i": 24,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 25,
                  "seen": 2
                },
                {
                  "content": "Contact Object Example:",
                  "slug": "contact-object-example",
                  "lvl": 5,
                  "i": 26,
                  "seen": 0
                },
                {
                  "content": "<a name=\"licenseObject\"></a>License Object",
                  "slug": "licenseObject",
                  "lvl": 4,
                  "i": 27,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 28,
                  "seen": 3
                },
                {
                  "content": "License Object Example:",
                  "slug": "license-object-example",
                  "lvl": 5,
                  "i": 29,
                  "seen": 0
                },
                {
                  "content": "<a name=\"serversObject\"></a>Servers Object",
                  "slug": "serversObject",
                  "lvl": 4,
                  "i": 30,
                  "seen": 0
                },
                {
                  "content": "Patterned Fields",
                  "slug": "patterned-fields",
                  "lvl": 5,
                  "i": 31,
                  "seen": 0
                },
                {
                  "content": "Servers Object Example",
                  "slug": "servers-object-example",
                  "lvl": 5,
                  "i": 32,
                  "seen": 0
                },
                {
                  "content": "<a name=\"serverObject\"></a>Server Object",
                  "slug": "serverObject",
                  "lvl": 4,
                  "i": 33,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 34,
                  "seen": 4
                },
                {
                  "content": "Server Object Example",
                  "slug": "server-object-example",
                  "lvl": 5,
                  "i": 35,
                  "seen": 0
                },
                {
                  "content": "<a name=\"serverVariableObject\"></a>Server Variable Object",
                  "slug": "serverVariableObject",
                  "lvl": 4,
                  "i": 36,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 37,
                  "seen": 5
                },
                {
                  "content": "<a name=\"defaultContentTypeString\"></a>Default Content Type",
                  "slug": "defaultContentTypeString",
                  "lvl": 4,
                  "i": 38,
                  "seen": 0
                },
                {
                  "content": "Default Content Type Example",
                  "slug": "default-content-type-example",
                  "lvl": 5,
                  "i": 39,
                  "seen": 0
                },
                {
                  "content": "<a name=\"channelsObject\"></a>Channels Object",
                  "slug": "channelsObject",
                  "lvl": 4,
                  "i": 40,
                  "seen": 0
                },
                {
                  "content": "Patterned Fields",
                  "slug": "patterned-fields",
                  "lvl": 5,
                  "i": 41,
                  "seen": 1
                },
                {
                  "content": "Channels Object Example",
                  "slug": "channels-object-example",
                  "lvl": 5,
                  "i": 42,
                  "seen": 0
                },
                {
                  "content": "<a name=\"channelItemObject\"></a>Channel Item Object",
                  "slug": "channelItemObject",
                  "lvl": 4,
                  "i": 43,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 44,
                  "seen": 6
                },
                {
                  "content": "Channel Item Object Example",
                  "slug": "channel-item-object-example",
                  "lvl": 5,
                  "i": 45,
                  "seen": 0
                },
                {
                  "content": "<a name=\"operationObject\"></a>Operation Object",
                  "slug": "operationObject",
                  "lvl": 4,
                  "i": 46,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 47,
                  "seen": 7
                },
                {
                  "content": "Operation Object Example",
                  "slug": "operation-object-example",
                  "lvl": 5,
                  "i": 48,
                  "seen": 0
                },
                {
                  "content": "<a name=\"operationTraitObject\"></a>Operation Trait Object",
                  "slug": "operationTraitObject",
                  "lvl": 4,
                  "i": 49,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 50,
                  "seen": 8
                },
                {
                  "content": "Operation Trait Object Example",
                  "slug": "operation-trait-object-example",
                  "lvl": 5,
                  "i": 51,
                  "seen": 0
                },
                {
                  "content": "<a name=\"parametersObject\"></a>Parameters Object",
                  "slug": "parametersObject",
                  "lvl": 4,
                  "i": 52,
                  "seen": 0
                },
                {
                  "content": "Patterned Fields",
                  "slug": "patterned-fields",
                  "lvl": 5,
                  "i": 53,
                  "seen": 2
                },
                {
                  "content": "Parameters Object Example",
                  "slug": "parameters-object-example",
                  "lvl": 5,
                  "i": 54,
                  "seen": 0
                },
                {
                  "content": "<a name=\"parameterObject\"></a>Parameter Object",
                  "slug": "parameterObject",
                  "lvl": 4,
                  "i": 55,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 56,
                  "seen": 9
                },
                {
                  "content": "Parameter Object Example",
                  "slug": "parameter-object-example",
                  "lvl": 5,
                  "i": 57,
                  "seen": 0
                },
                {
                  "content": "<a name=\"serverBindingsObject\"></a>Server Bindings Object",
                  "slug": "serverBindingsObject",
                  "lvl": 4,
                  "i": 58,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 59,
                  "seen": 10
                },
                {
                  "content": "<a name=\"channelBindingsObject\"></a>Channel Bindings Object",
                  "slug": "channelBindingsObject",
                  "lvl": 4,
                  "i": 60,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 61,
                  "seen": 11
                },
                {
                  "content": "<a name=\"operationBindingsObject\"></a>Operation Bindings Object",
                  "slug": "operationBindingsObject",
                  "lvl": 4,
                  "i": 62,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 63,
                  "seen": 12
                },
                {
                  "content": "<a name=\"messageBindingsObject\"></a>Message Bindings Object",
                  "slug": "messageBindingsObject",
                  "lvl": 4,
                  "i": 64,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 65,
                  "seen": 13
                },
                {
                  "content": "<a name=\"messageObject\"></a>Message Object",
                  "slug": "messageObject",
                  "lvl": 4,
                  "i": 66,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 67,
                  "seen": 14
                },
                {
                  "content": "<a name=\"messageObjectSchemaFormatTable\"></a>Schema formats table",
                  "slug": "messageObjectSchemaFormatTable",
                  "lvl": 5,
                  "i": 68,
                  "seen": 0
                },
                {
                  "content": "Message Object Example",
                  "slug": "message-object-example",
                  "lvl": 5,
                  "i": 69,
                  "seen": 0
                },
                {
                  "content": "<a name=\"messageTraitObject\"></a>Message Trait Object",
                  "slug": "messageTraitObject",
                  "lvl": 4,
                  "i": 70,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 71,
                  "seen": 15
                },
                {
                  "content": "Message Trait Object Example",
                  "slug": "message-trait-object-example",
                  "lvl": 5,
                  "i": 72,
                  "seen": 0
                },
                {
                  "content": "<a name=\"messageExampleObject\"></a> Message Example Object",
                  "slug": "messageExampleObject",
                  "lvl": 4,
                  "i": 73,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 74,
                  "seen": 16
                },
                {
                  "content": "Message Example Object Example",
                  "slug": "message-example-object-example",
                  "lvl": 5,
                  "i": 75,
                  "seen": 0
                },
                {
                  "content": "<a name=\"tagsObject\"></a>Tags Object",
                  "slug": "tagsObject",
                  "lvl": 4,
                  "i": 76,
                  "seen": 0
                },
                {
                  "content": "<a name=\"tagObject\"></a>Tag Object",
                  "slug": "tagObject",
                  "lvl": 4,
                  "i": 77,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 78,
                  "seen": 17
                },
                {
                  "content": "Tag Object Example",
                  "slug": "tag-object-example",
                  "lvl": 5,
                  "i": 79,
                  "seen": 0
                },
                {
                  "content": "<a name=\"externalDocumentationObject\"></a>External Documentation Object",
                  "slug": "externalDocumentationObject",
                  "lvl": 4,
                  "i": 80,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 81,
                  "seen": 18
                },
                {
                  "content": "External Documentation Object Example",
                  "slug": "external-documentation-object-example",
                  "lvl": 5,
                  "i": 82,
                  "seen": 0
                },
                {
                  "content": "<a name=\"referenceObject\"></a>Reference Object",
                  "slug": "referenceObject",
                  "lvl": 4,
                  "i": 83,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 84,
                  "seen": 19
                },
                {
                  "content": "Reference Object Example",
                  "slug": "reference-object-example",
                  "lvl": 5,
                  "i": 85,
                  "seen": 0
                },
                {
                  "content": "<a name=\"componentsObject\"></a>Components Object",
                  "slug": "componentsObject",
                  "lvl": 4,
                  "i": 86,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 87,
                  "seen": 20
                },
                {
                  "content": "Components Object Example",
                  "slug": "components-object-example",
                  "lvl": 5,
                  "i": 88,
                  "seen": 0
                },
                {
                  "content": "<a name=\"schemaObject\"></a>Schema Object",
                  "slug": "schemaObject",
                  "lvl": 4,
                  "i": 89,
                  "seen": 0
                },
                {
                  "content": "Properties",
                  "slug": "properties",
                  "lvl": 5,
                  "i": 90,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 91,
                  "seen": 21
                },
                {
                  "content": "<a name=\"schemaComposition\"></a>Composition and Inheritance (Polymorphism)",
                  "slug": "schemaComposition",
                  "lvl": 6,
                  "i": 92,
                  "seen": 0
                },
                {
                  "content": "Schema Object Examples",
                  "slug": "schema-object-examples",
                  "lvl": 5,
                  "i": 93,
                  "seen": 0
                },
                {
                  "content": "Primitive Sample",
                  "slug": "primitive-sample",
                  "lvl": 6,
                  "i": 94,
                  "seen": 0
                },
                {
                  "content": "Simple Model",
                  "slug": "simple-model",
                  "lvl": 6,
                  "i": 95,
                  "seen": 0
                },
                {
                  "content": "Model with Map/Dictionary Properties",
                  "slug": "model-with-mapdictionary-properties",
                  "lvl": 6,
                  "i": 96,
                  "seen": 0
                },
                {
                  "content": "Model with Example",
                  "slug": "model-with-example",
                  "lvl": 6,
                  "i": 97,
                  "seen": 0
                },
                {
                  "content": "Model with Boolean Schemas",
                  "slug": "model-with-boolean-schemas",
                  "lvl": 6,
                  "i": 98,
                  "seen": 0
                },
                {
                  "content": "Models with Composition",
                  "slug": "models-with-composition",
                  "lvl": 6,
                  "i": 99,
                  "seen": 0
                },
                {
                  "content": "Models with Polymorphism Support",
                  "slug": "models-with-polymorphism-support",
                  "lvl": 6,
                  "i": 100,
                  "seen": 0
                },
                {
                  "content": "<a name=\"securitySchemeObject\"></a>Security Scheme Object",
                  "slug": "securitySchemeObject",
                  "lvl": 4,
                  "i": 101,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 102,
                  "seen": 22
                },
                {
                  "content": "Security Scheme Object Example",
                  "slug": "security-scheme-object-example",
                  "lvl": 5,
                  "i": 103,
                  "seen": 0
                },
                {
                  "content": "User/Password Authentication Sample",
                  "slug": "userpassword-authentication-sample",
                  "lvl": 6,
                  "i": 104,
                  "seen": 0
                },
                {
                  "content": "API Key Authentication Sample",
                  "slug": "api-key-authentication-sample",
                  "lvl": 6,
                  "i": 105,
                  "seen": 0
                },
                {
                  "content": "X.509 Authentication Sample",
                  "slug": "x509-authentication-sample",
                  "lvl": 6,
                  "i": 106,
                  "seen": 0
                },
                {
                  "content": "End-to-end Encryption Authentication Sample",
                  "slug": "end-to-end-encryption-authentication-sample",
                  "lvl": 6,
                  "i": 107,
                  "seen": 0
                },
                {
                  "content": "Basic Authentication Sample",
                  "slug": "basic-authentication-sample",
                  "lvl": 6,
                  "i": 108,
                  "seen": 0
                },
                {
                  "content": "API Key Sample",
                  "slug": "api-key-sample",
                  "lvl": 6,
                  "i": 109,
                  "seen": 0
                },
                {
                  "content": "JWT Bearer Sample",
                  "slug": "jwt-bearer-sample",
                  "lvl": 6,
                  "i": 110,
                  "seen": 0
                },
                {
                  "content": "Implicit OAuth2 Sample",
                  "slug": "implicit-oauth2-sample",
                  "lvl": 6,
                  "i": 111,
                  "seen": 0
                },
                {
                  "content": "SASL Sample",
                  "slug": "sasl-sample",
                  "lvl": 6,
                  "i": 112,
                  "seen": 0
                },
                {
                  "content": "<a name=\"oauthFlowsObject\"></a>OAuth Flows Object",
                  "slug": "oauthFlowsObject",
                  "lvl": 4,
                  "i": 113,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 114,
                  "seen": 23
                },
                {
                  "content": "<a name=\"oauthFlowObject\"></a>OAuth Flow Object",
                  "slug": "oauthFlowObject",
                  "lvl": 4,
                  "i": 115,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 116,
                  "seen": 24
                },
                {
                  "content": "OAuth Flow Object Examples",
                  "slug": "oauth-flow-object-examples",
                  "lvl": 5,
                  "i": 117,
                  "seen": 0
                },
                {
                  "content": "<a name=\"securityRequirementObject\"></a>Security Requirement Object",
                  "slug": "securityRequirementObject",
                  "lvl": 4,
                  "i": 118,
                  "seen": 0
                },
                {
                  "content": "Patterned Fields",
                  "slug": "patterned-fields",
                  "lvl": 5,
                  "i": 119,
                  "seen": 3
                },
                {
                  "content": "Security Requirement Object Examples",
                  "slug": "security-requirement-object-examples",
                  "lvl": 5,
                  "i": 120,
                  "seen": 0
                },
                {
                  "content": "User/Password Security Requirement",
                  "slug": "userpassword-security-requirement",
                  "lvl": 6,
                  "i": 121,
                  "seen": 0
                },
                {
                  "content": "API Key Security Requirement",
                  "slug": "api-key-security-requirement",
                  "lvl": 6,
                  "i": 122,
                  "seen": 0
                },
                {
                  "content": "OAuth2 Security Requirement",
                  "slug": "oauth2-security-requirement",
                  "lvl": 6,
                  "i": 123,
                  "seen": 0
                },
                {
                  "content": "<a name=\"correlationIdObject\"></a>Correlation ID Object",
                  "slug": "correlationIdObject",
                  "lvl": 3,
                  "i": 124,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 125,
                  "seen": 25
                },
                {
                  "content": "Examples",
                  "slug": "examples",
                  "lvl": 5,
                  "i": 126,
                  "seen": 1
                },
                {
                  "content": "<a name=\"runtimeExpression\"></a>Runtime Expression",
                  "slug": "runtimeExpression",
                  "lvl": 3,
                  "i": 127,
                  "seen": 0
                },
                {
                  "content": "<a name=\"runtimeExpressionExamples\"></a>Examples",
                  "slug": "runtimeExpressionExamples",
                  "lvl": 5,
                  "i": 128,
                  "seen": 0
                },
                {
                  "content": "<a name=\"specificationExtensions\"></a>Specification Extensions",
                  "slug": "specificationExtensions",
                  "lvl": 3,
                  "i": 129,
                  "seen": 0
                },
                {
                  "content": "<a name=\"dataTypeFormat\"></a>Data Type Formats",
                  "slug": "dataTypeFormat",
                  "lvl": 3,
                  "i": 130,
                  "seen": 0
                }
              ],
              "slug": "/docs/reference/specification/v2.2.0",
              "filePath": "pages/docs/reference/specification/v2.2.0.md",
              "sectionTitle": "Specification"
            },
            {
              "meta": {
                "weight": -1,
                "title": "2.1.0"
              },
              "content": "# AsyncAPI Specification\n\n#### Disclaimer\n\nPart of this content has been taken from the great work done by the folks at the [OpenAPI Initiative](https://openapis.org). Mainly because **it's a great work** and we want to keep as much compatibility as possible with the [OpenAPI Specification](https://github.com/OAI/OpenAPI-Specification).\n\n#### Version 2.1.0\n\nThe key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC 2119](https://www.ietf.org/rfc/rfc2119.txt).\n\nThe AsyncAPI Specification is licensed under [The Apache License, Version 2.0](https://www.apache.org/licenses/LICENSE-2.0.html).\n\n## Introduction\n\nThe AsyncAPI Specification is a project used to describe and document message-driven APIs in a machine-readable format. It‚Äôs protocol-agnostic, so you can use it for APIs that work over any protocol (e.g., AMQP, MQTT, WebSockets, Kafka, STOMP, HTTP, Mercure, etc).\n\nThe AsyncAPI Specification defines a set of files required to describe such an API.\nThese files can then be used to create utilities, such as documentation, integration and/or testing tools.\n\nThe file(s) MUST describe the operations an [application](#definitionsApplication) accepts. For instance, consider the following AsyncAPI definition snippet:\n\n```yaml\nuser/signedup:\n  subscribe:\n    $ref: \"#/components/messages/userSignUp\"\n```\n\nIt means that the [application](#definitionsApplication) allows [consumers](#definitionsConsumer) to subscribe to the `user/signedup` [channel](#definitionsChannel) to receive userSignUp [messages](#definitionsMessage) produced by the application.\n\n**The AsyncAPI specification does not assume any kind of software topology, architecture or pattern.** Therefore, a server MAY be a message broker, a web server or any other kind of computer program capable of sending and/or receiving data. However, AsyncAPI offers a mechanism called \"bindings\" that aims to help with more specific information about the protocol.\n\n\n## <a name=\"definitions\"></a>Definitions\n\n#### <a name=\"definitionsApplication\"></a>Application\nAn application is any kind of computer program or a group of them. It MUST be a [producer](#definitionsProducer), a [consumer](#definitionsConsumer) or both. An application MAY be a microservice, IoT device (sensor), mainframe process, etc. An application MAY be written in any number of different programming languages as long as they support the selected [protocol](#definitionsProtocol). An application MUST also use a protocol supported by the server in order to connect and exchange [messages](#definitionsMessage). \n\n#### <a name=\"definitionsProducer\"></a>Producer\nA producer is a type of application, connected to a server, that is creating [messages](#definitionsMessage) and addressing them to [channels](#definitionsChannel). A producer MAY be publishing to multiple channels depending on the server, protocol, and use-case pattern.\n\n#### <a name=\"definitionsConsumer\"></a>Consumer\nA consumer is a type of application, connected to a server via a supported [protocol](#definitionsProtocol), that is consuming [messages](#definitionsMessage) from [channels](#definitionsChannel). A consumer MAY be consuming from multiple channels depending on the server, protocol, and the use-case pattern.\n\n#### <a name=\"definitionsMessage\"></a>Message\nA message is the mechanism by which information is exchanged via a channel between servers and applications. A message MUST contain a payload and MAY also contain headers. The headers MAY be subdivided into [protocol](#definitionsProtocol)-defined headers and header properties defined by the application which can act as supporting metadata. The payload contains the data, defined by the application, which MUST be serialized into a format (JSON, XML, Avro, binary, etc.). Since a message is a generic mechanism, it can support multiple interaction patterns such as event, command, request, or response. \n\n#### <a name=\"definitionsChannel\"></a>Channel\nA channel is an addressable component, made available by the server, for the organization of [messages](#definitionsMessage). [Producer](#definitionsProducer) applications send messages to channels and [consumer](#definitionsConsumer) applications consume messages from channels. Servers MAY support many channel instances, allowing messages with different content to be addressed to different channels. Depending on the server implementation, the channel MAY be included in the message via protocol-defined headers.\n\n#### <a name=\"definitionsProtocol\"></a>Protocol\nA protocol is the mechanism (wireline protocol or API) by which [messages](#definitionsMessage) are exchanged between the application and the [channel](#definitionsChannel). Example protocols include, but are not limited to, AMQP, HTTP, JMS, Kafka, MQTT, STOMP, Mercure, WebSocket.  \n\n#### <a name=\"definitionsBindings\"></a>Bindings\nA \"binding\" (or \"protocol binding\") is a mechanism to define protocol-specific information. Therefore, a protocol binding MUST define protocol-specific information only. \n\n## <a name=\"specification\"></a>Specification\n\n### <a name=\"format\"></a>Format\n\nThe files describing the message-driven API in accordance with the AsyncAPI Specification are represented as JSON objects and conform to the JSON standards.\nYAML, being a superset of JSON, can be used as well to represent a A2S (AsyncAPI Specification) file.\n\nFor example, if a field is said to have an array value, the JSON array representation will be used:\n\n```yaml\n{\n   \"field\" : [...]\n}\n```\n\nWhile the API is described using JSON it does not impose a JSON input/output to the API itself.\n\nAll field names in the specification are **case sensitive**.\n\nThe schema exposes two types of fields.\nFixed fields, which have a declared name, and Patterned fields, which declare a regex pattern for the field name.\nPatterned fields can have multiple occurrences as long as each has a unique name.\n\nIn order to preserve the ability to round-trip between YAML and JSON formats, YAML version [1.2](https://www.yaml.org/spec/1.2/spec.html) is recommended along with some additional constraints:\n\n- Tags MUST be limited to those allowed by the [JSON Schema ruleset](https://www.yaml.org/spec/1.2/spec.html#id2803231)\n- Keys used in YAML maps MUST be limited to a scalar string, as defined by the YAML Failsafe schema ruleset\n\n### <a name=\"file-structure\"></a>File Structure\n\nThe A2S representation of the API is made of a single file.\nHowever, parts of the definitions can be split into separate files, at the discretion of the user.\nThis is applicable for `$ref` fields in the specification as follows from the [JSON Schema](https://json-schema.org/understanding-json-schema/structuring.html) definitions.\n\nBy convention, the AsyncAPI Specification (A2S) file is named `asyncapi.json` or `asyncapi.yaml`.\n\n### <a name=\"schema\"></a>Schema\n\n#### <a name=\"A2SObject\"></a>AsyncAPI Object\n\nThis is the root document object for the API specification.\nIt combines resource listing and API declaration together into one document.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"A2SAsyncAPI\"></a>asyncapi | [AsyncAPI Version String](#A2SVersionString) | **Required.** Specifies the AsyncAPI Specification version being used. It can be used by tooling Specifications and clients to interpret the version. The structure shall be `major`.`minor`.`patch`, where `patch` versions _must_ be compatible with the existing `major`.`minor` tooling. Typically patch versions will be introduced to address errors in the documentation, and tooling should typically be compatible with the corresponding `major`.`minor` (1.0.*). Patch versions will correspond to patches of this document.\n<a name=\"A2SId\"></a>id | [Identifier](#A2SIdString) | Identifier of the [application](#definitionsApplication) the AsyncAPI document is defining.\n<a name=\"A2SInfo\"></a>info | [Info Object](#infoObject) | **Required.** Provides metadata about the API. The metadata can be used by the clients if needed.\n<a name=\"A2SServers\"></a>servers | [Servers Object](#serversObject) | Provides connection details of servers.\n<a name=\"A2SDefaultContentType\"></a>defaultContentType | [Default Content Type](#defaultContentTypeString) | Default content type to use when encoding/decoding a message's payload.\n<a name=\"A2SChannels\"></a>channels | [Channels Object](#channelsObject) | **Required** The available channels and messages for the API.\n<a name=\"A2SComponents\"></a>components | [Components Object](#componentsObject) | An element to hold various schemas for the specification.\n<a name=\"A2STags\"></a>tags | [Tags Object](#tagsObject) | A list of tags used by the specification with additional metadata. Each tag name in the list MUST be unique.\n<a name=\"A2SExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation.\n\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n#### <a name=\"A2SVersionString\"></a>AsyncAPI Version String\n\nThe version string signifies the version of the AsyncAPI Specification that the document complies to.\nThe format for this string _must_ be `major`.`minor`.`patch`.  The `patch` _may_ be suffixed by a hyphen and extra alphanumeric characters.\n\nA `major`.`minor` shall be used to designate the AsyncAPI Specification version, and will be considered compatible with the AsyncAPI Specification specified by that `major`.`minor` version.\nThe patch version will not be considered by tooling, making no distinction between `1.0.0` and `1.0.1`.\n\nIn subsequent versions of the AsyncAPI Specification, care will be given such that increments of the `minor` version should not interfere with operations of tooling developed to a lower minor version. Thus a hypothetical `1.1.0` specification should be usable with tooling designed for `1.0.0`.\n\n#### <a name=\"A2SIdString\"></a>Identifier\n\nThis field represents a unique universal identifier of the [application](#definitionsApplication) the AsyncAPI document is defining. It must conform to the URI format, according to [RFC3986](https://tools.ietf.org/html/rfc3986).\n\nIt is RECOMMENDED to use a [URN](https://tools.ietf.org/html/rfc8141) to globally and uniquely identify the application during long periods of time, even after it becomes unavailable or ceases to exist.\n\n###### Examples\n\n```json\n{\n  \"id\": \"urn:com:smartylighting:streetlights:server\"\n}\n```\n\n```yaml\nid: 'urn:com:smartylighting:streetlights:server'\n```\n\n```json\n{\n  \"id\": \"https://github.com/smartylighting/streetlights-server\"\n}\n```\n\n```yaml\nid: 'https://github.com/smartylighting/streetlights-server'\n```\n\n#### <a name=\"infoObject\"></a>Info Object\n\nThe object provides metadata about the API.\nThe metadata can be used by the clients if needed.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"infoObjectTitle\"></a>title | `string` | **Required.** The title of the application.\n<a name=\"infoObjectVersion\"></a>version | `string` | **Required** Provides the version of the application API (not to be confused with the specification version).\n<a name=\"infoObjectDescription\"></a>description | `string` | A short description of the application. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"infoObjectTermsOfService\"></a>termsOfService | `string` | A URL to the Terms of Service for the API. MUST be in the format of a URL.\n<a name=\"infoObjectContact\"></a>contact | [Contact Object](#contactObject) | The contact information for the exposed API.\n<a name=\"infoObjectLicense\"></a>license | [License Object](#licenseObject) | The license information for the exposed API.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Info Object Example:\n\n```json\n{\n  \"title\": \"AsyncAPI Sample App\",\n  \"description\": \"This is a sample server.\",\n  \"termsOfService\": \"https://asyncapi.org/terms/\",\n  \"contact\": {\n    \"name\": \"API Support\",\n    \"url\": \"https://www.asyncapi.org/support\",\n    \"email\": \"support@asyncapi.org\"\n  },\n  \"license\": {\n    \"name\": \"Apache 2.0\",\n    \"url\": \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n  },\n  \"version\": \"1.0.1\"\n}\n```\n\n```yaml\ntitle: AsyncAPI Sample App\ndescription: This is a sample server.\ntermsOfService: https://asyncapi.org/terms/\ncontact:\n  name: API Support\n  url: https://www.asyncapi.org/support\n  email: support@asyncapi.org\nlicense:\n  name: Apache 2.0\n  url: https://www.apache.org/licenses/LICENSE-2.0.html\nversion: 1.0.1\n```\n\n#### <a name=\"contactObject\"></a>Contact Object\n\nContact information for the exposed API.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"contactObjectName\"></a>name | `string` | The identifying name of the contact person/organization.\n<a name=\"contactObjectUrl\"></a>url | `string` | The URL pointing to the contact information. MUST be in the format of a URL.\n<a name=\"contactObjectEmail\"></a>email | `string` | The email address of the contact person/organization. MUST be in the format of an email address.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Contact Object Example:\n\n```json\n{\n  \"name\": \"API Support\",\n  \"url\": \"https://www.example.com/support\",\n  \"email\": \"support@example.com\"\n}\n```\n\n```yaml\nname: API Support\nurl: https://www.example.com/support\nemail: support@example.com\n```\n\n#### <a name=\"licenseObject\"></a>License Object\n\nLicense information for the exposed API.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"licenseObjectName\"></a>name | `string` | **Required.** The license name used for the API.\n<a name=\"licenseObjectUrl\"></a>url | `string` | A URL to the license used for the API. MUST be in the format of a URL.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### License Object Example:\n\n```json\n{\n  \"name\": \"Apache 2.0\",\n  \"url\": \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n}\n```\n\n```yaml\nname: Apache 2.0\nurl: https://www.apache.org/licenses/LICENSE-2.0.html\n```\n\n#### <a name=\"serversObject\"></a>Servers Object\n\nThe Servers Object is a map of [Server Objects](#serverObject).\n\n##### Patterned Fields\n\nField Pattern | Type | Description\n---|:---:|---\n<a name=\"serversObjectServer\"></a>`^[A-Za-z0-9_\\-]+$` | [Server Object](#serverObject) | The definition of a server this application MAY connect to.\n\n##### Servers Object Example\n\n```json\n{\n  \"production\": {\n    \"url\": \"development.gigantic-server.com\",\n    \"description\": \"Development server\",\n    \"protocol\": \"kafka\",\n    \"protocolVersion\": \"1.0.0\"\n  }\n}\n```\n\n```yaml\nproduction:\n  url: development.gigantic-server.com\n  description: Development server\n  protocol: kafka\n  protocolVersion: '1.0.0'\n```\n\n\n#### <a name=\"serverObject\"></a>Server Object\n\nAn object representing a message broker, a server or any other kind of computer program capable of sending and/or receiving data. This object is used to capture details such as URIs, protocols and security configuration. Variable substitution can be used so that some details, for example usernames and passwords, can be injected by code generation tools.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"serverObjectUrl\"></a>url | `string` | **REQUIRED**. A URL to the target host.  This URL supports Server Variables and MAY be relative, to indicate that the host location is relative to the location where the AsyncAPI document is being served. Variable substitutions will be made when a variable is named in `{`brackets`}`.\n<a name=\"serverObjectProtocol\"></a>protocol | `string` | **REQUIRED**. The protocol this URL supports for connection. Supported protocol include, but are not limited to: `amqp`, `amqps`, `http`, `https`, `ibmmq`, `jms`, `kafka`, `kafka-secure`, `mqtt`, `secure-mqtt`, `stomp`, `stomps`, `ws`, `wss`, `mercure`.\n<a name=\"serverObjectProtocolVersion\"></a>protocolVersion | `string` | The version of the protocol used for connection. For instance: AMQP `0.9.1`, HTTP `2.0`, Kafka `1.0.0`, etc.\n<a name=\"serverObjectDescription\"></a>description | `string` | An optional string describing the host designated by the URL. [CommonMark syntax](https://spec.commonmark.org/) MAY be used for rich text representation.\n<a name=\"serverObjectVariables\"></a>variables | Map[`string`, [Server Variable Object](#serverVariableObject)] | A map between a variable name and its value.  The value is used for substitution in the server's URL template.\n<a name=\"serverObjectSecurity\"></a>security | [[Security Requirement Object](#securityRequirementObject)] | A declaration of which security mechanisms can be used with this server. The list of values includes alternative security requirement objects that can be used. Only one of the security requirement objects need to be satisfied to authorize a connection or operation.\n<a name=\"serverObjectBindings\"></a>bindings | [Server Bindings Object](#serverBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the server.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n##### Server Object Example\n\nA single server would be described as:\n\n```json\n{\n  \"url\": \"development.gigantic-server.com\",\n  \"description\": \"Development server\",\n  \"protocol\": \"kafka\",\n  \"protocolVersion\": \"1.0.0\"\n}\n```\n\n```yaml\nurl: development.gigantic-server.com\ndescription: Development server\nprotocol: kafka\nprotocolVersion: '1.0.0'\n```\n\nThe following shows how multiple servers can be described, for example, at the AsyncAPI Object's [`servers`](#A2SServers):\n\n```json\n{\n  \"servers\": {\n    \"development\": {\n      \"url\": \"development.gigantic-server.com\",\n      \"description\": \"Development server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\"\n    },\n    \"staging\": {\n      \"url\": \"staging.gigantic-server.com\",\n      \"description\": \"Staging server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\"\n    },\n    \"production\": {\n      \"url\": \"api.gigantic-server.com\",\n      \"description\": \"Production server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\"\n    }\n  }\n}\n```\n\n```yaml\nservers:\n  development:\n    url: development.gigantic-server.com\n    description: Development server\n    protocol: amqp\n    protocolVersion: 0.9.1\n  staging:\n    url: staging.gigantic-server.com\n    description: Staging server\n    protocol: amqp\n    protocolVersion: 0.9.1\n  production:\n    url: api.gigantic-server.com\n    description: Production server\n    protocol: amqp\n    protocolVersion: 0.9.1\n```\n\nThe following shows how variables can be used for a server configuration:\n\n```json\n{\n  \"servers\": {\n    \"production\": {\n      \"url\": \"{username}.gigantic-server.com:{port}/{basePath}\",\n      \"description\": \"The production API server\",\n      \"protocol\": \"secure-mqtt\",\n      \"variables\": {\n        \"username\": {\n          \"default\": \"demo\",\n          \"description\": \"This value is assigned by the service provider, in this example `gigantic-server.com`\"\n        },\n        \"port\": {\n          \"enum\": [\n            \"8883\",\n            \"8884\"\n          ],\n          \"default\": \"8883\"\n        },\n        \"basePath\": {\n          \"default\": \"v2\"\n        }\n      }\n    }\n  }\n}\n```\n\n```yaml\nservers:\n  production:\n    url: '{username}.gigantic-server.com:{port}/{basePath}'\n    description: The production API server\n    protocol: secure-mqtt\n    variables:\n      username:\n        # note! no enum here means it is an open value\n        default: demo\n        description: This value is assigned by the service provider, in this example `gigantic-server.com`\n      port:\n        enum:\n          - '8883'\n          - '8884'\n        default: '8883'\n      basePath:\n        # open meaning there is the opportunity to use special base paths as assigned by the provider, default is `v2`\n        default: v2\n```\n\n\n#### <a name=\"serverVariableObject\"></a>Server Variable Object\n\nAn object representing a Server Variable for server URL template substitution.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"serverVariableObjectEnum\"></a>enum | [`string`] | An enumeration of string values to be used if the substitution options are from a limited set.\n<a name=\"serverVariableObjectDefault\"></a>default | `string` | The default value to use for substitution, and to send, if an alternate value is _not_ supplied.\n<a name=\"serverVariableObjectDescription\"></a>description | `string` | An optional description for the server variable. [CommonMark syntax](https://spec.commonmark.org/) MAY be used for rich text representation.\n<a name=\"serverVariableObjectExamples\"></a>examples | [`string`] | An array of examples of the server variable.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n\n\n#### <a name=\"defaultContentTypeString\"></a>Default Content Type\n\nA string representing the default content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. `application/json`). This value MUST be used by schema parsers when the [contentType](#messageObjectContentType) property is omitted.\n\nIn case a message can't be encoded/decoded using this value, schema parsers MUST use their default content type.\n\n##### Default Content Type Example\n\n```json\n{\n  \"defaultContentType\": \"application/json\"\n}\n```\n\n```yaml\ndefaultContentType: application/json\n```\n\n\n\n\n\n\n#### <a name=\"channelsObject\"></a>Channels Object\n\nHolds the relative paths to the individual channel and their operations. Channel paths are relative to servers.\n\nChannels are also known as \"topics\", \"routing keys\", \"event types\" or \"paths\".\n\n##### Patterned Fields\n\nField Pattern | Type | Description\n---|:---:|---\n<a name=\"channelsObjectChannel\"></a>{channel} | [Channel Item Object](#channelItemObject) | A relative path to an individual channel. The field name MUST be in the form of a [RFC 6570 URI template](https://tools.ietf.org/html/rfc6570). Query parameters and fragments SHALL NOT be used, instead use [bindings](#channelBindingsObject) to define them.\n\n##### Channels Object Example\n\n```json\n{\n  \"user/signedup\": {\n    \"subscribe\": {\n      \"$ref\": \"#/components/messages/userSignedUp\"\n    }\n  }\n}\n```\n\n```yaml\nuser/signedup:\n  subscribe:\n    $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n#### <a name=\"channelItemObject\"></a>Channel Item Object\n\nDescribes the operations available on a single channel.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"channelItemObjectRef\"></a>$ref | `string` | Allows for an external definition of this channel item. The referenced structure MUST be in the format of a [Channel Item Object](#channelItemObject). If there are conflicts between the referenced definition and this Channel Item's definition, the behavior is *undefined*.\n<a name=\"channelItemObjectDescription\"></a>description | `string` | An optional description of this channel item. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"channelItemObjectSubscribe\"></a>subscribe | [Operation Object](#operationObject) | A definition of the SUBSCRIBE operation, which defines the messages produced by the application and sent to the channel.\n<a name=\"channelItemObjectPublish\"></a>publish | [Operation Object](#operationObject) | A definition of the PUBLISH operation, which defines the messages consumed by the application from the channel.\n<a name=\"channelItemObjectParameters\"></a>parameters | [Parameters Object](#parametersObject) | A map of the parameters included in the channel name. It SHOULD be present only when using channels with expressions (as defined by [RFC 6570 section 2.2](https://tools.ietf.org/html/rfc6570#section-2.2)).\n<a name=\"channelItemObjectBindings\"></a>bindings | [Channel Bindings Object](#channelBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the channel.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Channel Item Object Example\n\n```json\n{\n  \"description\": \"This channel is used to exchange messages about users signing up\",\n  \"subscribe\": {\n    \"summary\": \"A user signed up.\",\n    \"message\": {\n      \"description\": \"A longer description of the message\",\n      \"payload\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"user\": {\n            \"$ref\": \"#/components/schemas/user\"\n          },\n          \"signup\": {\n            \"$ref\": \"#/components/schemas/signup\"\n          }\n        }\n      }\n    }\n  },\n  \"bindings\": {\n    \"amqp\": {\n      \"is\": \"queue\",\n      \"queue\": {\n        \"exclusive\": true\n      }\n    }\n  }\n}\n```\n\n```yaml\ndescription: This channel is used to exchange messages about users signing up\nsubscribe:\n  summary: A user signed up.\n  message:\n    description: A longer description of the message\n    payload:\n      type: object\n      properties:\n        user:\n          $ref: \"#/components/schemas/user\"\n        signup:\nbindings:\n  amqp:\n    is: queue\n    queue:\n      exclusive: true\n```\n\nUsing `oneOf` to specify multiple messages per operation:\n\n```json\n{\n  \"subscribe\": {\n    \"message\": {\n      \"oneOf\": [\n        { \"$ref\": \"#/components/messages/signup\" },\n        { \"$ref\": \"#/components/messages/login\" }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nsubscribe:\n  message:\n    oneOf:\n      - $ref: '#/components/messages/signup'\n      - $ref: '#/components/messages/login'\n```\n\n\n\n\n\n\n\n#### <a name=\"operationObject\"></a>Operation Object\n\nDescribes a publish or a subscribe operation. This provides a place to document how and why messages are sent and received.\n\nFor example, an operation might describe a chat application use case where a user sends a text message to a group. A publish operation describes messages that are received by the chat application, whereas a subscribe operation describes messages that are sent by the chat application.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"operationObjectOperationId\"></a>operationId | `string` | Unique string used to identify the operation. The id MUST be unique among all operations described in the API. The operationId value is **case-sensitive**. Tools and libraries MAY use the operationId to uniquely identify an operation, therefore, it is RECOMMENDED to follow common programming naming conventions.\n<a name=\"operationObjectSummary\"></a>summary | `string` | A short summary of what the operation is about.\n<a name=\"operationObjectDescription\"></a>description | `string` | A verbose explanation of the operation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"operationObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for API documentation control. Tags can be used for logical grouping of operations.\n<a name=\"operationObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this operation.\n<a name=\"operationObjectBindings\"></a>bindings | [Operation Bindings Object](#operationBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the operation.\n<a name=\"operationObjectTraits\"></a>traits | [[Operation Trait Object](#operationTraitObject) &#124; [Reference Object](#referenceObject) ] | A list of traits to apply to the operation object. Traits MUST be merged into the operation object using the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) algorithm in the same order they are defined here.\n<a name=\"operationObjectMessage\"></a>message | [[Message Object](#messageObject) &#124; [Reference Object](#referenceObject)] | A definition of the message that will be published or received on this channel. `oneOf` is allowed here to specify multiple messages, however, **a message MUST be valid only against one of the referenced message objects.**\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Operation Object Example\n\n```json\n{\n  \"operationId\": \"registerUser\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"message\": {\n    \"headers\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"applicationInstanceId\": {\n          \"description\": \"Unique identifier for a given instance of the publishing application\",\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"payload\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"user\": {\n          \"$ref\": \"#/components/schemas/userCreate\"\n        },\n        \"signup\": {\n          \"$ref\": \"#/components/schemas/signup\"\n        }\n      }\n    }\n  },\n  \"bindings\": {\n    \"amqp\": {\n      \"ack\": false\n    }\n  },\n  \"traits\": [\n    { \"$ref\": \"#/components/operationTraits/kafka\" }\n  ]\n}\n```\n\n```yaml\noperationId: registerUser\nsummary: Action to sign a user up.\ndescription: A longer description\ntags:\n  - name: user\n  - name: signup\n  - name: register\nmessage:\n  headers:\n    type: object\n    properties:\n      applicationInstanceId:\n        description: Unique identifier for a given instance of the publishing application\n        type: string\n  payload:\n    type: object\n    properties:\n      user:\n        $ref: \"#/components/schemas/userCreate\"\n      signup:\n        $ref: \"#/components/schemas/signup\"\nbindings:\n  amqp:\n    ack: false\ntraits:\n  - $ref: \"#/components/operationTraits/kafka\"\n```\n\n\n\n\n#### <a name=\"operationTraitObject\"></a>Operation Trait Object\n\nDescribes a trait that MAY be applied to an [Operation Object](#operationObject). This object MAY contain any property from the [Operation Object](#operationObject), except `message` and `traits`.\n\nIf you're looking to apply traits to a message, see the [Message Trait Object](#messageTraitObject).\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"operationTraitObjectOperationId\"></a>operationId | `string` | Unique string used to identify the operation. The id MUST be unique among all operations described in the API. The operationId value is **case-sensitive**. Tools and libraries MAY use the operationId to uniquely identify an operation, therefore, it is RECOMMENDED to follow common programming naming conventions.\n<a name=\"operationTraitObjectSummary\"></a>summary | `string` | A short summary of what the operation is about.\n<a name=\"operationTraitObjectDescription\"></a>description | `string` | A verbose explanation of the operation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"operationTraitObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for API documentation control. Tags can be used for logical grouping of operations.\n<a name=\"operationTraitObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this operation.\n<a name=\"operationTraitObjectBindings\"></a>bindings | [Operation Bindings Object](#operationBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the operation.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Operation Trait Object Example\n\n```json\n{\n  \"bindings\": {\n    \"amqp\": {\n      \"ack\": false\n    }\n  }\n}\n```\n\n```yaml\nbindings:\n  amqp:\n    ack: false\n```\n\n\n\n\n#### <a name=\"parametersObject\"></a>Parameters Object\n\nDescribes a map of parameters included in a channel name.\n\nThis map MUST contain all the parameters used in the parent channel name.\n\n##### Patterned Fields\n\nField Pattern | Type | Description\n---|:---:|---\n<a name=\"parametersObjectName\"></a>`^[A-Za-z0-9_\\-]+$` | [Parameter Object](#parameterObject) &#124; [Reference Object](#referenceObject) | The key represents the name of the parameter. It MUST match the parameter name used in the parent channel name.\n\n##### Parameters Object Example\n\n```json\n{\n  \"user/{userId}/signup\": {\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"subscribe\": {\n      \"$ref\": \"#/components/messages/userSignedUp\"\n    }\n  }\n}\n```\n\n```yaml\nuser/{userId}/signup:\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n  subscribe:\n    $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n\n#### <a name=\"parameterObject\"></a>Parameter Object\n\nDescribes a parameter included in a channel name.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"parameterObjectDescription\"></a>description | `string` | A verbose explanation of the parameter. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"parameterObjectSchema\"></a>schema | [Schema Object](#schemaObject) \\| [Reference Object](#referenceObject) | Definition of the parameter.\nlocation | `string` | A [runtime expression](#runtimeExpression) that specifies the location of the parameter value. Even when a definition for the target field exists, it MUST NOT be used to validate this parameter but, instead, the `schema` property MUST be used.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Parameter Object Example\n\n```json\n{\n  \"user/{userId}/signup\": {\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"location\": \"$message.payload#/user/id\"\n      }\n    },\n    \"subscribe\": {\n      \"$ref\": \"#/components/messages/userSignedUp\"\n    }\n  }\n}\n```\n\n```yaml\nuser/{userId}/signup:\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n      location: $message.payload#/user/id\n  subscribe:\n    $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n#### <a name=\"serverBindingsObject\"></a>Server Bindings Object\n\nMap describing protocol-specific definitions for a server.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"serverBindingsObjectHTTP\"></a>`http` | [HTTP Server Binding](https://github.com/asyncapi/bindings/blob/master/http#server) | Protocol-specific information for an HTTP server.\n<a name=\"serverBindingsObjectWebSockets\"></a>`ws` | [WebSockets Server Binding](https://github.com/asyncapi/bindings/blob/master/websockets#server) | Protocol-specific information for a WebSockets server.\n<a name=\"serverBindingsObjectKafka\"></a>`kafka` | [Kafka Server Binding](https://github.com/asyncapi/bindings/blob/master/kafka#server) | Protocol-specific information for a Kafka server.\n<a name=\"serverBindingsObjectAMQP\"></a>`amqp` | [AMQP Server Binding](https://github.com/asyncapi/bindings/blob/master/amqp#server) | Protocol-specific information for an AMQP 0-9-1 server.\n<a name=\"serverBindingsObjectAMQP1\"></a>`amqp1` | [AMQP 1.0 Server Binding](https://github.com/asyncapi/bindings/blob/master/amqp1#server) | Protocol-specific information for an AMQP 1.0 server.\n<a name=\"serverBindingsObjectMQTT\"></a>`mqtt` | [MQTT Server Binding](https://github.com/asyncapi/bindings/blob/master/mqtt#server) | Protocol-specific information for an MQTT server.\n<a name=\"serverBindingsObjectMQTT5\"></a>`mqtt5` | [MQTT 5 Server Binding](https://github.com/asyncapi/bindings/blob/master/mqtt5#server) | Protocol-specific information for an MQTT 5 server.\n<a name=\"serverBindingsObjectNATS\"></a>`nats` | [NATS Server Binding](https://github.com/asyncapi/bindings/blob/master/nats#server) | Protocol-specific information for a NATS server.\n<a name=\"serverBindingsObjectJMS\"></a>`jms` | [JMS Server Binding](https://github.com/asyncapi/bindings/blob/master/jms#server) | Protocol-specific information for a JMS server.\n<a name=\"serverBindingsObjectSNS\"></a>`sns` | [SNS Server Binding](https://github.com/asyncapi/bindings/blob/master/sns#server) | Protocol-specific information for an SNS server.\n<a name=\"serverBindingsObjectSQS\"></a>`sqs` | [SQS Server Binding](https://github.com/asyncapi/bindings/blob/master/sqs#server) | Protocol-specific information for an SQS server.\n<a name=\"serverBindingsObjectSTOMP\"></a>`stomp` | [STOMP Server Binding](https://github.com/asyncapi/bindings/blob/master/stomp#server) | Protocol-specific information for a STOMP server.\n<a name=\"serverBindingsObjectRedis\"></a>`redis` | [Redis Server Binding](https://github.com/asyncapi/bindings/blob/master/redis#server) | Protocol-specific information for a Redis server.\n<a name=\"serverBindingsObjectMercure\"></a>`mercure` | [Mercure Server Binding](https://github.com/asyncapi/bindings/blob/master/mercure#server) | Protocol-specific information for a Mercure server.\n<a name=\"serverBindingsObjectIBMMQ\"></a>`ibmmq` | [IBM MQ Server Binding](https://github.com/asyncapi/bindings/blob/master/ibmmq#server-binding-object) | Protocol-specific information for an IBM MQ server.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n#### <a name=\"channelBindingsObject\"></a>Channel Bindings Object\n\nMap describing protocol-specific definitions for a channel.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"channelBindingsObjectHTTP\"></a>`http` | [HTTP Channel Binding](https://github.com/asyncapi/bindings/blob/master/http/README.md#channel) | Protocol-specific information for an HTTP channel.\n<a name=\"channelBindingsObjectWebSockets\"></a>`ws` | [WebSockets Channel Binding](https://github.com/asyncapi/bindings/blob/master/websockets/README.md#channel) | Protocol-specific information for a WebSockets channel.\n<a name=\"channelBindingsObjectKafka\"></a>`kafka` | [Kafka Channel Binding](https://github.com/asyncapi/bindings/blob/master/kafka/README.md#channel) | Protocol-specific information for a Kafka channel.\n<a name=\"channelBindingsObjectAMQP\"></a>`amqp` | [AMQP Channel Binding](https://github.com/asyncapi/bindings/blob/master/amqp/README.md#channel) | Protocol-specific information for an AMQP 0-9-1 channel.\n<a name=\"channelBindingsObjectAMQP1\"></a>`amqp1` | [AMQP 1.0 Channel Binding](https://github.com/asyncapi/bindings/blob/master/amqp1/README.md#channel) | Protocol-specific information for an AMQP 1.0 channel.\n<a name=\"channelBindingsObjectMQTT\"></a>`mqtt` | [MQTT Channel Binding](https://github.com/asyncapi/bindings/blob/master/mqtt/README.md#channel) | Protocol-specific information for an MQTT channel.\n<a name=\"channelBindingsObjectMQTT5\"></a>`mqtt5` | [MQTT 5 Channel Binding](https://github.com/asyncapi/bindings/blob/master/mqtt5#channel) | Protocol-specific information for an MQTT 5 channel.\n<a name=\"channelBindingsObjectNATS\"></a>`nats` | [NATS Channel Binding](https://github.com/asyncapi/bindings/blob/master/nats/README.md#channel) | Protocol-specific information for a NATS channel.\n<a name=\"channelBindingsObjectJMS\"></a>`jms` | [JMS Channel Binding](https://github.com/asyncapi/bindings/blob/master/jms/README.md#channel) | Protocol-specific information for a JMS channel.\n<a name=\"channelBindingsObjectSNS\"></a>`sns` | [SNS Channel Binding](https://github.com/asyncapi/bindings/blob/master/sns/README.md#channel) | Protocol-specific information for an SNS channel.\n<a name=\"channelBindingsObjectSQS\"></a>`sqs` | [SQS Channel Binding](https://github.com/asyncapi/bindings/blob/master/sqs/README.md#channel) | Protocol-specific information for an SQS channel.\n<a name=\"channelBindingsObjectSTOMP\"></a>`stomp` | [STOMP Channel Binding](https://github.com/asyncapi/bindings/blob/master/stomp/README.md#channel) | Protocol-specific information for a STOMP channel.\n<a name=\"channelBindingsObjectRedis\"></a>`redis` | [Redis Channel Binding](https://github.com/asyncapi/bindings/blob/master/redis#channel) | Protocol-specific information for a Redis channel.\n<a name=\"channelBindingsObjectMercure\"></a>`mercure` | [Mercure Channel Binding](https://github.com/asyncapi/bindings/blob/master/mercure#channel) | Protocol-specific information for a Mercure channel.\n<a name=\"channelBindingsObjectIBMMQ\"></a>`ibmmq` | [IBM MQ Channel Binding](https://github.com/asyncapi/bindings/tree/master/ibmmq#channel-binding-object) | Protocol-specific information for an IBM MQ channel.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n#### <a name=\"operationBindingsObject\"></a>Operation Bindings Object\n\nMap describing protocol-specific definitions for an operation.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"operationBindingsObjectHTTP\"></a>`http` | [HTTP Operation Binding](https://github.com/asyncapi/bindings/blob/master/http/README.md#operation) | Protocol-specific information for an HTTP operation.\n<a name=\"operationBindingsObjectWebSockets\"></a>`ws` | [WebSockets Operation Binding](https://github.com/asyncapi/bindings/blob/master/websockets/README.md#operation) | Protocol-specific information for a WebSockets operation.\n<a name=\"operationBindingsObjectKafka\"></a>`kafka` | [Kafka Operation Binding](https://github.com/asyncapi/bindings/blob/master/kafka/README.md#operation) | Protocol-specific information for a Kafka operation.\n<a name=\"operationBindingsObjectAMQP\"></a>`amqp` | [AMQP Operation Binding](https://github.com/asyncapi/bindings/blob/master/amqp/README.md#operation) | Protocol-specific information for an AMQP 0-9-1 operation.\n<a name=\"operationBindingsObjectAMQP1\"></a>`amqp1` | [AMQP 1.0 Operation Binding](https://github.com/asyncapi/bindings/blob/master/amqp1/README.md#operation) | Protocol-specific information for an AMQP 1.0 operation.\n<a name=\"operationBindingsObjectMQTT\"></a>`mqtt` | [MQTT Operation Binding](https://github.com/asyncapi/bindings/blob/master/mqtt/README.md#operation) | Protocol-specific information for an MQTT operation.\n<a name=\"operationBindingsObjectMQTT5\"></a>`mqtt5` | [MQTT 5 Operation Binding](https://github.com/asyncapi/bindings/blob/master/mqtt5/README.md#operation) | Protocol-specific information for an MQTT 5 operation.\n<a name=\"operationBindingsObjectNATS\"></a>`nats` | [NATS Operation Binding](https://github.com/asyncapi/bindings/blob/master/nats/README.md#operation) | Protocol-specific information for a NATS operation.\n<a name=\"operationBindingsObjectJMS\"></a>`jms` | [JMS Operation Binding](https://github.com/asyncapi/bindings/blob/master/jms/README.md#operation) | Protocol-specific information for a JMS operation.\n<a name=\"operationBindingsObjectSNS\"></a>`sns` | [SNS Operation Binding](https://github.com/asyncapi/bindings/blob/master/sns/README.md#operation) | Protocol-specific information for an SNS operation.\n<a name=\"operationBindingsObjectSQS\"></a>`sqs` | [SQS Operation Binding](https://github.com/asyncapi/bindings/blob/master/sqs/README.md#operation) | Protocol-specific information for an SQS operation.\n<a name=\"operationBindingsObjectSTOMP\"></a>`stomp` | [STOMP Operation Binding](https://github.com/asyncapi/bindings/blob/master/stomp/README.md#operation) | Protocol-specific information for a STOMP operation.\n<a name=\"operationBindingsObjectRedis\"></a>`redis` | [Redis Operation Binding](https://github.com/asyncapi/bindings/blob/master/redis#operation) | Protocol-specific information for a Redis operation.\n<a name=\"operationBindingsObjectMercure\"></a>`mercure` | [Mercure Operation Binding](https://github.com/asyncapi/bindings/blob/master/mercure#operation) | Protocol-specific information for a Mercure operation.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n\n#### <a name=\"messageBindingsObject\"></a>Message Bindings Object\n\nMap describing protocol-specific definitions for a message.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"messageBindingsObjectHTTP\"></a>`http` | [HTTP Message Binding](https://github.com/asyncapi/bindings/blob/master/http/README.md#message) | Protocol-specific information for an HTTP message, i.e., a request or a response.\n<a name=\"messageBindingsObjectWebSockets\"></a>`ws` | [WebSockets Message Binding](https://github.com/asyncapi/bindings/blob/master/websockets/README.md#message) | Protocol-specific information for a WebSockets message.\n<a name=\"messageBindingsObjectKafka\"></a>`kafka` | [Kafka Message Binding](https://github.com/asyncapi/bindings/blob/master/kafka/README.md#message) | Protocol-specific information for a Kafka message.\n<a name=\"messageBindingsObjectAMQP\"></a>`amqp` | [AMQP Message Binding](https://github.com/asyncapi/bindings/blob/master/amqp/README.md#message) | Protocol-specific information for an AMQP 0-9-1 message.\n<a name=\"messageBindingsObjectAMQP1\"></a>`amqp1` | [AMQP 1.0 Message Binding](https://github.com/asyncapi/bindings/blob/master/amqp1/README.md#message) | Protocol-specific information for an AMQP 1.0 message.\n<a name=\"messageBindingsObjectMQTT\"></a>`mqtt` | [MQTT Message Binding](https://github.com/asyncapi/bindings/blob/master/mqtt/README.md#message) | Protocol-specific information for an MQTT message.\n<a name=\"messageBindingsObjectMQTT5\"></a>`mqtt5` | [MQTT 5 Message Binding](https://github.com/asyncapi/bindings/blob/master/mqtt5/README.md#message) | Protocol-specific information for an MQTT 5 message.\n<a name=\"messageBindingsObjectNATS\"></a>`nats` | [NATS Message Binding](https://github.com/asyncapi/bindings/blob/master/nats/README.md#message) | Protocol-specific information for a NATS message.\n<a name=\"messageBindingsObjectJMS\"></a>`jms` | [JMS Message Binding](https://github.com/asyncapi/bindings/blob/master/jms/README.md#message) | Protocol-specific information for a JMS message.\n<a name=\"messageBindingsObjectSNS\"></a>`sns` | [SNS Message Binding](https://github.com/asyncapi/bindings/blob/master/sns/README.md#message) | Protocol-specific information for an SNS message.\n<a name=\"messageBindingsObjectSQS\"></a>`sqs` | [SQS Message Binding](https://github.com/asyncapi/bindings/blob/master/sqs/README.md#message) | Protocol-specific information for an SQS message.\n<a name=\"messageBindingsObjectSTOMP\"></a>`stomp` | [STOMP Message Binding](https://github.com/asyncapi/bindings/blob/master/stomp/README.md#message) | Protocol-specific information for a STOMP message.\n<a name=\"messageBindingsObjectRedis\"></a>`redis` | [Redis Message Binding](https://github.com/asyncapi/bindings/blob/master/redis#message) | Protocol-specific information for a Redis message.\n<a name=\"messageBindingsObjectMercure\"></a>`mercure` | [Mercure Message Binding](https://github.com/asyncapi/bindings/blob/master/mercure#message) | Protocol-specific information for a Mercure message.\n<a name=\"messageBindingsObjectIBMMQ\"></a>`ibmmq` | [IBM MQ Message Binding](https://github.com/asyncapi/bindings/tree/master/ibmmq#message-binding-object) | Protocol-specific information for an IBM MQ message.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n\n\n\n\n#### <a name=\"messageObject\"></a>Message Object\n\nDescribes a message received on a given channel and operation.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"messageObjectHeaders\"></a>headers | [Schema Object](#schemaObject) &#124; [Reference Object](#referenceObject) | Schema definition of the application headers. Schema MUST be of type \"object\". It **MUST NOT** define the protocol headers.\n<a name=\"messageObjectPayload\"></a>payload | `any` | Definition of the message payload. It can be of any type but defaults to [Schema object](#schemaObject). It must match the schema format, including encoding type - e.g Avro should be inlined as either a YAML or JSON object NOT a string to be parsed as YAML or JSON.\n<a name=\"messageObjectCorrelationId\"></a>correlationId | [Correlation ID Object](#correlationIdObject) &#124; [Reference Object](#referenceObject) | Definition of the correlation ID used for message tracing or matching.\n<a name=\"messageObjectSchemaFormat\"></a>schemaFormat | `string` | A string containing the name of the schema format used to define the message payload. If omitted, implementations should parse the payload as a [Schema object](#schemaObject). When the payload is defined using a `$ref` to a remote file, it is RECOMMENDED the schema format includes the file encoding type to allow implementations to parse the file correctly. E.g., adding `+yaml` if content type is `application/vnd.apache.avro` results in `application/vnd.apache.avro+yaml`.<br/><br/>Check out the [supported schema formats table](#messageObjectSchemaFormatTable) for more information. Custom values are allowed but their implementation is OPTIONAL. A custom value MUST NOT refer to one of the schema formats listed in the [table](#messageObjectSchemaFormatTable).\n<a name=\"messageObjectContentType\"></a>contentType | `string` | The content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. `application/json`). When omitted, the value MUST be the one specified on the [defaultContentType](#defaultContentTypeString) field.\n<a name=\"messageObjectName\"></a>name | `string` | A machine-friendly name for the message.\n<a name=\"messageObjectTitle\"></a>title | `string` | A human-friendly title for the message.\n<a name=\"messageObjectSummary\"></a>summary | `string` | A short summary of what the message is about.\n<a name=\"messageObjectDescription\"></a>description | `string` | A verbose explanation of the message. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"messageObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for API documentation control. Tags can be used for logical grouping of messages.\n<a name=\"messageObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this message.\n<a name=\"messageObjectBindings\"></a>bindings | [Message Bindings Object](#messageBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the message.\n<a name=\"messageObjectExamples\"></a>examples | [Map[`string`, `any`]] | An array of key/value pairs where keys MUST be either **headers** and/or **payload**. Values MUST contain examples that validate against the [headers](#messageObjectHeaders) or [payload](#messageObjectPayload) fields, respectively. Example MAY also have the **name** and **summary** additional keys to provide respectively a machine-friendly name and a short summary of what the example is about.\n<a name=\"messageObjectTraits\"></a>traits | [[Message Trait Object](#messageTraitObject) &#124; [Reference Object](#referenceObject)] | A list of traits to apply to the message object. Traits MUST be merged into the message object using the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) algorithm in the same order they are defined here. The resulting object MUST be a valid [Message Object](#messageObject).\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### <a name=\"messageObjectSchemaFormatTable\"></a>Schema formats table\n\nThe following table contains a set of values that every implementation MUST support.\n\nName | Allowed values | Notes\n---|:---:|---\n[AsyncAPI 2.1.0 Schema Object](#schemaObject) | `application/vnd.aai.asyncapi;version=2.1.0`, `application/vnd.aai.asyncapi+json;version=2.1.0`, `application/vnd.aai.asyncapi+yaml;version=2.1.0` | This is the default when a `schemaFormat` is not provided.\n[JSON Schema Draft 07](https://json-schema.org/specification-links.html#draft-7) | `application/schema+json;version=draft-07`, `application/schema+yaml;version=draft-07` | \n\nThe following table contains a set of values that every implementation is RECOMMENDED to support.\n\nName | Allowed values | Notes\n---|:---:|---\n[Avro 1.9.0 schema](https://avro.apache.org/docs/1.9.0/spec.html#schemas) | `application/vnd.apache.avro;version=1.9.0`, `application/vnd.apache.avro+json;version=1.9.0`, `application/vnd.apache.avro+yaml;version=1.9.0` |\n[OpenAPI 3.0.0 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject) | `application/vnd.oai.openapi;version=3.0.0`, `application/vnd.oai.openapi+json;version=3.0.0`, `application/vnd.oai.openapi+yaml;version=3.0.0` | \n[RAML 1.0 data type](https://github.com/raml-org/raml-spec/blob/master/versions/raml-10/raml-10.md/) | `application/raml+yaml;version=1.0` |\n\n\n##### Message Object Example\n\n```json\n{\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"contentType\": \"application/json\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"headers\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"correlationId\": {\n        \"description\": \"Correlation ID set by application\",\n        \"type\": \"string\"\n      },\n      \"applicationInstanceId\": {\n        \"description\": \"Unique identifier for a given instance of the publishing application\",\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"payload\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"user\": {\n        \"$ref\": \"#/components/schemas/userCreate\"\n      },\n      \"signup\": {\n        \"$ref\": \"#/components/schemas/signup\"\n      }\n    }\n  },\n  \"correlationId\": {\n    \"description\": \"Default Correlation ID\",\n    \"location\": \"$message.header#/correlationId\"\n  },\n  \"traits\": [\n    { \"$ref\": \"#/components/messageTraits/commonHeaders\" }\n  ],\n  \"examples\": [\n    {\n      \"name\": \"SimpleSignup\",\n      \"summary\": \"A simple UserSignup example message\",\n      \"headers\": {\n        \"correlationId\": \"my-correlation-id\",\n        \"applicationInstanceId\": \"myInstanceId\"\n      },\n      \"payload\": {\n        \"user\": {\n          \"someUserKey\": \"someUserValue\"\n        },\n        \"signup\": {\n          \"someSignupKey\": \"someSignupValue\"\n        }\n      }\n    }\n  ]\n}\n```\n\n```yaml\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ncontentType: application/json\ntags:\n  - name: user\n  - name: signup\n  - name: register\nheaders:\n  type: object\n  properties:\n    correlationId:\n      description: Correlation ID set by application\n      type: string\n    applicationInstanceId:\n      description: Unique identifier for a given instance of the publishing application\n      type: string\npayload:\n  type: object\n  properties:\n    user:\n      $ref: \"#/components/schemas/userCreate\"\n    signup:\n      $ref: \"#/components/schemas/signup\"\ncorrelationId:\n  description: Default Correlation ID\n  location: $message.header#/correlationId\ntraits:\n  - $ref: \"#/components/messageTraits/commonHeaders\"\nexamples:\n  - name: SimpleSignup\n    summary: A simple UserSignup example message\n    headers:\n      correlationId: my-correlation-id\n      applicationInstanceId: myInstanceId\n    payload:\n      user:\n        someUserKey: someUserValue\n      signup:\n        someSignupKey: someSignupValue\n```\n\nExample using Avro to define the payload:\n\n```json\n{\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"schemaFormat\": \"application/vnd.apache.avro+json;version=1.9.0\",\n  \"payload\": {\n    \"$ref\": \"path/to/user-create.avsc#/UserCreate\"\n  }\n}\n```\n\n```yaml\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ntags:\n  - name: user\n  - name: signup\n  - name: register\nschemaFormat: 'application/vnd.apache.avro+yaml;version=1.9.0'\npayload:\n  $ref: 'path/to/user-create.avsc/#UserCreate'\n```\n\n\n\n\n\n\n\n#### <a name=\"messageTraitObject\"></a>Message Trait Object\n\nDescribes a trait that MAY be applied to a [Message Object](#messageObject). This object MAY contain any property from the [Message Object](#messageObject), except `payload` and `traits`.\n\nIf you're looking to apply traits to an operation, see the [Operation Trait Object](#operationTraitObject).\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"messageTraitObjectHeaders\"></a>headers | [Schema Object](#schemaObject) &#124; [Reference Object](#referenceObject) | Schema definition of the application headers. Schema MUST be of type \"object\". It **MUST NOT** define the protocol headers.\n<a name=\"messageTraitObjectCorrelationId\"></a>correlationId | [Correlation ID Object](#correlationIdObject) &#124; [Reference Object](#referenceObject) | Definition of the correlation ID used for message tracing or matching.\n<a name=\"messageTraitObjectSchemaFormat\"></a>schemaFormat | `string` | A string containing the name of the schema format/language used to define the message payload. If omitted, implementations should parse the payload as a [Schema object](#schemaObject).\n<a name=\"messageTraitObjectContentType\"></a>contentType | `string` | The content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. `application/json`). When omitted, the value MUST be the one specified on the [defaultContentType](#defaultContentTypeString) field.\n<a name=\"messageTraitObjectName\"></a>name | `string` | A machine-friendly name for the message.\n<a name=\"messageTraitObjectTitle\"></a>title | `string` | A human-friendly title for the message.\n<a name=\"messageTraitObjectSummary\"></a>summary | `string` | A short summary of what the message is about.\n<a name=\"messageTraitObjectDescription\"></a>description | `string` | A verbose explanation of the message. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"messageTraitObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for API documentation control. Tags can be used for logical grouping of messages.\n<a name=\"messageTraitObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this message.\n<a name=\"messageTraitObjectBindings\"></a>bindings | [Message Bindings Object](#messageBindingsObject) \\| [Reference Object](#referenceObject) | A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the message.\n<a name=\"messageTraitObjectExamples\"></a>examples | [Map[`string`, `any`]] | An array with examples of valid message objects.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Message Trait Object Example\n\n```json\n{\n  \"schemaFormat\": \"application/vnd.apache.avro+json;version=1.9.0\",\n  \"contentType\": \"application/json\"\n}\n```\n\n```yaml\nschemaFormat: 'application/vnd.apache.avro+yaml;version=1.9.0'\ncontentType: application/json\n```\n\n#### <a name=\"tagsObject\"></a>Tags Object\n\nA Tags object is a list of Tag Objects.\n\n#### <a name=\"tagObject\"></a>Tag Object\n\nAllows adding meta data to a single tag.\n\n##### Fixed Fields\nField Name | Type | Description\n---|:---:|---\n<a name=\"tagObjectName\"></a>name | `string` | **Required.** The name of the tag.\n<a name=\"tagObjectDescription\"></a>description | `string` | A short description for the tag. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"tagObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this tag.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Tag Object Example\n\n```json\n{\n\t\"name\": \"user\",\n\t\"description\": \"User-related messages\"\n}\n```\n\n```yaml\nname: user\ndescription: User-related messages\n```\n\n\n\n\n\n\n\n#### <a name=\"externalDocumentationObject\"></a>External Documentation Object\n\nAllows referencing an external resource for extended documentation.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **Required.** The URL for the target documentation. Value MUST be in the format of a URL.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### External Documentation Object Example\n\n```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n#### <a name=\"referenceObject\"></a>Reference Object\n\nA simple object to allow referencing other components in the specification, internally and externally.\n\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n##### Fixed Fields\nField Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **Required.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n##### Reference Object Example\n\n```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n#### <a name=\"componentsObject\"></a>Components Object\n\nHolds a set of reusable objects for different aspects of the AsyncAPI specification.\nAll objects defined within the components object will have no effect on the API unless they are explicitly referenced from properties outside the components object.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---|---\n<a name=\"componentsSchemas\"></a> schemas | Map[`string`, [Schema Object](#schemaObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Schema Objects](#schemaObject).\n<a name=\"componentsMessages\"></a> messages | Map[`string`, [Message Object](#messageObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Message Objects](#messageObject).\n<a name=\"componentsSecuritySchemes\"></a> securitySchemes| Map[`string`, [Security Scheme Object](#securitySchemeObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Security Scheme Objects](#securitySchemeObject).\n<a name=\"componentsParameters\"></a> parameters | Map[`string`, [Parameter Object](#parameterObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Parameter Objects](#parameterObject).\n<a name=\"componentsCorrelationIDs\"></a> correlationIds | Map[`string`, [Correlation ID Object](#correlationIdObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Correlation ID Objects](#correlationIdObject).\n<a name=\"componentsOperationTraits\"></a> operationTraits | Map[`string`, [Operation Trait Object](#operationTraitObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Operation Trait Objects](#operationTraitObject).\n<a name=\"componentsMessageTraits\"></a> messageTraits | Map[`string`, [Message Trait Object](#messageTraitObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Message Trait Objects](#messageTraitObject).\n<a name=\"componentsServerBindings\"></a> serverBindings | Map[`string`, [Server Bindings Object](#serverBindingsObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Server Bindings Objects](#serverBindingsObject).\n<a name=\"componentsChannelBindings\"></a> channelBindings | Map[`string`, [Channel Bindings Object](#channelBindingsObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Channel Bindings Objects](#channelBindingsObject).\n<a name=\"componentsOperationBindings\"></a> operationBindings | Map[`string`, [Operation Bindings Object](#operationBindingsObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Operation Bindings Objects](#operationBindingsObject).\n<a name=\"componentsMessageBindings\"></a> messageBindings | Map[`string`, [Message Bindings Object](#messageBindingsObject) \\| [Reference Object](#referenceObject)]  | An object to hold reusable [Message Bindings Objects](#messageBindingsObject).\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\nAll the fixed fields declared above are objects that MUST use keys that match the regular expression: `^[a-zA-Z0-9\\.\\-_]+$`.\n\nField Name Examples:\n\n```\nUser\nUser_1\nUser_Name\nuser-name\nmy.org.User\n```\n\n##### Components Object Example\n\n```json\n{\n  \"components\": {\n    \"schemas\": {\n      \"Category\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"messages\": {\n      \"userSignUp\": {\n        \"summary\": \"Action to sign a user up.\",\n        \"description\": \"Multiline description of what this action does.\\nHere you have another line.\\n\",\n        \"tags\": [\n          {\n            \"name\": \"user\"\n          },\n          {\n            \"name\": \"signup\"\n          }\n        ],\n        \"headers\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"applicationInstanceId\": {\n              \"description\": \"Unique identifier for a given instance of the publishing application\",\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"payload\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"user\": {\n              \"$ref\": \"#/components/schemas/userCreate\"\n            },\n            \"signup\": {\n              \"$ref\": \"#/components/schemas/signup\"\n            }\n          }\n        }\n      }\n    },\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"correlationIds\": {\n      \"default\": {\n        \"description\": \"Default Correlation ID\",\n        \"location\": \"$message.header#/correlationId\"\n      }\n    },\n    \"messageTraits\": {\n      \"commonHeaders\": {\n        \"headers\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"my-app-header\": {\n              \"type\": \"integer\",\n              \"minimum\": 0,\n              \"maximum\": 100\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\n```yaml\ncomponents:\n  schemas:\n    Category:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n    Tag:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n  messages:\n    userSignUp:\n      summary: Action to sign a user up.\n      description: |\n        Multiline description of what this action does.\n        Here you have another line.\n      tags:\n        - name: user\n        - name: signup\n      headers:\n        type: object\n        properties:\n          applicationInstanceId:\n            description: Unique identifier for a given instance of the publishing application\n            type: string\n      payload:\n        type: object\n        properties:\n          user:\n            $ref: \"#/components/schemas/userCreate\"\n          signup:\n            $ref: \"#/components/schemas/signup\"\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n  correlationIds:\n    default:\n      description: Default Correlation ID\n      location: $message.header#/correlationId\n  messageTraits:\n    commonHeaders:\n      headers:\n        type: object\n        properties:\n          my-app-header:\n            type: integer\n            minimum: 0\n            maximum: 100\n```\n\n#### <a name=\"schemaObject\"></a>Schema Object\n\nThe Schema Object allows the definition of input and output data types.\nThese types can be objects, but also primitives and arrays. This object is a superset of the [JSON Schema Specification Draft 07](https://json-schema.org/). The empty schema (which allows any instance to validate) MAY be represented by the `boolean` value `true` and a schema which allows no instance to validate MAY be represented by the `boolean` value `false`.\n\nFurther information about the properties can be found in [JSON Schema Core](https://tools.ietf.org/html/draft-handrews-json-schema-01) and [JSON Schema Validation](https://tools.ietf.org/html/draft-handrews-json-schema-validation-01).\nUnless stated otherwise, the property definitions follow the JSON Schema specification as referenced here.\n\n##### Properties\n\nThe AsyncAPI Schema Object is a JSON Schema vocabulary which extends JSON Schema Core and Validation vocabularies. As such, any keyword available for those vocabularies is by definition available in AsyncAPI, and will work the exact same way, including but not limited to:\n\n- title\n- type\n- required\n- multipleOf\n- maximum\n- exclusiveMaximum\n- minimum\n- exclusiveMinimum\n- maxLength\n- minLength\n- pattern (This string SHOULD be a valid regular expression, according to the [ECMA 262 regular expression](https://www.ecma-international.org/ecma-262/5.1/#sec-7.8.5) dialect)\n- maxItems\n- minItems\n- uniqueItems\n- maxProperties\n- minProperties\n- enum\n- const\n- examples\n- if / then / else\n- readOnly\n- writeOnly\n- properties\n- patternProperties\n- additionalProperties\n- additionalItems\n- items\n- propertyNames\n- contains\n- allOf\n- oneOf\n- anyOf\n- not\n\nThe following properties are taken from the JSON Schema definition but their definitions were adjusted to the AsyncAPI Specification.\n\n- description - [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\n- format - See [Data Type Formats](#dataTypeFormat) for further details. While relying on JSON Schema's defined formats, the AsyncAPI Specification offers a few additional predefined formats.\n- default - The default value represents what would be assumed by the consumer of the input as the value of the schema if one is not provided. Unlike JSON Schema, the value MUST conform to the defined type for the Schema Object defined at the same level. For example, of `type` is `string`, then `default` can be `\"foo\"` but cannot be `1`.\n\nAlternatively, any time a Schema Object can be used, a [Reference Object](#referenceObject) can be used in its place. This allows referencing definitions in place of defining them inline.\n\nIn addition to the JSON Schema fields, the following AsyncAPI vocabulary fields MAY be used for further schema documentation:\n\n##### Fixed Fields\nField Name | Type | Description\n---|:---:|---\n<a name=\"schemaObjectDiscriminator\"></a>discriminator | `string` | Adds support for polymorphism. The discriminator is the schema property name that is used to differentiate between other schema that inherit this schema. The property name used MUST be defined at this schema and it MUST be in the `required` property list. When used, the value MUST be the name of this schema or any schema that inherits it. See [Composition and Inheritance](#schemaComposition) for more details.\n<a name=\"schemaObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this schema.\n<a name=\"schemaObjectDeprecated\"></a> deprecated | `boolean` | Specifies that a schema is deprecated and SHOULD be transitioned out of usage. Default value is `false`.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n###### <a name=\"schemaComposition\"></a>Composition and Inheritance (Polymorphism)\n\nThe AsyncAPI Specification allows combining and extending model definitions using the `allOf` property of JSON Schema, in effect offering model composition.\n`allOf` takes in an array of object definitions that are validated *independently* but together compose a single object.\n\nWhile composition offers model extensibility, it does not imply a hierarchy between the models.\nTo support polymorphism, AsyncAPI Specification adds the support of the `discriminator` field.\nWhen used, the `discriminator` will be the name of the property used to decide which schema definition is used to validate the structure of the model.\nAs such, the `discriminator` field MUST be a required field.\nThere are are two ways to define the value of a discriminator for an inheriting instance.\n\n- Use the schema's name.\n- Override the schema's name by overriding the property with a new value. If exists, this takes precedence over the schema's name.\n\nAs such, inline schema definitions, which do not have a given id, *cannot* be used in polymorphism.\n\n##### Schema Object Examples\n\n###### Primitive Sample\n\n```json\n{\n  \"type\": \"string\",\n  \"format\": \"email\"\n}\n```\n\n```yaml\ntype: string\nformat: email\n```\n\n###### Simple Model\n\n```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"name\"\n  ],\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"address\": {\n      \"$ref\": \"#/components/schemas/Address\"\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"format\": \"int32\",\n      \"minimum\": 0\n    }\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- name\nproperties:\n  name:\n    type: string\n  address:\n    $ref: '#/components/schemas/Address'\n  age:\n    type: integer\n    format: int32\n    minimum: 0\n```\n\n###### Model with Map/Dictionary Properties\n\nFor a simple string to string mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"type\": \"string\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  type: string\n```\n\nFor a string to model mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"$ref\": \"#/components/schemas/ComplexModel\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  $ref: '#/components/schemas/ComplexModel'\n```\n\n###### Model with Example\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"integer\",\n      \"format\": \"int64\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"example\": {\n    \"name\": \"Puma\",\n    \"id\": 1\n  }\n}\n```\n\n```yaml\ntype: object\nproperties:\n  id:\n    type: integer\n    format: int64\n  name:\n    type: string\nrequired:\n- name\nexample:\n  name: Puma\n  id: 1\n```\n\n###### Model with Boolean Schemas\n\n```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"anySchema\"\n  ],\n  \"properties\": {\n    \"anySchema\": true,\n    \"cannotBeDefined\": false\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- anySchema\nproperties:\n  anySchema: true\n  cannotBeDefined: false\n```\n\n###### Models with Composition\n\n```json\n{\n  \"schemas\": {\n    \"ErrorModel\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"message\",\n        \"code\"\n      ],\n      \"properties\": {\n        \"message\": {\n          \"type\": \"string\"\n        },\n        \"code\": {\n          \"type\": \"integer\",\n          \"minimum\": 100,\n          \"maximum\": 600\n        }\n      }\n    },\n    \"ExtendedErrorModel\": {\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/ErrorModel\"\n        },\n        {\n          \"type\": \"object\",\n          \"required\": [\n            \"rootCause\"\n          ],\n          \"properties\": {\n            \"rootCause\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  ErrorModel:\n    type: object\n    required:\n    - message\n    - code\n    properties:\n      message:\n        type: string\n      code:\n        type: integer\n        minimum: 100\n        maximum: 600\n  ExtendedErrorModel:\n    allOf:\n    - $ref: '#/components/schemas/ErrorModel'\n    - type: object\n      required:\n      - rootCause\n      properties:\n        rootCause:\n          type: string\n```\n\n###### Models with Polymorphism Support\n\n```json\n{\n  \"schemas\": {\n    \"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"petType\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"petType\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"petType\"\n      ]\n    },\n    \"Cat\": {\n      \"description\": \"A representation of a cat. Note that `Cat` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"huntingSkill\": {\n              \"type\": \"string\",\n              \"description\": \"The measured skill for hunting\",\n              \"enum\": [\n                \"clueless\",\n                \"lazy\",\n                \"adventurous\",\n                \"aggressive\"\n              ]\n            }\n          },\n          \"required\": [\n            \"huntingSkill\"\n          ]\n        }\n      ]\n    },\n    \"Dog\": {\n      \"description\": \"A representation of a dog. Note that `Dog` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"packSize\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"description\": \"the size of the pack the dog is from\",\n              \"minimum\": 0\n            }\n          },\n          \"required\": [\n            \"packSize\"\n          ]\n        }\n      ]\n    },\n    \"StickInsect\": {\n      \"description\": \"A representation of an Australian walking stick. Note that `StickBug` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"petType\": {\n              \"const\": \"StickBug\"\n            },\n            \"color\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"color\"\n          ]\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  Pet:\n    type: object\n    discriminator: petType\n    properties:\n      name:\n        type: string\n      petType:\n        type: string\n    required:\n    - name\n    - petType\n  ## applies to instances with `petType: \"Cat\"`\n  ## because that is the schema name\n  Cat:\n    description: A representation of a cat\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        huntingSkill:\n          type: string\n          description: The measured skill for hunting\n          enum:\n          - clueless\n          - lazy\n          - adventurous\n          - aggressive\n      required:\n      - huntingSkill\n  ## applies to instances with `petType: \"Dog\"`\n  ## because that is the schema name\n  Dog:\n    description: A representation of a dog\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        packSize:\n          type: integer\n          format: int32\n          description: the size of the pack the dog is from\n          minimum: 0\n      required:\n      - packSize\n  ## applies to instances with `petType: \"StickBug\"`\n  ## because that is the required value of the discriminator field,\n  ## overriding the schema name\n  StickInsect:\n    description: A representation of an Australian walking stick\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        petType:\n          const: StickBug\n        color:\n          type: string\n      required:\n      - color\n```\n\n\n\n\n\n#### <a name=\"securitySchemeObject\"></a>Security Scheme Object\n\nDefines a security scheme that can be used by the operations. Supported schemes are:\n\n* User/Password.\n* API key (either as user or as password).\n* X.509 certificate.\n* End-to-end encryption (either symmetric or asymmetric).\n* HTTP authentication.\n* HTTP API key.\n* OAuth2's common flows (Implicit, Resource Owner Protected Credentials, Client Credentials and Authorization Code) as defined in [RFC6749](https://tools.ietf.org/html/rfc6749).\n* [OpenID Connect Discovery](https://tools.ietf.org/html/draft-ietf-oauth-discovery-06).\n* SASL (Simple Authentication and Security Layer) as defined in [RFC4422](https://tools.ietf.org/html/rfc4422).\n\n##### Fixed Fields\nField Name | Type | Applies To | Description\n---|:---:|---|---\n<a name=\"securitySchemeObjectType\"></a>type | `string` | Any | **REQUIRED**. The type of the security scheme. Valid values are `\"userPassword\"`, `\"apiKey\"`, `\"X509\"`, `\"symmetricEncryption\"`, `\"asymmetricEncryption\"`, `\"httpApiKey\"`, `\"http\"`, `\"oauth2\"`, `\"openIdConnect\"`, `\"plain\"`, `\"scramSha256\"`, `\"scramSha512\"`, and `\"gssapi\"`.\n<a name=\"securitySchemeObjectDescription\"></a>description | `string` | Any | A short description for security scheme. [CommonMark syntax](https://spec.commonmark.org/) MAY be used for rich text representation.\n<a name=\"securitySchemeObjectName\"></a>name | `string` | `httpApiKey` | **REQUIRED**. The name of the header, query or cookie parameter to be used.\n<a name=\"securitySchemeObjectIn\"></a>in | `string` | `apiKey` \\| `httpApiKey` | **REQUIRED**. The location of the API key. Valid values are `\"user\"` and `\"password\"` for `apiKey` and `\"query\"`, `\"header\"` or `\"cookie\"` for `httpApiKey`.\n<a name=\"securitySchemeObjectScheme\"></a>scheme | `string` | `http` | **REQUIRED**. The name of the HTTP Authorization scheme to be used in the [Authorization header as defined in RFC7235](https://tools.ietf.org/html/rfc7235#section-5.1).\n<a name=\"securitySchemeObjectBearerFormat\"></a>bearerFormat | `string` | `http` (`\"bearer\"`) | A hint to the client to identify how the bearer token is formatted.  Bearer tokens are usually generated by an authorization server, so this information is primarily for documentation purposes.\n<a name=\"securitySchemeFlows\"></a>flows | [OAuth Flows Object](#oauthFlowsObject) | `oauth2` | **REQUIRED**. An object containing configuration information for the flow types supported.\n<a name=\"securitySchemeOpenIdConnectUrl\"></a>openIdConnectUrl | `string` | `openIdConnect` | **REQUIRED**. OpenId Connect URL to discover OAuth2 configuration values. This MUST be in the form of a URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n##### Security Scheme Object Example\n\n###### User/Password Authentication Sample\n\n```json\n{\n  \"type\": \"userPassword\"\n}\n```\n\n```yaml\ntype: userPassword\n```\n\n###### API Key Authentication Sample\n\n```json\n{\n  \"type\": \"apiKey\",\n  \"in\": \"user\"\n}\n```\n\n```yaml\ntype: apiKey,\nin: user\n```\n\n###### X.509 Authentication Sample\n\n```json\n{\n  \"type\": \"X509\"\n}\n```\n\n```yaml\ntype: X509\n```\n\n###### End-to-end Encryption Authentication Sample\n\n```json\n{\n  \"type\": \"symmetricEncryption\"\n}\n```\n\n```yaml\ntype: symmetricEncryption\n```\n\n###### Basic Authentication Sample\n\n```json\n{\n  \"type\": \"http\",\n  \"scheme\": \"basic\"\n}\n```\n\n```yaml\ntype: http\nscheme: basic\n```\n\n###### API Key Sample\n\n```json\n{\n  \"type\": \"httpApiKey\",\n  \"name\": \"api_key\",\n  \"in\": \"header\"\n}\n```\n\n```yaml\ntype: httpApiKey\nname: api_key\nin: header\n```\n\n###### JWT Bearer Sample\n\n```json\n{\n  \"type\": \"http\",\n  \"scheme\": \"bearer\",\n  \"bearerFormat\": \"JWT\"\n}\n```\n\n```yaml\ntype: http\nscheme: bearer\nbearerFormat: JWT\n```\n\n###### Implicit OAuth2 Sample\n\n```json\n{\n  \"type\": \"oauth2\",\n  \"flows\": {\n    \"implicit\": {\n      \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n      \"scopes\": {\n        \"write:pets\": \"modify pets in your account\",\n        \"read:pets\": \"read your pets\"\n      }\n    }\n  }\n}\n```\n\n```yaml\ntype: oauth2\nflows:\n  implicit:\n    authorizationUrl: https://example.com/api/oauth/dialog\n    scopes:\n      write:pets: modify pets in your account\n      read:pets: read your pets\n```\n\n###### SASL Sample\n\n```json\n{\n  \"type\": \"scramSha512\"\n}\n```\n\n```yaml\ntype: scramSha512\n```\n\n#### <a name=\"oauthFlowsObject\"></a>OAuth Flows Object\n\nAllows configuration of the supported OAuth Flows.\n\n##### Fixed Fields\nField Name | Type | Description\n---|:---:|---\n<a name=\"oauthFlowsImplicit\"></a>implicit| [OAuth Flow Object](#oauthFlowObject) | Configuration for the OAuth Implicit flow\n<a name=\"oauthFlowsPassword\"></a>password| [OAuth Flow Object](#oauthFlowObject) | Configuration for the OAuth Resource Owner Protected Credentials flow\n<a name=\"oauthFlowsClientCredentials\"></a>clientCredentials| [OAuth Flow Object](#oauthFlowObject) | Configuration for the OAuth Client Credentials flow.\n<a name=\"oauthFlowsAuthorizationCode\"></a>authorizationCode| [OAuth Flow Object](#oauthFlowObject) | Configuration for the OAuth Authorization Code flow.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n#### <a name=\"oauthFlowObject\"></a>OAuth Flow Object\n\nConfiguration details for a supported OAuth Flow\n\n##### Fixed Fields\nField Name | Type | Applies To | Description\n---|:---:|---|---\n<a name=\"oauthFlowAuthorizationUrl\"></a>authorizationUrl | `string` | `oauth2` (`\"implicit\"`, `\"authorizationCode\"`) | **REQUIRED**. The authorization URL to be used for this flow. This MUST be in the form of a URL.\n<a name=\"oauthFlowTokenUrl\"></a>tokenUrl | `string` | `oauth2` (`\"password\"`, `\"clientCredentials\"`, `\"authorizationCode\"`) | **REQUIRED**. The token URL to be used for this flow. This MUST be in the form of a URL.\n<a name=\"oauthFlowRefreshUrl\"></a>refreshUrl | `string` | `oauth2` | The URL to be used for obtaining refresh tokens. This MUST be in the form of a URL.\n<a name=\"oauthFlowScopes\"></a>scopes | Map[`string`, `string`] | `oauth2` | **REQUIRED**. The available scopes for the OAuth2 security scheme. A map between the scope name and a short description for it.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n##### OAuth Flow Object Examples\n\n```JSON\n{\n  \"type\": \"oauth2\",\n  \"flows\": {\n    \"implicit\": {\n      \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n      \"scopes\": {\n        \"write:pets\": \"modify pets in your account\",\n        \"read:pets\": \"read your pets\"\n      }\n    },\n    \"authorizationCode\": {\n      \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n      \"tokenUrl\": \"https://example.com/api/oauth/token\",\n      \"scopes\": {\n        \"write:pets\": \"modify pets in your account\",\n        \"read:pets\": \"read your pets\"\n      }\n    }\n  }\n}\n```\n\n```YAML\ntype: oauth2\nflows:\n  implicit:\n    authorizationUrl: https://example.com/api/oauth/dialog\n    scopes:\n      write:pets: modify pets in your account\n      read:pets: read your pets\n  authorizationCode:\n    authorizationUrl: https://example.com/api/oauth/dialog\n    tokenUrl: https://example.com/api/oauth/token\n    scopes:\n      write:pets: modify pets in your account\n      read:pets: read your pets\n```\n\n#### <a name=\"securityRequirementObject\"></a>Security Requirement Object\n\nLists the required security schemes to execute this operation.\nThe name used for each property MUST correspond to a security scheme declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject).\n\nWhen a list of Security Requirement Objects is defined on a [Server object](#serverObject), only one of the Security Requirement Objects in the list needs to be satisfied to authorize the connection.\n\n##### Patterned Fields\n\nField Pattern | Type | Description\n---|:---:|---\n<a name=\"securityRequirementsName\"></a>{name} | [`string`] | Each name MUST correspond to a security scheme which is declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject). If the security scheme is of type `\"oauth2\"` or `\"openIdConnect\"`, then the value is a list of scope names. Provide scopes that are required to establish successful connection with the server. If scopes are not needed, the list can be empty. For other security scheme types, the array MUST be empty.\n\n##### Security Requirement Object Examples\n\n###### User/Password Security Requirement\n\n```json\n{\n  \"user_pass\": []\n}\n```\n\n```yaml\nuser_pass: []\n```\n\n###### API Key Security Requirement\n\n```json\n{\n  \"api_key\": []\n}\n```\n\n```yaml\napi_key: []\n```\n\n###### OAuth2 Security Requirement\n\n```json\n{\n  \"petstore_auth\": [\n    \"write:pets\",\n    \"read:pets\"\n  ]\n}\n```\n\n```yaml\npetstore_auth:\n- write:pets\n- read:pets\n```\n\n### <a name=\"correlationIdObject\"></a>Correlation ID Object\n\nAn object that specifies an identifier at design time that can used for message tracing and correlation. \n\nFor specifying and computing the location of a Correlation ID, a [runtime expression](#runtimeExpression) is used.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---|---\ndescription | `string` | An optional description of the identifier. [CommonMark syntax](https://spec.commonmark.org/) can be used for rich text representation.\nlocation | `string` | **REQUIRED.** A [runtime expression](#runtimeExpression) that specifies the location of the correlation ID.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Examples\n\n```json\n{\n  \"description\": \"Default Correlation ID\",\n  \"location\": \"$message.header#/correlationId\"\n}\n```\n\n```yaml\ndescription: Default Correlation ID\nlocation: $message.header#/correlationId\n```\n\n### <a name=\"runtimeExpression\"></a>Runtime Expression\n\nA runtime expression allows values to be defined based on information that will be available within the message.\nThis mechanism is used by [Correlation ID Object](#correlationIdObject).\n\nThe runtime expression is defined by the following [ABNF](https://tools.ietf.org/html/rfc5234) syntax:\n\n```\n      expression = ( \"$message\" \".\" source )\n      source = ( header-reference | payload-reference )\n      header-reference = \"header\" [\"#\" fragment]\n      payload-reference = \"payload\" [\"#\" fragment]\n      fragment = a JSON Pointer [RFC 6901](https://tools.ietf.org/html/rfc6901)\n```\n\nThe table below provides examples of runtime expressions and examples of their use in a value:\n\n##### <a name=\"runtimeExpressionExamples\"></a>Examples\n\nSource Location | Example expression  | Notes\n---|:---|:---|\nMessage Header Property | `$message.header#/MQMD/CorrelId` | Correlation ID is set using the `CorrelId` value from the `MQMD` header.\nMessage Payload Property | `$message.payload#/messageId` | Correlation ID is set using the `messageId` value from the message payload.\n\nRuntime expressions preserve the type of the referenced value.\n\n### <a name=\"specificationExtensions\"></a>Specification Extensions\n\nWhile the AsyncAPI Specification tries to accommodate most use cases, additional data can be added to extend the specification at certain points.\n\nThe extensions properties are implemented as patterned fields that are always prefixed by `\"x-\"`.\n\nField Pattern | Type | Description\n---|:---:|---\n<a name=\"infoExtensions\"></a>`^x-[\\w\\d\\-\\_]+$` | Any | Allows extensions to the AsyncAPI Schema. The field name MUST begin with `x-`, for example, `x-internal-id`. The value can be `null`, a primitive, an array or an object. Can have any valid JSON format value.\n\nThe extensions may or may not be supported by the available tooling, but those may be extended as well to add requested support (if tools are internal or open-sourced).\n\n### <a name=\"dataTypeFormat\"></a>Data Type Formats\n\nPrimitives have an optional modifier property: `format`.\nThe AsyncAPI specification uses several known formats to more finely define the data type being used.\nHowever, the `format` property is an open `string`-valued property, and can have any value to support documentation needs.\nFormats such as `\"email\"`, `\"uuid\"`, etc., can be used even though they are not defined by this specification.\nTypes that are not accompanied by a `format` property follow their definition from the JSON Schema.\nTools that do not recognize a specific `format` MAY default back to the `type` alone, as if the `format` was not specified.\n\nThe formats defined by the AsyncAPI Specification are:\n\n\nCommon Name | `type` | [`format`](#dataTypeFormat) | Comments\n----------- | ------ | -------- | --------\ninteger | `integer` | `int32` | signed 32 bits\nlong | `integer` | `int64` | signed 64 bits\nfloat | `number` | `float` | |\ndouble | `number` | `double` | |\nstring | `string` | | |\nbyte | `string` | `byte` | base64 encoded characters\nbinary | `string` | `binary` | any sequence of octets\nboolean | `boolean` | | |\ndate | `string` | `date` | As defined by `full-date` - [RFC3339](https://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14)\ndateTime | `string` | `date-time` | As defined by `date-time` - [RFC3339](https://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14)\npassword | `string` | `password` | Used to hint UIs the input needs to be obscured.\n\n---\n\n<DocsButton\n  suggestions={[\n    {\n      href: '/docs/specifications/v2.2.0',\n      title: 'Release 2.2.0',\n      type:'back',\n    },\n    {\n      href: '/docs/specifications/v2.0.0',\n      title: 'Release 2.0.0',\n      type:'next',\n    }\n  ]}\n/>",
              "toc": [
                {
                  "content": "AsyncAPI Specification",
                  "slug": "asyncapi-specification",
                  "lvl": 1,
                  "i": 0,
                  "seen": 0
                },
                {
                  "content": "Disclaimer",
                  "slug": "disclaimer",
                  "lvl": 4,
                  "i": 1,
                  "seen": 0
                },
                {
                  "content": "Version 2.1.0",
                  "slug": "version-210",
                  "lvl": 4,
                  "i": 2,
                  "seen": 0
                },
                {
                  "content": "Introduction",
                  "slug": "introduction",
                  "lvl": 2,
                  "i": 3,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitions\"></a>Definitions",
                  "slug": "definitions",
                  "lvl": 2,
                  "i": 4,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsApplication\"></a>Application",
                  "slug": "definitionsApplication",
                  "lvl": 4,
                  "i": 5,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsProducer\"></a>Producer",
                  "slug": "definitionsProducer",
                  "lvl": 4,
                  "i": 6,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsConsumer\"></a>Consumer",
                  "slug": "definitionsConsumer",
                  "lvl": 4,
                  "i": 7,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsMessage\"></a>Message",
                  "slug": "definitionsMessage",
                  "lvl": 4,
                  "i": 8,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsChannel\"></a>Channel",
                  "slug": "definitionsChannel",
                  "lvl": 4,
                  "i": 9,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsProtocol\"></a>Protocol",
                  "slug": "definitionsProtocol",
                  "lvl": 4,
                  "i": 10,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsBindings\"></a>Bindings",
                  "slug": "definitionsBindings",
                  "lvl": 4,
                  "i": 11,
                  "seen": 0
                },
                {
                  "content": "<a name=\"specification\"></a>Specification",
                  "slug": "specification",
                  "lvl": 2,
                  "i": 12,
                  "seen": 0
                },
                {
                  "content": "<a name=\"format\"></a>Format",
                  "slug": "format",
                  "lvl": 3,
                  "i": 13,
                  "seen": 0
                },
                {
                  "content": "<a name=\"file-structure\"></a>File Structure",
                  "slug": "file-structure",
                  "lvl": 3,
                  "i": 14,
                  "seen": 0
                },
                {
                  "content": "<a name=\"schema\"></a>Schema",
                  "slug": "schema",
                  "lvl": 3,
                  "i": 15,
                  "seen": 0
                },
                {
                  "content": "<a name=\"A2SObject\"></a>AsyncAPI Object",
                  "slug": "A2SObject",
                  "lvl": 4,
                  "i": 16,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 17,
                  "seen": 0
                },
                {
                  "content": "<a name=\"A2SVersionString\"></a>AsyncAPI Version String",
                  "slug": "A2SVersionString",
                  "lvl": 4,
                  "i": 18,
                  "seen": 0
                },
                {
                  "content": "<a name=\"A2SIdString\"></a>Identifier",
                  "slug": "A2SIdString",
                  "lvl": 4,
                  "i": 19,
                  "seen": 0
                },
                {
                  "content": "Examples",
                  "slug": "examples",
                  "lvl": 6,
                  "i": 20,
                  "seen": 0
                },
                {
                  "content": "<a name=\"infoObject\"></a>Info Object",
                  "slug": "infoObject",
                  "lvl": 4,
                  "i": 21,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 22,
                  "seen": 1
                },
                {
                  "content": "Info Object Example:",
                  "slug": "info-object-example",
                  "lvl": 5,
                  "i": 23,
                  "seen": 0
                },
                {
                  "content": "<a name=\"contactObject\"></a>Contact Object",
                  "slug": "contactObject",
                  "lvl": 4,
                  "i": 24,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 25,
                  "seen": 2
                },
                {
                  "content": "Contact Object Example:",
                  "slug": "contact-object-example",
                  "lvl": 5,
                  "i": 26,
                  "seen": 0
                },
                {
                  "content": "<a name=\"licenseObject\"></a>License Object",
                  "slug": "licenseObject",
                  "lvl": 4,
                  "i": 27,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 28,
                  "seen": 3
                },
                {
                  "content": "License Object Example:",
                  "slug": "license-object-example",
                  "lvl": 5,
                  "i": 29,
                  "seen": 0
                },
                {
                  "content": "<a name=\"serversObject\"></a>Servers Object",
                  "slug": "serversObject",
                  "lvl": 4,
                  "i": 30,
                  "seen": 0
                },
                {
                  "content": "Patterned Fields",
                  "slug": "patterned-fields",
                  "lvl": 5,
                  "i": 31,
                  "seen": 0
                },
                {
                  "content": "Servers Object Example",
                  "slug": "servers-object-example",
                  "lvl": 5,
                  "i": 32,
                  "seen": 0
                },
                {
                  "content": "<a name=\"serverObject\"></a>Server Object",
                  "slug": "serverObject",
                  "lvl": 4,
                  "i": 33,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 34,
                  "seen": 4
                },
                {
                  "content": "Server Object Example",
                  "slug": "server-object-example",
                  "lvl": 5,
                  "i": 35,
                  "seen": 0
                },
                {
                  "content": "<a name=\"serverVariableObject\"></a>Server Variable Object",
                  "slug": "serverVariableObject",
                  "lvl": 4,
                  "i": 36,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 37,
                  "seen": 5
                },
                {
                  "content": "<a name=\"defaultContentTypeString\"></a>Default Content Type",
                  "slug": "defaultContentTypeString",
                  "lvl": 4,
                  "i": 38,
                  "seen": 0
                },
                {
                  "content": "Default Content Type Example",
                  "slug": "default-content-type-example",
                  "lvl": 5,
                  "i": 39,
                  "seen": 0
                },
                {
                  "content": "<a name=\"channelsObject\"></a>Channels Object",
                  "slug": "channelsObject",
                  "lvl": 4,
                  "i": 40,
                  "seen": 0
                },
                {
                  "content": "Patterned Fields",
                  "slug": "patterned-fields",
                  "lvl": 5,
                  "i": 41,
                  "seen": 1
                },
                {
                  "content": "Channels Object Example",
                  "slug": "channels-object-example",
                  "lvl": 5,
                  "i": 42,
                  "seen": 0
                },
                {
                  "content": "<a name=\"channelItemObject\"></a>Channel Item Object",
                  "slug": "channelItemObject",
                  "lvl": 4,
                  "i": 43,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 44,
                  "seen": 6
                },
                {
                  "content": "Channel Item Object Example",
                  "slug": "channel-item-object-example",
                  "lvl": 5,
                  "i": 45,
                  "seen": 0
                },
                {
                  "content": "<a name=\"operationObject\"></a>Operation Object",
                  "slug": "operationObject",
                  "lvl": 4,
                  "i": 46,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 47,
                  "seen": 7
                },
                {
                  "content": "Operation Object Example",
                  "slug": "operation-object-example",
                  "lvl": 5,
                  "i": 48,
                  "seen": 0
                },
                {
                  "content": "<a name=\"operationTraitObject\"></a>Operation Trait Object",
                  "slug": "operationTraitObject",
                  "lvl": 4,
                  "i": 49,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 50,
                  "seen": 8
                },
                {
                  "content": "Operation Trait Object Example",
                  "slug": "operation-trait-object-example",
                  "lvl": 5,
                  "i": 51,
                  "seen": 0
                },
                {
                  "content": "<a name=\"parametersObject\"></a>Parameters Object",
                  "slug": "parametersObject",
                  "lvl": 4,
                  "i": 52,
                  "seen": 0
                },
                {
                  "content": "Patterned Fields",
                  "slug": "patterned-fields",
                  "lvl": 5,
                  "i": 53,
                  "seen": 2
                },
                {
                  "content": "Parameters Object Example",
                  "slug": "parameters-object-example",
                  "lvl": 5,
                  "i": 54,
                  "seen": 0
                },
                {
                  "content": "<a name=\"parameterObject\"></a>Parameter Object",
                  "slug": "parameterObject",
                  "lvl": 4,
                  "i": 55,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 56,
                  "seen": 9
                },
                {
                  "content": "Parameter Object Example",
                  "slug": "parameter-object-example",
                  "lvl": 5,
                  "i": 57,
                  "seen": 0
                },
                {
                  "content": "<a name=\"serverBindingsObject\"></a>Server Bindings Object",
                  "slug": "serverBindingsObject",
                  "lvl": 4,
                  "i": 58,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 59,
                  "seen": 10
                },
                {
                  "content": "<a name=\"channelBindingsObject\"></a>Channel Bindings Object",
                  "slug": "channelBindingsObject",
                  "lvl": 4,
                  "i": 60,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 61,
                  "seen": 11
                },
                {
                  "content": "<a name=\"operationBindingsObject\"></a>Operation Bindings Object",
                  "slug": "operationBindingsObject",
                  "lvl": 4,
                  "i": 62,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 63,
                  "seen": 12
                },
                {
                  "content": "<a name=\"messageBindingsObject\"></a>Message Bindings Object",
                  "slug": "messageBindingsObject",
                  "lvl": 4,
                  "i": 64,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 65,
                  "seen": 13
                },
                {
                  "content": "<a name=\"messageObject\"></a>Message Object",
                  "slug": "messageObject",
                  "lvl": 4,
                  "i": 66,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 67,
                  "seen": 14
                },
                {
                  "content": "<a name=\"messageObjectSchemaFormatTable\"></a>Schema formats table",
                  "slug": "messageObjectSchemaFormatTable",
                  "lvl": 5,
                  "i": 68,
                  "seen": 0
                },
                {
                  "content": "Message Object Example",
                  "slug": "message-object-example",
                  "lvl": 5,
                  "i": 69,
                  "seen": 0
                },
                {
                  "content": "<a name=\"messageTraitObject\"></a>Message Trait Object",
                  "slug": "messageTraitObject",
                  "lvl": 4,
                  "i": 70,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 71,
                  "seen": 15
                },
                {
                  "content": "Message Trait Object Example",
                  "slug": "message-trait-object-example",
                  "lvl": 5,
                  "i": 72,
                  "seen": 0
                },
                {
                  "content": "<a name=\"tagsObject\"></a>Tags Object",
                  "slug": "tagsObject",
                  "lvl": 4,
                  "i": 73,
                  "seen": 0
                },
                {
                  "content": "<a name=\"tagObject\"></a>Tag Object",
                  "slug": "tagObject",
                  "lvl": 4,
                  "i": 74,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 75,
                  "seen": 16
                },
                {
                  "content": "Tag Object Example",
                  "slug": "tag-object-example",
                  "lvl": 5,
                  "i": 76,
                  "seen": 0
                },
                {
                  "content": "<a name=\"externalDocumentationObject\"></a>External Documentation Object",
                  "slug": "externalDocumentationObject",
                  "lvl": 4,
                  "i": 77,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 78,
                  "seen": 17
                },
                {
                  "content": "External Documentation Object Example",
                  "slug": "external-documentation-object-example",
                  "lvl": 5,
                  "i": 79,
                  "seen": 0
                },
                {
                  "content": "<a name=\"referenceObject\"></a>Reference Object",
                  "slug": "referenceObject",
                  "lvl": 4,
                  "i": 80,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 81,
                  "seen": 18
                },
                {
                  "content": "Reference Object Example",
                  "slug": "reference-object-example",
                  "lvl": 5,
                  "i": 82,
                  "seen": 0
                },
                {
                  "content": "<a name=\"componentsObject\"></a>Components Object",
                  "slug": "componentsObject",
                  "lvl": 4,
                  "i": 83,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 84,
                  "seen": 19
                },
                {
                  "content": "Components Object Example",
                  "slug": "components-object-example",
                  "lvl": 5,
                  "i": 85,
                  "seen": 0
                },
                {
                  "content": "<a name=\"schemaObject\"></a>Schema Object",
                  "slug": "schemaObject",
                  "lvl": 4,
                  "i": 86,
                  "seen": 0
                },
                {
                  "content": "Properties",
                  "slug": "properties",
                  "lvl": 5,
                  "i": 87,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 88,
                  "seen": 20
                },
                {
                  "content": "<a name=\"schemaComposition\"></a>Composition and Inheritance (Polymorphism)",
                  "slug": "schemaComposition",
                  "lvl": 6,
                  "i": 89,
                  "seen": 0
                },
                {
                  "content": "Schema Object Examples",
                  "slug": "schema-object-examples",
                  "lvl": 5,
                  "i": 90,
                  "seen": 0
                },
                {
                  "content": "Primitive Sample",
                  "slug": "primitive-sample",
                  "lvl": 6,
                  "i": 91,
                  "seen": 0
                },
                {
                  "content": "Simple Model",
                  "slug": "simple-model",
                  "lvl": 6,
                  "i": 92,
                  "seen": 0
                },
                {
                  "content": "Model with Map/Dictionary Properties",
                  "slug": "model-with-mapdictionary-properties",
                  "lvl": 6,
                  "i": 93,
                  "seen": 0
                },
                {
                  "content": "Model with Example",
                  "slug": "model-with-example",
                  "lvl": 6,
                  "i": 94,
                  "seen": 0
                },
                {
                  "content": "Model with Boolean Schemas",
                  "slug": "model-with-boolean-schemas",
                  "lvl": 6,
                  "i": 95,
                  "seen": 0
                },
                {
                  "content": "Models with Composition",
                  "slug": "models-with-composition",
                  "lvl": 6,
                  "i": 96,
                  "seen": 0
                },
                {
                  "content": "Models with Polymorphism Support",
                  "slug": "models-with-polymorphism-support",
                  "lvl": 6,
                  "i": 97,
                  "seen": 0
                },
                {
                  "content": "<a name=\"securitySchemeObject\"></a>Security Scheme Object",
                  "slug": "securitySchemeObject",
                  "lvl": 4,
                  "i": 98,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 99,
                  "seen": 21
                },
                {
                  "content": "Security Scheme Object Example",
                  "slug": "security-scheme-object-example",
                  "lvl": 5,
                  "i": 100,
                  "seen": 0
                },
                {
                  "content": "User/Password Authentication Sample",
                  "slug": "userpassword-authentication-sample",
                  "lvl": 6,
                  "i": 101,
                  "seen": 0
                },
                {
                  "content": "API Key Authentication Sample",
                  "slug": "api-key-authentication-sample",
                  "lvl": 6,
                  "i": 102,
                  "seen": 0
                },
                {
                  "content": "X.509 Authentication Sample",
                  "slug": "x509-authentication-sample",
                  "lvl": 6,
                  "i": 103,
                  "seen": 0
                },
                {
                  "content": "End-to-end Encryption Authentication Sample",
                  "slug": "end-to-end-encryption-authentication-sample",
                  "lvl": 6,
                  "i": 104,
                  "seen": 0
                },
                {
                  "content": "Basic Authentication Sample",
                  "slug": "basic-authentication-sample",
                  "lvl": 6,
                  "i": 105,
                  "seen": 0
                },
                {
                  "content": "API Key Sample",
                  "slug": "api-key-sample",
                  "lvl": 6,
                  "i": 106,
                  "seen": 0
                },
                {
                  "content": "JWT Bearer Sample",
                  "slug": "jwt-bearer-sample",
                  "lvl": 6,
                  "i": 107,
                  "seen": 0
                },
                {
                  "content": "Implicit OAuth2 Sample",
                  "slug": "implicit-oauth2-sample",
                  "lvl": 6,
                  "i": 108,
                  "seen": 0
                },
                {
                  "content": "SASL Sample",
                  "slug": "sasl-sample",
                  "lvl": 6,
                  "i": 109,
                  "seen": 0
                },
                {
                  "content": "<a name=\"oauthFlowsObject\"></a>OAuth Flows Object",
                  "slug": "oauthFlowsObject",
                  "lvl": 4,
                  "i": 110,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 111,
                  "seen": 22
                },
                {
                  "content": "<a name=\"oauthFlowObject\"></a>OAuth Flow Object",
                  "slug": "oauthFlowObject",
                  "lvl": 4,
                  "i": 112,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 113,
                  "seen": 23
                },
                {
                  "content": "OAuth Flow Object Examples",
                  "slug": "oauth-flow-object-examples",
                  "lvl": 5,
                  "i": 114,
                  "seen": 0
                },
                {
                  "content": "<a name=\"securityRequirementObject\"></a>Security Requirement Object",
                  "slug": "securityRequirementObject",
                  "lvl": 4,
                  "i": 115,
                  "seen": 0
                },
                {
                  "content": "Patterned Fields",
                  "slug": "patterned-fields",
                  "lvl": 5,
                  "i": 116,
                  "seen": 3
                },
                {
                  "content": "Security Requirement Object Examples",
                  "slug": "security-requirement-object-examples",
                  "lvl": 5,
                  "i": 117,
                  "seen": 0
                },
                {
                  "content": "User/Password Security Requirement",
                  "slug": "userpassword-security-requirement",
                  "lvl": 6,
                  "i": 118,
                  "seen": 0
                },
                {
                  "content": "API Key Security Requirement",
                  "slug": "api-key-security-requirement",
                  "lvl": 6,
                  "i": 119,
                  "seen": 0
                },
                {
                  "content": "OAuth2 Security Requirement",
                  "slug": "oauth2-security-requirement",
                  "lvl": 6,
                  "i": 120,
                  "seen": 0
                },
                {
                  "content": "<a name=\"correlationIdObject\"></a>Correlation ID Object",
                  "slug": "correlationIdObject",
                  "lvl": 3,
                  "i": 121,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 122,
                  "seen": 24
                },
                {
                  "content": "Examples",
                  "slug": "examples",
                  "lvl": 5,
                  "i": 123,
                  "seen": 1
                },
                {
                  "content": "<a name=\"runtimeExpression\"></a>Runtime Expression",
                  "slug": "runtimeExpression",
                  "lvl": 3,
                  "i": 124,
                  "seen": 0
                },
                {
                  "content": "<a name=\"runtimeExpressionExamples\"></a>Examples",
                  "slug": "runtimeExpressionExamples",
                  "lvl": 5,
                  "i": 125,
                  "seen": 0
                },
                {
                  "content": "<a name=\"specificationExtensions\"></a>Specification Extensions",
                  "slug": "specificationExtensions",
                  "lvl": 3,
                  "i": 126,
                  "seen": 0
                },
                {
                  "content": "<a name=\"dataTypeFormat\"></a>Data Type Formats",
                  "slug": "dataTypeFormat",
                  "lvl": 3,
                  "i": 127,
                  "seen": 0
                }
              ],
              "slug": "/docs/reference/specification/v2.1.0",
              "filePath": "pages/docs/reference/specification/v2.1.0.md",
              "sectionTitle": "Specification"
            },
            {
              "meta": {
                "weight": 0,
                "title": "2.0.0"
              },
              "content": "# AsyncAPI Specification\n\n#### Disclaimer\n\nPart of this content has been taken from the great work done by the folks at the [OpenAPI Initiative](https://openapis.org). Mainly because **it's a great work** and we want to keep as much compatibility as possible with the [OpenAPI Specification](https://github.com/OAI/OpenAPI-Specification).\n\n#### Version 2.0.0\n\nThe key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC 2119](http://www.ietf.org/rfc/rfc2119.txt).\n\nThe AsyncAPI Specification is licensed under [The Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0.html).\n\n## Introduction\n\nThe AsyncAPI Specification is a project used to describe and document message-driven APIs in a machine-readable format. It‚Äôs protocol-agnostic, so you can use it for APIs that work over any protocol (e.g., AMQP, MQTT, WebSockets, Kafka, STOMP, HTTP, etc).\n\nThe AsyncAPI Specification defines a set of files required to describe such an API.\nThese files can then be used to create utilities, such as documentation, integration and/or testing tools.\n\nThe file(s) MUST describe the operations an [application](#definitionsApplication) accepts. For instance, consider the following AsyncAPI definition snippet:\n\n```yaml\nuser/signedup:\n  subscribe:\n    $ref: \"#/components/messages/userSignUp\"\n```\n\nIt means that the [application](#definitionsApplication) allows [consumers](#definitionsConsumer) to subscribe to the `user/signedup` [channel](#definitionsChannel) to receive userSignUp [messages](#definitionsMessage).\n\n**The AsyncAPI specification does not assume any kind of software topology, architecture or pattern.** Therefore, a server MAY be a message broker, a web server or any other kind of computer program capable of sending and/or receiving data. However, AsyncAPI offers a mechanism called \"bindings\" that aims to help with more specific information about the protocol and/or the topology.\n\n## <a name=\"definitions\"/>Definitions\n\n#### <a name=\"definitionsApplication\"></a>Application\nAn application is any kind of computer program or a group of them. It MUST be a [producer](#definitionsProducer), a [consumer](#definitionsConsumer) or both. An application MAY be a microservice, IoT device (sensor), mainframe process, etc. An application MAY be written in any number of different programming languages as long as they support the selected [protocol](#definitionsProtocol). An application MUST also use a protocol supported by the server in order to connect and exchange [messages](#definitionsMessage).\n\n#### <a name=\"definitionsProducer\"></a>Producer\nA producer is a type of application, connected to a server, that is creating [messages](#definitionsMessage) and addressing them to [channels](#definitionsChannel). A producer MAY be publishing to multiple channels depending on the server, protocol, and use-case pattern. \n\n#### <a name=\"definitionsConsumer\"></a>Consumer\nA consumer is a type of application, connected to a server via a supported [protocol](#definitionsProtocol), that is consuming [messages](#definitionsMessage) from [channels](#definitionsChannel). A consumer MAY be consuming from multiple channels depending on the server, protocol, and the use-case pattern. \n\n#### <a name=\"definitionsMessage\"></a>Message\nA message is the mechanism by which information is exchanged via a channel between servers and applications. A message MUST contain a payload and MAY also contain headers. The headers MAY be subdivided into [protocol](#definitionsProtocol)-defined headers and header properties defined by the application which can act as supporting metadata. The payload contains the data, defined by the application, which MUST be serialized into a format (JSON, XML, Avro, binary, etc.). Since a message is a generic mechanism, it can support multiple interaction patterns such as event, command, request, or response. \n\n#### <a name=\"definitionsChannel\"></a>Channel\nA channel is an addressable component, made available by the server, for the organization of [messages](#definitionsMessage). [Producer](#definitionsProducer) applications send messages to channels and [consumer](#definitionsConsumer) applications consume messages from channels. Servers MAY support many channel instances, allowing messages with different content to be addressed to different channels. Depending on the server implementation, the channel MAY be included in the message via protocol-defined headers.\n\n#### <a name=\"definitionsProtocol\"></a>Protocol\nA protocol is the mechanism (wireline protocol OR API) by which [messages](#definitionsMessage) are exchanged between the application and the [channel](#definitionsChannel). Example protocol include, but are not limited to, AMQP, HTTP, JMS, Kafka, MQTT, STOMP, WebSocket.  \n\n## <a name=\"specification\"></a>Specification\n\n### <a name=\"format\"></a>Format\n\nThe files describing the message-driven API in accordance with the AsyncAPI Specification are represented as JSON objects and conform to the JSON standards.\nYAML, being a superset of JSON, can be used as well to represent a A2S (AsyncAPI Specification) file.\n\nFor example, if a field is said to have an array value, the JSON array representation will be used:\n\n```yaml\n{\n   \"field\" : [...]\n}\n```\n\nWhile the API is described using JSON it does not impose a JSON input/output to the API itself.\n\nAll field names in the specification are **case sensitive**.\n\nThe schema exposes two types of fields.\nFixed fields, which have a declared name, and Patterned fields, which declare a regex pattern for the field name.\nPatterned fields can have multiple occurrences as long as each has a unique name.\n\nIn order to preserve the ability to round-trip between YAML and JSON formats, YAML version [1.2](http://www.yaml.org/spec/1.2/spec.html) is recommended along with some additional constraints:\n\n- Tags MUST be limited to those allowed by the [JSON Schema ruleset](http://www.yaml.org/spec/1.2/spec.html#id2803231)\n- Keys used in YAML maps MUST be limited to a scalar string, as defined by the YAML Failsafe schema ruleset\n\n### <a name=\"file-structure\"></a>File Structure\n\nThe A2S representation of the API is made of a single file.\nHowever, parts of the definitions can be split into separate files, at the discretion of the user.\nThis is applicable for `$ref` fields in the specification as follows from the [JSON Schema](https://json-schema.org/understanding-json-schema/structuring.html) definitions.\n\nBy convention, the AsyncAPI Specification (A2S) file is named `asyncapi.json` or `asyncapi.yaml`.\n\n### <a name=\"schema\"></a>Schema\n\n#### <a name=\"A2SObject\"></a>AsyncAPI Object\n\nThis is the root document object for the API specification.\nIt combines resource listing and API declaration together into one document.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"A2SAsyncAPI\"></a>asyncapi | [AsyncAPI Version String](#A2SVersionString) | **Required.** Specifies the AsyncAPI Specification version being used. It can be used by tooling Specifications and clients to interpret the version. The structure shall be `major`.`minor`.`patch`, where `patch` versions _must_ be compatible with the existing `major`.`minor` tooling. Typically patch versions will be introduced to address errors in the documentation, and tooling should typically be compatible with the corresponding `major`.`minor` (1.0.*). Patch versions will correspond to patches of this document.\n<a name=\"A2SId\"></a>id | [Identifier](#A2SIdString) | Identifier of the [application](#definitionsApplication) the AsyncAPI document is defining.\n<a name=\"A2SInfo\"></a>info | [Info Object](#infoObject) | **Required.** Provides metadata about the API. The metadata can be used by the clients if needed.\n<a name=\"A2SServers\"></a>servers | [Servers Object](#serversObject) | Provides connection details of servers.\n<a name=\"A2SChannels\"></a>channels | [Channels Object](#channelsObject) | **Required** The available channels and messages for the API.\n<a name=\"A2SComponents\"></a>components | [Components Object](#componentsObject) | An element to hold various schemas for the specification.\n<a name=\"A2STags\"></a>tags | [Tags Object](#tagsObject) | A list of tags used by the specification with additional metadata. Each tag name in the list MUST be unique.\n<a name=\"A2SExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation.\n\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n#### <a name=\"A2SVersionString\"></a>AsyncAPI Version String\n\nThe version string signifies the version of the AsyncAPI Specification that the document complies to.\nThe format for this string _must_ be `major`.`minor`.`patch`.  The `patch` _may_ be suffixed by a hyphen and extra alphanumeric characters.\n\nA `major`.`minor` shall be used to designate the AsyncAPI Specification version, and will be considered compatible with the AsyncAPI Specification specified by that `major`.`minor` version.\nThe patch version will not be considered by tooling, making no distinction between `1.0.0` and `1.0.1`.\n\nIn subsequent versions of the AsyncAPI Specification, care will be given such that increments of the `minor` version should not interfere with operations of tooling developed to a lower minor version. Thus a hypothetical `1.1.0` specification should be usable with tooling designed for `1.0.0`.\n\n#### <a name=\"A2SIdString\"></a>Identifier\n\nThis field represents a unique universal identifier of the [application](#definitionsApplication) the AsyncAPI document is defining. It must conform to the URI format, according to [RFC3986](http://tools.ietf.org/html/rfc3986).\n\nIt is RECOMMENDED to use a [URN](https://tools.ietf.org/html/rfc8141) to globally and uniquely identify the application during long periods of time, even after it becomes unavailable or ceases to exist.\n\n###### Examples\n\n```json\n{\n  \"id\": \"urn:com:smartylighting:streetlights:server\"\n}\n```\n\n```yaml\nid: 'urn:com:smartylighting:streetlights:server'\n```\n\n```json\n{\n  \"id\": \"https://github.com/smartylighting/streetlights-server\"\n}\n```\n\n```yaml\nid: 'https://github.com/smartylighting/streetlights-server'\n```\n\n#### <a name=\"infoObject\"></a>Info Object\n\nThe object provides metadata about the API.\nThe metadata can be used by the clients if needed.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"infoObjectTitle\"></a>title | `string` | **Required.** The title of the application.\n<a name=\"infoObjectVersion\"></a>version | `string` | **Required** Provides the version of the application API (not to be confused with the specification version).\n<a name=\"infoObjectDescription\"></a>description | `string` | A short description of the application. [CommonMark syntax](http://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"infoObjectTermsOfService\"></a>termsOfService | `string` | A URL to the Terms of Service for the API. MUST be in the format of a URL.\n<a name=\"infoObjectContact\"></a>contact | [Contact Object](#contactObject) | The contact information for the exposed API.\n<a name=\"infoObjectLicense\"></a>license | [License Object](#licenseObject) | The license information for the exposed API.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Info Object Example:\n\n```json\n{\n  \"title\": \"AsyncAPI Sample App\",\n  \"description\": \"This is a sample server.\",\n  \"termsOfService\": \"http://asyncapi.org/terms/\",\n  \"contact\": {\n    \"name\": \"API Support\",\n    \"url\": \"http://www.asyncapi.org/support\",\n    \"email\": \"support@asyncapi.org\"\n  },\n  \"license\": {\n    \"name\": \"Apache 2.0\",\n    \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n  },\n  \"version\": \"1.0.1\"\n}\n```\n\n```yaml\ntitle: AsyncAPI Sample App\ndescription: This is a sample server.\ntermsOfService: http://asyncapi.org/terms/\ncontact:\n  name: API Support\n  url: http://www.asyncapi.org/support\n  email: support@asyncapi.org\nlicense:\n  name: Apache 2.0\n  url: http://www.apache.org/licenses/LICENSE-2.0.html\nversion: 1.0.1\n```\n\n#### <a name=\"contactObject\"></a>Contact Object\n\nContact information for the exposed API.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"contactObjectName\"></a>name | `string` | The identifying name of the contact person/organization.\n<a name=\"contactObjectUrl\"></a>url | `string` | The URL pointing to the contact information. MUST be in the format of a URL.\n<a name=\"contactObjectEmail\"></a>email | `string` | The email address of the contact person/organization. MUST be in the format of an email address.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Contact Object Example:\n\n```json\n{\n  \"name\": \"API Support\",\n  \"url\": \"http://www.example.com/support\",\n  \"email\": \"support@example.com\"\n}\n```\n\n```yaml\nname: API Support\nurl: http://www.example.com/support\nemail: support@example.com\n```\n\n#### <a name=\"licenseObject\"></a>License Object\n\nLicense information for the exposed API.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"licenseObjectName\"></a>name | `string` | **Required.** The license name used for the API.\n<a name=\"licenseObjectUrl\"></a>url | `string` | A URL to the license used for the API. MUST be in the format of a URL.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### License Object Example:\n\n```json\n{\n  \"name\": \"Apache 2.0\",\n  \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n}\n```\n\n```yaml\nname: Apache 2.0\nurl: http://www.apache.org/licenses/LICENSE-2.0.html\n```\n\n#### <a name=\"serversObject\"></a>Servers Object\n\nThe Servers Object is a map of [Server Objects](#serverObject).\n\n##### Patterned Fields\n\nField Pattern | Type | Description\n---|:---:|---\n<a name=\"serversObjectServer\"></a>`^[A-Za-z0-9_\\-]+$` | [Server Object](#serverObject) | The definition of a server this application MAY connect to.\n\n##### Servers Object Example\n\n```json\n{\n  \"production\": {\n    \"url\": \"development.gigantic-server.com\",\n    \"description\": \"Development server\",\n    \"protocol\": \"kafka\",\n    \"protocolVersion\": \"1.0.0\"\n  }\n}\n```\n\n```yaml\nproduction:\n  url: development.gigantic-server.com\n  description: Development server\n  protocol: kafka\n  protocolVersion: '1.0.0'\n```\n\n\n#### <a name=\"serverObject\"></a>Server Object\n\nAn object representing a message broker, a server or any other kind of computer program capable of sending and/or receiving data. This object is used to capture details such as URIs, protocols and security configuration. Variable substitution can be used so that some details, for example usernames and passwords, can be injected by code generation tools.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"serverObjectUrl\"></a>url | `string` | **REQUIRED**. A URL to the target host.  This URL supports Server Variables and MAY be relative, to indicate that the host location is relative to the location where the AsyncAPI document is being served. Variable substitutions will be made when a variable is named in `{`brackets`}`.\n<a name=\"serverObjectProtocol\"></a>protocol | `string` | **REQUIRED**. The protocol this URL supports for connection. Supported protocol include, but are not limited to: `amqp`, `amqps`, `http`, `https`, `jms`, `kafka`, `kafka-secure`, `mqtt`, `secure-mqtt`, `stomp`, `stomps`, `ws`, `wss`.\n<a name=\"serverObjectProtocolVersion\"></a>protocolVersion | `string` | The version of the protocol used for connection. For instance: AMQP `0.9.1`, HTTP `2.0`, Kafka `1.0.0`, etc.\n<a name=\"serverObjectDescription\"></a>description | `string` | An optional string describing the host designated by the URL. [CommonMark syntax](http://spec.commonmark.org/) MAY be used for rich text representation.\n<a name=\"serverObjectVariables\"></a>variables | Map[`string`, [Server Variable Object](#serverVariableObject)] | A map between a variable name and its value.  The value is used for substitution in the server's URL template.\n<a name=\"serverObjectSecurity\"></a>security | [[Security Requirement Object](#securityRequirementObject)] | A declaration of which security mechanisms can be used with this server. The list of values includes alternative security requirement objects that can be used. Only one of the security requirement objects need to be satisfied to authorize a connection or operation.\n<a name=\"serverObjectBindings\"></a>bindings | [Server Bindings Object](#serverBindingsObject) | A free-form map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the server.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n##### Server Object Example\n\nA single server would be described as:\n\n```json\n{\n  \"url\": \"development.gigantic-server.com\",\n  \"description\": \"Development server\",\n  \"protocol\": \"kafka\",\n  \"protocolVersion\": \"1.0.0\"\n}\n```\n\n```yaml\nurl: development.gigantic-server.com\ndescription: Development server\nprotocol: kafka\nprotocolVersion: '1.0.0'\n```\n\nThe following shows how multiple servers can be described, for example, at the AsyncAPI Object's [`servers`](#A2SServers):\n\n```json\n{\n  \"servers\": {\n    \"development\": {\n      \"url\": \"development.gigantic-server.com\",\n      \"description\": \"Development server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\"\n    },\n    \"staging\": {\n      \"url\": \"staging.gigantic-server.com\",\n      \"description\": \"Staging server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\"\n    },\n    \"production\": {\n      \"url\": \"api.gigantic-server.com\",\n      \"description\": \"Production server\",\n      \"protocol\": \"amqp\",\n      \"protocolVersion\": \"0.9.1\"\n    }\n  }\n}\n```\n\n```yaml\nservers:\n  development:\n    url: development.gigantic-server.com\n    description: Development server\n    protocol: amqp\n    protocolVersion: 0.9.1\n  staging:\n    url: staging.gigantic-server.com\n    description: Staging server\n    protocol: amqp\n    protocolVersion: 0.9.1\n  production:\n    url: api.gigantic-server.com\n    description: Production server\n    protocol: amqp\n    protocolVersion: 0.9.1\n```\n\nThe following shows how variables can be used for a server configuration:\n\n```json\n{\n  \"servers\": [\n    {\n      \"url\": \"{username}.gigantic-server.com:{port}/{basePath}\",\n      \"description\": \"The production API server\",\n      \"protocol\": \"secure-mqtt\",\n      \"variables\": {\n        \"username\": {\n          \"default\": \"demo\",\n          \"description\": \"This value is assigned by the service provider, in this example `gigantic-server.com`\"\n        },\n        \"port\": {\n          \"enum\": [\n            \"8883\",\n            \"8884\"\n          ],\n          \"default\": \"8883\"\n        },\n        \"basePath\": {\n          \"default\": \"v2\"\n        }\n      }\n    }\n  ]\n}\n```\n\n```yaml\nservers:\n- url: '{username}.gigantic-server.com:{port}/{basePath}'\n  description: The production API server\n  protocol: secure-mqtt\n  variables:\n    username:\n      # note! no enum here means it is an open value\n      default: demo\n      description: This value is assigned by the service provider, in this example `gigantic-server.com`\n    port:\n      enum:\n        - '8883'\n        - '8884'\n      default: '8883'\n    basePath:\n      # open meaning there is the opportunity to use special base paths as assigned by the provider, default is `v2`\n      default: v2\n```\n\n\n#### <a name=\"serverVariableObject\"></a>Server Variable Object\n\nAn object representing a Server Variable for server URL template substitution.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"serverVariableObjectEnum\"></a>enum | [`string`] | An enumeration of string values to be used if the substitution options are from a limited set.\n<a name=\"serverVariableObjectDefault\"></a>default | `string` | The default value to use for substitution, and to send, if an alternate value is _not_ supplied.\n<a name=\"serverVariableObjectDescription\"></a>description | `string` | An optional description for the server variable. [CommonMark syntax](http://spec.commonmark.org/) MAY be used for rich text representation.\n<a name=\"serverVariableObjectExamples\"></a>examples | [`string`] | An array of examples of the server variable.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n\n\n\n\n#### <a name=\"defaultContentTypeString\"></a>Default Content Type\n\nA string representing the default content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. `application/json`). This value MUST be used by schema parsers when the [contentType](#messageObjectContentType) property is omitted.\n\nIn case a message can't be encoded/decoded using this value, schema parsers MUST use their default content type.\n\n##### Default Content Type Example\n\n```json\n{\n  \"defaultContentType\": \"application/json\"\n}\n```\n\n```yaml\ndefaultContentType: application/json\n```\n\n\n\n\n\n\n#### <a name=\"channelsObject\"></a>Channels Object\n\nHolds the relative paths to the individual channel and their operations. Channel paths are relative to servers.\n\nChannels are also known as \"topics\", \"routing keys\", \"event types\" or \"paths\".\n\n##### Patterned Fields\n\nField Pattern | Type | Description\n---|:---:|---\n<a name=\"channelsObjectChannel\"></a>{channel} | [Channel Item Object](#channelItemObject) | A relative path to an individual channel. The field name MUST be in the form of a [RFC 6570 URI template](https://tools.ietf.org/html/rfc6570). Query parameters and fragments SHALL NOT be used, instead use [bindings](#channelBindingsObject) to define them.\n\n##### Channels Object Example\n\n```json\n{\n  \"user/signedup\": {\n    \"subscribe\": {\n      \"$ref\": \"#/components/messages/userSignedUp\"\n    }\n  }\n}\n```\n\n```yaml\nuser/signedup:\n  subscribe:\n    $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n#### <a name=\"channelItemObject\"></a>Channel Item Object\n\nDescribes the operations available on a single channel.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"channelItemObjectRef\"></a>$ref | `string` | Allows for an external definition of this channel item. The referenced structure MUST be in the format of a [Channel Item Object](#channelItemObject). If there are conflicts between the referenced definition and this Channel Item's definition, the behavior is *undefined*.\n<a name=\"channelItemObjectDescription\"></a>description | `string` | An optional description of this channel item. [CommonMark syntax](http://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"channelItemObjectSubscribe\"></a>subscribe | [Operation Object](#operationObject) | A definition of the SUBSCRIBE operation.\n<a name=\"channelItemObjectPublish\"></a>publish | [Operation Object](#operationObject) | A definition of the PUBLISH operation.\n<a name=\"channelItemObjectParameters\"></a>parameters | [Parameters Object](#parametersObject) | A map of the parameters included in the channel name. It SHOULD be present only when using channels with expressions (as defined by [RFC 6570 section 2.2](https://tools.ietf.org/html/rfc6570#section-2.2)).\n<a name=\"channelItemObjectBindings\"></a>bindings | [Channel Bindings Object](#channelBindingsObject) | A free-form map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the channel.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Channel Item Object Example\n\n```json\n{\n  \"description\": \"This channel is used to exchange messages about users signing up\",\n  \"subscribe\": {\n    \"summary\": \"A user signed up.\",\n    \"message\": {\n      \"description\": \"A longer description of the message\",\n      \"payload\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"user\": {\n            \"$ref\": \"#/components/schemas/user\"\n          },\n          \"signup\": {\n            \"$ref\": \"#/components/schemas/signup\"\n          }\n        }\n      }\n    }\n  },\n  \"bindings\": {\n    \"amqp\": {\n      \"is\": \"queue\",\n      \"queue\": {\n        \"exclusive\": true\n      }\n    }\n  }\n}\n```\n\n```yaml\ndescription: This channel is used to exchange messages about users signing up\nsubscribe:\n  summary: A user signed up.\n  message:\n    description: A longer description of the message\n    payload:\n      type: object\n      properties:\n        user:\n          $ref: \"#/components/schemas/user\"\n        signup:\nbindings:\n  amqp:\n    is: queue\n    queue:\n      exclusive: true\n```\n\nUsing `oneOf` to specify multiple messages per operation:\n\n```json\n{\n  \"subscribe\": {\n    \"message\": {\n      \"oneOf\": [\n        { \"$ref\": \"#/components/messages/signup\" },\n        { \"$ref\": \"#/components/messages/login\" }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nsubscribe:\n  message:\n    oneOf:\n      - $ref: '#/components/messages/signup'\n      - $ref: '#/components/messages/login'\n```\n\n\n\n\n\n\n\n#### <a name=\"operationObject\"></a>Operation Object\n\nDescribes a publish or a subscribe operation. This provides a place to document how and why messages are sent and received. For example, an operation might describe a chat application use case where a user sends a text message to a group.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"operationObjectOperationId\"></a>operationId | `string` | Unique string used to identify the operation. The id MUST be unique among all operations described in the API. The operationId value is **case-sensitive**. Tools and libraries MAY use the operationId to uniquely identify an operation, therefore, it is RECOMMENDED to follow common programming naming conventions.\n<a name=\"operationObjectSummary\"></a>summary | `string` | A short summary of what the operation is about.\n<a name=\"operationObjectDescription\"></a>description | `string` | A verbose explanation of the operation. [CommonMark syntax](http://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"operationObjectTags\"></a>tags | [[Tag Object](#tagObject)] | A list of tags for API documentation control. Tags can be used for logical grouping of operations.\n<a name=\"operationObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this operation.\n<a name=\"operationObjectBindings\"></a>bindings | Map[`string`, [Operation Bindings Object](#operationBindingsObject)] | A free-form map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the operation.\n<a name=\"operationObjectTraits\"></a>traits | [[Operation Trait Object](#operationTraitObject)] | A list of traits to apply to the operation object. Traits MUST be merged into the operation object using the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) algorithm in the same order they are defined here.\n<a name=\"operationObjectMessage\"></a>message | [Message Object](#messageObject) | A definition of the message that will be published or received on this channel. `oneOf` is allowed here to specify multiple messages, however, **a message MUST be valid only against one of the referenced message objects.**\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Operation Object Example\n\n```json\n{\n  \"operationId\": \"registerUser\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"message\": {\n    \"headers\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"applicationInstanceId\": {\n          \"description\": \"Unique identifier for a given instance of the publishing application\",\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"payload\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"user\": {\n          \"$ref\": \"#/components/schemas/userCreate\"\n        },\n        \"signup\": {\n          \"$ref\": \"#/components/schemas/signup\"\n        }\n      }\n    }\n  },\n  \"bindings\": {\n    \"amqp\": {\n      \"ack\": false\n    },\n  },\n  \"traits\": [\n    { \"$ref\": \"#/components/operationTraits/kafka\" }\n  ]\n}\n```\n\n```yaml\noperationId: registerUser\nsummary: Action to sign a user up.\ndescription: A longer description\ntags:\n  - name: user\n  - name: signup\n  - name: register\nmessage:\n  headers:\n    type: object\n    properties:\n      applicationInstanceId:\n        description: Unique identifier for a given instance of the publishing application\n        type: string\n  payload:\n    type: object\n    properties:\n      user:\n        $ref: \"#/components/schemas/userCreate\"\n      signup:\n        $ref: \"#/components/schemas/signup\"\nbindings:\n  amqp:\n    ack: false\ntraits:\n  - $ref: \"#/components/operationTraits/kafka\"\n```\n\n\n\n\n#### <a name=\"operationTraitObject\"></a>Operation Trait Object\n\nDescribes a trait that MAY be applied to an [Operation Object](#operationObject). This object MAY contain any property from the [Operation Object](#operationObject), except `message` and `traits`.\n\nIf you're looking to apply traits to a message, see the [Message Trait Object](#messageTraitObject).\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"operationTraitObjectOperationId\"></a>operationId | `string` | Unique string used to identify the operation. The id MUST be unique among all operations described in the API. The operationId value is **case-sensitive**. Tools and libraries MAY use the operationId to uniquely identify an operation, therefore, it is RECOMMENDED to follow common programming naming conventions.\n<a name=\"operationTraitObjectSummary\"></a>summary | `string` | A short summary of what the operation is about.\n<a name=\"operationTraitObjectDescription\"></a>description | `string` | A verbose explanation of the operation. [CommonMark syntax](http://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"operationTraitObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for API documentation control. Tags can be used for logical grouping of operations.\n<a name=\"operationTraitObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this operation.\n<a name=\"operationTraitObjectBindings\"></a>bindings | [Operation Bindings Object](#operationBindingsObject) | A free-form map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the operation.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Operation Trait Object Example\n\n```json\n{\n  \"bindings\": {\n    \"amqp\": {\n      \"ack\": false\n    }\n  }\n}\n```\n\n```yaml\nbindings:\n  amqp:\n    ack: false\n```\n\n\n\n\n#### <a name=\"parametersObject\"></a>Parameters Object\n\nDescribes a map of parameters included in a channel name.\n\nThis map MUST contain all the parameters used in the parent channel name.\n\n##### Patterned Fields\n\nField Pattern | Type | Description\n---|:---:|---\n<a name=\"parametersObjectName\"></a>`^[A-Za-z0-9_\\-]+$` | [Parameter Object](#parameterObject) &#124; [Reference Object](#referenceObject) | The key represents the name of the parameter. It MUST match the parameter name used in the parent channel name.\n\n##### Parameters Object Example\n\n```json\n{\n  \"user/{userId}/signup\": {\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"subscribe\": {\n      \"$ref\": \"#/components/messages/userSignedUp\"\n    }\n  }\n}\n```\n\n```yaml\nuser/{userId}/signup:\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n  subscribe:\n    $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n\n#### <a name=\"parameterObject\"></a>Parameter Object\n\nDescribes a parameter included in a channel name.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"parameterObjectDescription\"></a>description | `string` | A verbose explanation of the parameter. [CommonMark syntax](http://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"parameterObjectSchema\"></a>schema | [Schema Object](#schemaObject) | Definition of the parameter.\nlocation | `string` | A [runtime expression](#runtimeExpression) that specifies the location of the parameter value. Even when a definition for the target field exists, it MUST NOT be used to validate this parameter but, instead, the `schema` property MUST be used.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Parameter Object Example\n\n```json\n{\n  \"user/{userId}/signup\": {\n    \"parameters\": {\n      \"userId\": {\n        \"description\": \"Id of the user.\",\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"location\": \"$message.payload#/user/id\"\n      }\n    },\n    \"subscribe\": {\n      \"$ref\": \"#/components/messages/userSignedUp\"\n    }\n  }\n}\n```\n\n```yaml\nuser/{userId}/signup:\n  parameters:\n    userId:\n      description: Id of the user.\n      schema:\n        type: string\n      location: $message.payload#/user/id\n  subscribe:\n    $ref: \"#/components/messages/userSignedUp\"\n```\n\n\n\n\n#### <a name=\"serverBindingsObject\"></a>Server Bindings Object\n\nMap describing protocol-specific definitions for a server.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"serverBindingsObjectHTTP\"></a>`http` | [HTTP Server Binding](https://github.com/asyncapi/bindings/blob/master/http#server) | Protocol-specific information for an HTTP server.\n<a name=\"serverBindingsObjectWebSockets\"></a>`ws` | [WebSockets Server Binding](https://github.com/asyncapi/bindings/blob/master/websockets#server) | Protocol-specific information for a WebSockets server.\n<a name=\"serverBindingsObjectKafka\"></a>`kafka` | [Kafka Server Binding](https://github.com/asyncapi/bindings/blob/master/kafka#server) | Protocol-specific information for a Kafka server.\n<a name=\"serverBindingsObjectAMQP\"></a>`amqp` | [AMQP Server Binding](https://github.com/asyncapi/bindings/blob/master/amqp#server) | Protocol-specific information for an AMQP 0-9-1 server.\n<a name=\"serverBindingsObjectAMQP1\"></a>`amqp1` | [AMQP 1.0 Server Binding](https://github.com/asyncapi/bindings/blob/master/amqp1#server) | Protocol-specific information for an AMQP 1.0 server.\n<a name=\"serverBindingsObjectMQTT\"></a>`mqtt` | [MQTT Server Binding](https://github.com/asyncapi/bindings/blob/master/mqtt#server) | Protocol-specific information for an MQTT server.\n<a name=\"serverBindingsObjectMQTT5\"></a>`mqtt5` | [MQTT 5 Server Binding](https://github.com/asyncapi/bindings/blob/master/mqtt5#server) | Protocol-specific information for an MQTT 5 server.\n<a name=\"serverBindingsObjectNATS\"></a>`nats` | [NATS Server Binding](https://github.com/asyncapi/bindings/blob/master/nats#server) | Protocol-specific information for a NATS server.\n<a name=\"serverBindingsObjectJMS\"></a>`jms` | [JMS Server Binding](https://github.com/asyncapi/bindings/blob/master/jms#server) | Protocol-specific information for a JMS server.\n<a name=\"serverBindingsObjectSNS\"></a>`sns` | [SNS Server Binding](https://github.com/asyncapi/bindings/blob/master/sns#server) | Protocol-specific information for an SNS server.\n<a name=\"serverBindingsObjectSQS\"></a>`sqs` | [SQS Server Binding](https://github.com/asyncapi/bindings/blob/master/sqs#server) | Protocol-specific information for an SQS server.\n<a name=\"serverBindingsObjectSTOMP\"></a>`stomp` | [STOMP Server Binding](https://github.com/asyncapi/bindings/blob/master/stomp#server) | Protocol-specific information for a STOMP server.\n<a name=\"serverBindingsObjectRedis\"></a>`redis` | [Redis Server Binding](https://github.com/asyncapi/bindings/blob/master/redis#server) | Protocol-specific information for a Redis server.\n\n\n\n\n#### <a name=\"channelBindingsObject\"></a>Channel Bindings Object\n\nMap describing protocol-specific definitions for a channel.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"channelBindingsObjectHTTP\"></a>`http` | [HTTP Channel Binding](https://github.com/asyncapi/bindings/blob/master/http/README.md#channel) | Protocol-specific information for an HTTP channel.\n<a name=\"channelBindingsObjectWebSockets\"></a>`ws` | [WebSockets Channel Binding](https://github.com/asyncapi/bindings/blob/master/websockets/README.md#channel) | Protocol-specific information for a WebSockets channel.\n<a name=\"channelBindingsObjectKafka\"></a>`kafka` | [Kafka Channel Binding](https://github.com/asyncapi/bindings/blob/master/kafka/README.md#channel) | Protocol-specific information for a Kafka channel.\n<a name=\"channelBindingsObjectAMQP\"></a>`amqp` | [AMQP Channel Binding](https://github.com/asyncapi/bindings/blob/master/amqp/README.md#channel) | Protocol-specific information for an AMQP 0-9-1 channel.\n<a name=\"channelBindingsObjectAMQP1\"></a>`amqp1` | [AMQP 1.0 Channel Binding](https://github.com/asyncapi/bindings/blob/master/amqp1/README.md#channel) | Protocol-specific information for an AMQP 1.0 channel.\n<a name=\"channelBindingsObjectMQTT\"></a>`mqtt` | [MQTT Channel Binding](https://github.com/asyncapi/bindings/blob/master/mqtt/README.md#channel) | Protocol-specific information for an MQTT channel.\n<a name=\"channelBindingsObjectMQTT5\"></a>`mqtt5` | [MQTT 5 Channel Binding](https://github.com/asyncapi/bindings/blob/master/mqtt5#channel) | Protocol-specific information for an MQTT 5 channel.\n<a name=\"channelBindingsObjectNATS\"></a>`nats` | [NATS Channel Binding](https://github.com/asyncapi/bindings/blob/master/nats/README.md#channel) | Protocol-specific information for a NATS channel.\n<a name=\"channelBindingsObjectJMS\"></a>`jms` | [JMS Channel Binding](https://github.com/asyncapi/bindings/blob/master/jms/README.md#channel) | Protocol-specific information for a JMS channel.\n<a name=\"channelBindingsObjectSNS\"></a>`sns` | [SNS Channel Binding](https://github.com/asyncapi/bindings/blob/master/sns/README.md#channel) | Protocol-specific information for an SNS channel.\n<a name=\"channelBindingsObjectSQS\"></a>`sqs` | [SQS Channel Binding](https://github.com/asyncapi/bindings/blob/master/sqs/README.md#channel) | Protocol-specific information for an SQS channel.\n<a name=\"channelBindingsObjectSTOMP\"></a>`stomp` | [STOMP Channel Binding](https://github.com/asyncapi/bindings/blob/master/stomp/README.md#channel) | Protocol-specific information for a STOMP channel.\n<a name=\"channelBindingsObjectRedis\"></a>`redis` | [Redis Channel Binding](https://github.com/asyncapi/bindings/blob/master/redis#channel) | Protocol-specific information for a Redis channel.\n\n\n\n\n#### <a name=\"operationBindingsObject\"></a>Operation Bindings Object\n\nMap describing protocol-specific definitions for an operation.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"operationBindingsObjectHTTP\"></a>`http` | [HTTP Operation Binding](https://github.com/asyncapi/bindings/blob/master/http/README.md#operation) | Protocol-specific information for an HTTP operation.\n<a name=\"operationBindingsObjectWebSockets\"></a>`ws` | [WebSockets Operation Binding](https://github.com/asyncapi/bindings/blob/master/websockets/README.md#operation) | Protocol-specific information for a WebSockets operation.\n<a name=\"operationBindingsObjectKafka\"></a>`kafka` | [Kafka Operation Binding](https://github.com/asyncapi/bindings/blob/master/kafka/README.md#operation) | Protocol-specific information for a Kafka operation.\n<a name=\"operationBindingsObjectAMQP\"></a>`amqp` | [AMQP Operation Binding](https://github.com/asyncapi/bindings/blob/master/amqp/README.md#operation) | Protocol-specific information for an AMQP 0-9-1 operation.\n<a name=\"operationBindingsObjectAMQP1\"></a>`amqp1` | [AMQP 1.0 Operation Binding](https://github.com/asyncapi/bindings/blob/master/amqp1/README.md#operation) | Protocol-specific information for an AMQP 1.0 operation.\n<a name=\"operationBindingsObjectMQTT\"></a>`mqtt` | [MQTT Operation Binding](https://github.com/asyncapi/bindings/blob/master/mqtt/README.md#operation) | Protocol-specific information for an MQTT operation.\n<a name=\"operationBindingsObjectMQTT5\"></a>`mqtt5` | [MQTT 5 Operation Binding](https://github.com/asyncapi/bindings/blob/master/mqtt5/README.md#operation) | Protocol-specific information for an MQTT 5 operation.\n<a name=\"operationBindingsObjectNATS\"></a>`nats` | [NATS Operation Binding](https://github.com/asyncapi/bindings/blob/master/nats/README.md#operation) | Protocol-specific information for a NATS operation.\n<a name=\"operationBindingsObjectJMS\"></a>`jms` | [JMS Operation Binding](https://github.com/asyncapi/bindings/blob/master/jms/README.md#operation) | Protocol-specific information for a JMS operation.\n<a name=\"operationBindingsObjectSNS\"></a>`sns` | [SNS Operation Binding](https://github.com/asyncapi/bindings/blob/master/sns/README.md#operation) | Protocol-specific information for an SNS operation.\n<a name=\"operationBindingsObjectSQS\"></a>`sqs` | [SQS Operation Binding](https://github.com/asyncapi/bindings/blob/master/sqs/README.md#operation) | Protocol-specific information for an SQS operation.\n<a name=\"operationBindingsObjectSTOMP\"></a>`stomp` | [STOMP Operation Binding](https://github.com/asyncapi/bindings/blob/master/stomp/README.md#operation) | Protocol-specific information for a STOMP operation.\n<a name=\"operationBindingsObjectRedis\"></a>`redis` | [Redis Operation Binding](https://github.com/asyncapi/bindings/blob/master/redis#operation) | Protocol-specific information for a Redis operation.\n\n\n\n\n\n\n#### <a name=\"messageBindingsObject\"></a>Message Bindings Object\n\nMap describing protocol-specific definitions for a message.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"messageBindingsObjectHTTP\"></a>`http` | [HTTP Message Binding](https://github.com/asyncapi/bindings/blob/master/http/README.md#message) | Protocol-specific information for an HTTP message, i.e., a request or a response.\n<a name=\"messageBindingsObjectWebSockets\"></a>`ws` | [WebSockets Message Binding](https://github.com/asyncapi/bindings/blob/master/websockets/README.md#message) | Protocol-specific information for a WebSockets message.\n<a name=\"messageBindingsObjectKafka\"></a>`kafka` | [Kafka Message Binding](https://github.com/asyncapi/bindings/blob/master/kafka/README.md#message) | Protocol-specific information for a Kafka message.\n<a name=\"messageBindingsObjectAMQP\"></a>`amqp` | [AMQP Message Binding](https://github.com/asyncapi/bindings/blob/master/amqp/README.md#message) | Protocol-specific information for an AMQP 0-9-1 message.\n<a name=\"messageBindingsObjectAMQP1\"></a>`amqp1` | [AMQP 1.0 Message Binding](https://github.com/asyncapi/bindings/blob/master/amqp1/README.md#message) | Protocol-specific information for an AMQP 1.0 message.\n<a name=\"messageBindingsObjectMQTT\"></a>`mqtt` | [MQTT Message Binding](https://github.com/asyncapi/bindings/blob/master/mqtt/README.md#message) | Protocol-specific information for an MQTT message.\n<a name=\"messageBindingsObjectMQTT5\"></a>`mqtt5` | [MQTT 5 Message Binding](https://github.com/asyncapi/bindings/blob/master/mqtt5/README.md#message) | Protocol-specific information for an MQTT 5 message.\n<a name=\"messageBindingsObjectNATS\"></a>`nats` | [NATS Message Binding](https://github.com/asyncapi/bindings/blob/master/nats/README.md#message) | Protocol-specific information for a NATS message.\n<a name=\"messageBindingsObjectJMS\"></a>`jms` | [JMS Message Binding](https://github.com/asyncapi/bindings/blob/master/jms/README.md#message) | Protocol-specific information for a JMS message.\n<a name=\"messageBindingsObjectSNS\"></a>`sns` | [SNS Message Binding](https://github.com/asyncapi/bindings/blob/master/sns/README.md#message) | Protocol-specific information for an SNS message.\n<a name=\"messageBindingsObjectSQS\"></a>`sqs` | [SQS Message Binding](https://github.com/asyncapi/bindings/blob/master/sqs/README.md#message) | Protocol-specific information for an SQS message.\n<a name=\"messageBindingsObjectSTOMP\"></a>`stomp` | [STOMP Message Binding](https://github.com/asyncapi/bindings/blob/master/stomp/README.md#message) | Protocol-specific information for a STOMP message.\n<a name=\"messageBindingsObjectRedis\"></a>`redis` | [Redis Message Binding](https://github.com/asyncapi/bindings/blob/master/redis#message) | Protocol-specific information for a Redis message.\n\n\n\n\n\n\n\n\n\n#### <a name=\"messageObject\"></a>Message Object\n\nDescribes a message received on a given channel and operation.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"messageObjectHeaders\"></a>headers | [Schema Object](#schemaObject) &#124; [Reference Object](#referenceObject) | Schema definition of the application headers. Schema MUST be of type \"object\". It **MUST NOT** define the protocol headers.\n<a name=\"messageObjectPayload\"></a>payload | `any` | Definition of the message payload. It can be of any type but defaults to [Schema object](#schemaObject).\n<a name=\"messageObjectCorrelationId\"></a>correlationId | [Correlation ID Object](#correlationIdObject) &#124; [Reference Object](#referenceObject) | Definition of the correlation ID used for message tracing or matching.\n<a name=\"messageObjectSchemaFormat\"></a>schemaFormat | `string` | A string containing the name of the schema format used to define the message payload. If omitted, implementations should parse the payload as a [Schema object](#schemaObject). Check out the [supported schema formats table](#messageObjectSchemaFormatTable) for more information. Custom values are allowed but their implementation is OPTIONAL. A custom value MUST NOT refer to one of the schema formats listed in the [table](#messageObjectSchemaFormatTable).\n<a name=\"messageObjectContentType\"></a>contentType | `string` | The content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. `application/json`). When omitted, the value MUST be the one specified on the [defaultContentType](#defaultContentTypeString) field.\n<a name=\"messageObjectName\"></a>name | `string` | A machine-friendly name for the message.\n<a name=\"messageObjectTitle\"></a>title | `string` | A human-friendly title for the message.\n<a name=\"messageObjectSummary\"></a>summary | `string` | A short summary of what the message is about.\n<a name=\"messageObjectDescription\"></a>description | `string` | A verbose explanation of the message. [CommonMark syntax](http://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"messageObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for API documentation control. Tags can be used for logical grouping of messages.\n<a name=\"messageObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this message.\n<a name=\"messageObjectBindings\"></a>bindings | [Message Bindings Object](#messageBindingsObject) | A free-form map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the message.\n<a name=\"messageObjectExamples\"></a>examples | [Map[`string`, `any`]] | An array with examples of valid message objects.\n<a name=\"messageObjectTraits\"></a>traits | [[Message Trait Object](#messageTraitObject)] | A list of traits to apply to the message object. Traits MUST be merged into the message object using the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) algorithm in the same order they are defined here. The resulting object MUST be a valid [Message Object](#messageObject).\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### <a name=\"messageObjectSchemaFormatTable\"></a>Schema formats table\n\nThe following table contains a set of values that every implementation MUST support.\n\nName | Allowed values | Notes\n---|:---:|---\n[AsyncAPI 2.0.0 Schema Object](#schemaObject) | `application/vnd.aai.asyncapi;version=2.0.0`, `application/vnd.aai.asyncapi+json;version=2.0.0`, `application/vnd.aai.asyncapi+yaml;version=2.0.0` | This is the default when a `schemaFormat` is not provided.\n[OpenAPI 3.0.0 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject) | `application/vnd.oai.openapi;version=3.0.0`, `application/vnd.oai.openapi+json;version=3.0.0`, `application/vnd.oai.openapi+yaml;version=3.0.0` | \n[JSON Schema Draft 07](http://json-schema.org/specification-links.html#draft-7) | `application/schema+json;version=draft-07`, `application/schema+yaml;version=draft-07` | \n[Avro 1.9.0 schema](https://avro.apache.org/docs/1.9.0/spec.html#schemas) | `application/vnd.apache.avro;version=1.9.0`, `application/vnd.apache.avro+json;version=1.9.0`, `application/vnd.apache.avro+yaml;version=1.9.0` |\n\n\n##### Message Object Example\n\n```json\n{\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"contentType\": \"application/json\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"headers\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"correlationId\": {\n        \"description\": \"Correlation ID set by application\",\n        \"type\": \"string\"\n      },\n      \"applicationInstanceId\": {\n        \"description\": \"Unique identifier for a given instance of the publishing application\",\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"payload\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"user\": {\n        \"$ref\": \"#/components/schemas/userCreate\"\n      },\n      \"signup\": {\n        \"$ref\": \"#/components/schemas/signup\"\n      }\n    }\n  },\n  \"correlationId\": {\n    \"description\": \"Default Correlation ID\",\n    \"location\": \"$message.header#/correlationId\"\n  },\n  \"traits\": [\n    { \"$ref\": \"#/components/messageTraits/commonHeaders\" }\n  ]\n}\n```\n\n```yaml\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ncontentType: application/json\ntags:\n  - name: user\n  - name: signup\n  - name: register\nheaders:\n  type: object\n  properties:\n    correlationId:\n      description: Correlation ID set by application\n      type: string\n    applicationInstanceId:\n      description: Unique identifier for a given instance of the publishing application\n      type: string\npayload:\n  type: object\n  properties:\n    user:\n      $ref: \"#/components/schemas/userCreate\"\n    signup:\n      $ref: \"#/components/schemas/signup\"\ncorrelationId:\n  description: Default Correlation ID\n  location: $message.header#/correlationId\ntraits:\n  - $ref: \"#/components/messageTraits/commonHeaders\"\n```\n\nExample using Avro to define the payload:\n\n```json\n{\n  \"name\": \"UserSignup\",\n  \"title\": \"User signup\",\n  \"summary\": \"Action to sign a user up.\",\n  \"description\": \"A longer description\",\n  \"tags\": [\n    { \"name\": \"user\" },\n    { \"name\": \"signup\" },\n    { \"name\": \"register\" }\n  ],\n  \"schemaFormat\": \"application/vnd.apache.avro+json;version=1.9.0\",\n  \"payload\": {\n    \"$ref\": \"path/to/user-create.avsc#/UserCreate\"\n  }\n}\n```\n\n```yaml\nname: UserSignup\ntitle: User signup\nsummary: Action to sign a user up.\ndescription: A longer description\ntags:\n  - name: user\n  - name: signup\n  - name: register\nschemaFormat: 'application/vnd.apache.avro+yaml;version=1.9.0'\npayload:\n  $ref: 'path/to/user-create.avsc/#UserCreate'\n```\n\n\n\n\n\n\n\n#### <a name=\"messageTraitObject\"></a>Message Trait Object\n\nDescribes a trait that MAY be applied to a [Message Object](#messageObject). This object MAY contain any property from the [Message Object](#messageObject), except `payload` and `traits`.\n\nIf you're looking to apply traits to an operation, see the [Operation Trait Object](#operationTraitObject).\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"messageTraitObjectHeaders\"></a>headers | [Schema Object](#schemaObject) &#124; [Reference Object](#referenceObject) | Schema definition of the application headers. Schema MUST be of type \"object\". It **MUST NOT** define the protocol headers.\n<a name=\"messageTraitObjectCorrelationId\"></a>correlationId | [Correlation ID Object](#correlationIdObject) &#124; [Reference Object](#referenceObject) | Definition of the correlation ID used for message tracing or matching.\n<a name=\"messageTraitObjectSchemaFormat\"></a>schemaFormat | `string` | A string containing the name of the schema format/language used to define the message payload. If omitted, implementations should parse the payload as a [Schema object](#schemaObject).\n<a name=\"messageTraitObjectContentType\"></a>contentType | `string` | The content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. `application/json`). When omitted, the value MUST be the one specified on the [defaultContentType](#defaultContentTypeString) field.\n<a name=\"messageTraitObjectName\"></a>name | `string` | A machine-friendly name for the message.\n<a name=\"messageTraitObjectTitle\"></a>title | `string` | A human-friendly title for the message.\n<a name=\"messageTraitObjectSummary\"></a>summary | `string` | A short summary of what the message is about.\n<a name=\"messageTraitObjectDescription\"></a>description | `string` | A verbose explanation of the message. [CommonMark syntax](http://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"messageTraitObjectTags\"></a>tags | [Tags Object](#tagsObject) | A list of tags for API documentation control. Tags can be used for logical grouping of messages.\n<a name=\"messageTraitObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this message.\n<a name=\"messageTraitObjectBindings\"></a>bindings | Map[`string`, [Message Bindings Object](#messageBindingsObject)] | A free-form map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the message.\n<a name=\"messageTraitObjectExamples\"></a>examples | [Map[`string`, `any`]] | An array with examples of valid message objects.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Message Trait Object Example\n\n```json\n{\n  \"schemaFormat\": \"application/vnd.apache.avro+json;version=1.9.0\",\n  \"contentType\": \"application/json\"\n}\n```\n\n```yaml\nschemaFormat: 'application/vnd.apache.avro+yaml;version=1.9.0'\ncontentType: application/json\n```\n\n#### <a name=\"tagsObject\"></a>Tags Object\n\nA Tags object is a list of Tag Objects.\n\n#### <a name=\"tagObject\"></a>Tag Object\n\nAllows adding meta data to a single tag.\n\n##### Fixed Fields\nField Name | Type | Description\n---|:---:|---\n<a name=\"tagObjectName\"></a>name | `string` | **Required.** The name of the tag.\n<a name=\"tagObjectDescription\"></a>description | `string` | A short description for the tag. [CommonMark syntax](http://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"tagObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this tag.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Tag Object Example\n\n```json\n{\n\t\"name\": \"user\",\n\t\"description\": \"User-related messages\"\n}\n```\n\n```yaml\nname: user\ndescription: User-related messages\n```\n\n\n\n\n\n\n\n#### <a name=\"externalDocumentationObject\"></a>External Documentation Object\n\nAllows referencing an external resource for extended documentation.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---:|---\n<a name=\"externalDocDescription\"></a>description | `string` | A short description of the target documentation. [CommonMark syntax](http://spec.commonmark.org/) can be used for rich text representation.\n<a name=\"externalDocUrl\"></a>url | `string` | **Required.** The URL for the target documentation. Value MUST be in the format of a URL.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### External Documentation Object Example\n\n```json\n{\n  \"description\": \"Find more info here\",\n  \"url\": \"https://example.com\"\n}\n```\n\n```yaml\ndescription: Find more info here\nurl: https://example.com\n```\n\n#### <a name=\"referenceObject\"></a>Reference Object\n\nA simple object to allow referencing other components in the specification, internally and externally.\n\n\nThe Reference Object is defined by [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and follows the same structure, behavior and rules. A JSON Reference SHALL only be used to refer to a schema that is formatted in either JSON or YAML. In the case of a YAML-formatted Schema, the JSON Reference SHALL be applied to the JSON representation of that schema. The JSON representation SHALL be made by applying the conversion described [here](#format).\n\nFor this specification, reference resolution is done as defined by the JSON Reference specification and not by the JSON Schema specification.\n\n##### Fixed Fields\nField Name | Type | Description\n---|:---:|---\n<a name=\"referenceRef\"></a>$ref | `string` | **Required.** The reference string.\n\nThis object cannot be extended with additional properties and any properties added SHALL be ignored.\n\n##### Reference Object Example\n\n```json\n{\n  \"$ref\": \"#/components/schemas/Pet\"\n}\n```\n\n```yaml\n  $ref: '#/components/schemas/Pet'\n```\n\n#### <a name=\"componentsObject\"></a>Components Object\n\nHolds a set of reusable objects for different aspects of the AsyncAPI specification.\nAll objects defined within the components object will have no effect on the API unless they are explicitly referenced from properties outside the components object.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---|---\n<a name=\"componentsSchemas\"></a> schemas | Map[`string`, [Schema Object](#schemaObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Schema Objects](#schemaObject).\n<a name=\"componentsMessages\"></a> messages | Map[`string`, [Message Object](#messageObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Message Objects](#messageObject).\n<a name=\"componentsSecuritySchemes\"></a> securitySchemes| Map[`string`, [Security Scheme Object](#securitySchemeObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Security Scheme Objects](#securitySchemeObject).\n<a name=\"componentsParameters\"></a> parameters | Map[`string`, [Parameter Object](#parameterObject) \\| [Reference Object](#referenceObject)] | An object to hold reusable [Parameter Objects](#parameterObject).\n<a name=\"componentsCorrelationIDs\"></a> correlationIds | Map[`string`, [Correlation ID Object](#correlationIdObject)] | An object to hold reusable [Correlation ID Objects](#correlationIdObject).\n<a name=\"componentsOperationTraits\"></a> operationTraits | Map[`string`, [Operation Trait Object](#operationTraitObject)]  | An object to hold reusable [Operation Trait Objects](#operationTraitObject).\n<a name=\"componentsMessageTraits\"></a> messageTraits | Map[`string`, [Message Trait Object](#messageTraitObject)]  | An object to hold reusable [Message Trait Objects](#messageTraitObject).\n<a name=\"componentsServerBindings\"></a> serverBindings | Map[`string`, [Server Binding Object](#serverBindingsObject)]  | An object to hold reusable [Server Binding Objects](#serverBindingsObject).\n<a name=\"componentsChannelBindings\"></a> channelBindings | Map[`string`, [Channel Binding Object](#channelBindingsObject)]  | An object to hold reusable [Channel Binding Objects](#channelBindingsObject).\n<a name=\"componentsOperationBindings\"></a> operationBindings | Map[`string`, [Operation Binding Object](#operationBindingsObject)]  | An object to hold reusable [Operation Binding Objects](#operationBindingsObject).\n<a name=\"componentsMessageBindings\"></a> messageBindings | Map[`string`, [Message Binding Object](#messageBindingsObject)]  | An object to hold reusable [Message Binding Objects](#messageBindingsObject).\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\nAll the fixed fields declared above are objects that MUST use keys that match the regular expression: `^[a-zA-Z0-9\\.\\-_]+$`.\n\nField Name Examples:\n\n```\nUser\nUser_1\nUser_Name\nuser-name\nmy.org.User\n```\n\n##### Components Object Example\n\n```json\n\"components\": {\n  \"schemas\": {\n    \"Category\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"Tag\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  },\n  \"messages\": {\n    \"userSignUp\": {\n      \"summary\": \"Action to sign a user up.\",\n      \"description\": \"Multiline description of what this action does.\\nHere you have another line.\\n\",\n      \"tags\": [\n        {\n          \"name\": \"user\"\n        },\n        {\n          \"name\": \"signup\"\n        }\n      ],\n      \"headers\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"applicationInstanceId\": {\n            \"description\": \"Unique identifier for a given instance of the publishing application\",\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"payload\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"user\": {\n            \"$ref\": \"#/components/schemas/userCreate\"\n          },\n          \"signup\": {\n            \"$ref\": \"#/components/schemas/signup\"\n          }\n        }\n      }\n    }\n  },\n  \"parameters\": {\n    \"userId\": {\n      \"name\": \"userId\",\n      \"description\": \"Id of the user.\",\n      \"schema\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"correlationIds\": {\n    \"default\": {\n      \"description\": \"Default Correlation ID\",\n      \"location\": \"$message.header#/correlationId\"\n    }\n  },\n  \"messageTraits\": {\n    \"commonHeaders\": {\n      \"headers\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"my-app-header\": {\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"maximum\": 100\n          }\n        }\n      }\n    }\n  }\n}\n```\n\n```yaml\ncomponents:\n  schemas:\n    Category:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n    Tag:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n  messages:\n    userSignUp:\n      summary: Action to sign a user up.\n      description: |\n        Multiline description of what this action does.\n        Here you have another line.\n      tags:\n        - name: user\n        - name: signup\n      headers:\n        type: object\n        properties:\n          applicationInstanceId:\n            description: Unique identifier for a given instance of the publishing application\n            type: string\n      payload:\n        type: object\n        properties:\n          user:\n            $ref: \"#/components/schemas/userCreate\"\n          signup:\n            $ref: \"#/components/schemas/signup\"\n  parameters:\n    userId:\n    - name: userId\n      description: Id of the user.\n      schema:\n        type: string\n  correlationIds:\n    default:\n      description: Default Correlation ID\n      location: $message.header#/correlationId\n  messageTraits:\n    commonHeaders:\n      headers:\n        type: object\n        properties:\n          my-app-header:\n            type: integer\n            minimum: 0\n            maximum: 100\n```\n\n#### <a name=\"schemaObject\"></a>Schema Object\n\nThe Schema Object allows the definition of input and output data types.\nThese types can be objects, but also primitives and arrays.\nThis object is a superset of the [JSON Schema Specification Draft 07](http://json-schema.org/).\n\nFurther information about the properties can be found in [JSON Schema Core](https://tools.ietf.org/html/draft-handrews-json-schema-01) and [JSON Schema Validation](https://tools.ietf.org/html/draft-handrews-json-schema-validation-01).\nUnless stated otherwise, the property definitions follow the JSON Schema specification as referenced here.\n\n##### Properties\n\nThe AsyncAPI Schema Object is a JSON Schema vocabulary which extends JSON Schema Core and Validation vocabularies. As such, any keyword available for those vocabularies is by definition available in AsyncAPI, and will work the exact same way, including but not limited to:\n\n- title\n- type\n- required\n- multipleOf\n- maximum\n- exclusiveMaximum\n- minimum\n- exclusiveMinimum\n- maxLength\n- minLength\n- pattern (This string SHOULD be a valid regular expression, according to the [ECMA 262 regular expression](https://www.ecma-international.org/ecma-262/5.1/#sec-7.8.5) dialect)\n- maxItems\n- minItems\n- uniqueItems\n- maxProperties\n- minProperties\n- enum\n- const\n- examples\n- if / then / else\n- readOnly\n- writeOnly\n- properties\n- patternProperties\n- additionalProperties\n- additionalItems\n- items\n- propertyNames\n- contains\n- allOf\n- oneOf\n- anyOf\n- not\n\nThe following properties are taken from the JSON Schema definition but their definitions were adjusted to the AsyncAPI Specification.\n\n- description - [CommonMark syntax](http://spec.commonmark.org/) can be used for rich text representation.\n- format - See [Data Type Formats](#dataTypeFormat) for further details. While relying on JSON Schema's defined formats, the AsyncAPI Specification offers a few additional predefined formats.\n- default - The default value represents what would be assumed by the consumer of the input as the value of the schema if one is not provided. Unlike JSON Schema, the value MUST conform to the defined type for the Schema Object defined at the same level. For example, of `type` is `string`, then `default` can be `\"foo\"` but cannot be `1`.\n\nAlternatively, any time a Schema Object can be used, a [Reference Object](#referenceObject) can be used in its place. This allows referencing definitions in place of defining them inline.\n\nIn addition to the JSON Schema fields, the following AsyncAPI vocabulary fields MAY be used for further schema documentation:\n\n##### Fixed Fields\nField Name | Type | Description\n---|:---:|---\n<a name=\"schemaObjectDiscriminator\"></a>discriminator | `string` | Adds support for polymorphism. The discriminator is the schema property name that is used to differentiate between other schema that inherit this schema. The property name used MUST be defined at this schema and it MUST be in the `required` property list. When used, the value MUST be the name of this schema or any schema that inherits it. See [Composition and Inheritance](#schemaComposition) for more details.\n<a name=\"schemaObjectExternalDocs\"></a>externalDocs | [External Documentation Object](#externalDocumentationObject) | Additional external documentation for this schema.\n<a name=\"schemaObjectDeprecated\"></a> deprecated | `boolean` | Specifies that a schema is deprecated and SHOULD be transitioned out of usage. Default value is `false`.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n###### <a name=\"schemaComposition\"></a>Composition and Inheritance (Polymorphism)\n\nThe AsyncAPI Specification allows combining and extending model definitions using the `allOf` property of JSON Schema, in effect offering model composition.\n`allOf` takes in an array of object definitions that are validated *independently* but together compose a single object.\n\nWhile composition offers model extensibility, it does not imply a hierarchy between the models.\nTo support polymorphism, AsyncAPI Specification adds the support of the `discriminator` field.\nWhen used, the `discriminator` will be the name of the property used to decide which schema definition is used to validate the structure of the model.\nAs such, the `discriminator` field MUST be a required field.\nThere are are two ways to define the value of a discriminator for an inheriting instance.\n- Use the schema's name.\n- Override the schema's name by overriding the property with a new value. If exists, this takes precedence over the schema's name.\nAs such, inline schema definitions, which do not have a given id, *cannot* be used in polymorphism.\n\n##### Schema Object Examples\n\n###### Primitive Sample\n\n```json\n{\n  \"type\": \"string\",\n  \"format\": \"email\"\n}\n```\n\n```yaml\ntype: string\nformat: email\n```\n\n###### Simple Model\n\n```json\n{\n  \"type\": \"object\",\n  \"required\": [\n    \"name\"\n  ],\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"address\": {\n      \"$ref\": \"#/components/schemas/Address\"\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"format\": \"int32\",\n      \"minimum\": 0\n    }\n  }\n}\n```\n\n```yaml\ntype: object\nrequired:\n- name\nproperties:\n  name:\n    type: string\n  address:\n    $ref: '#/components/schemas/Address'\n  age:\n    type: integer\n    format: int32\n    minimum: 0\n```\n\n###### Model with Map/Dictionary Properties\n\nFor a simple string to string mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"type\": \"string\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  type: string\n```\n\nFor a string to model mapping:\n\n```json\n{\n  \"type\": \"object\",\n  \"additionalProperties\": {\n    \"$ref\": \"#/components/schemas/ComplexModel\"\n  }\n}\n```\n\n```yaml\ntype: object\nadditionalProperties:\n  $ref: '#/components/schemas/ComplexModel'\n```\n\n###### Model with Example\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"integer\",\n      \"format\": \"int64\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ],\n  \"example\": {\n    \"name\": \"Puma\",\n    \"id\": 1\n  }\n}\n```\n\n```yaml\ntype: object\nproperties:\n  id:\n    type: integer\n    format: int64\n  name:\n    type: string\nrequired:\n- name\nexample:\n  name: Puma\n  id: 1\n```\n\n###### Models with Composition\n\n```json\n{\n  \"schemas\": {\n    \"ErrorModel\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"message\",\n        \"code\"\n      ],\n      \"properties\": {\n        \"message\": {\n          \"type\": \"string\"\n        },\n        \"code\": {\n          \"type\": \"integer\",\n          \"minimum\": 100,\n          \"maximum\": 600\n        }\n      }\n    },\n    \"ExtendedErrorModel\": {\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/ErrorModel\"\n        },\n        {\n          \"type\": \"object\",\n          \"required\": [\n            \"rootCause\"\n          ],\n          \"properties\": {\n            \"rootCause\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  ErrorModel:\n    type: object\n    required:\n    - message\n    - code\n    properties:\n      message:\n        type: string\n      code:\n        type: integer\n        minimum: 100\n        maximum: 600\n  ExtendedErrorModel:\n    allOf:\n    - $ref: '#/components/schemas/ErrorModel'\n    - type: object\n      required:\n      - rootCause\n      properties:\n        rootCause:\n          type: string\n```\n\n###### Models with Polymorphism Support\n\n```json\n{\n  \"schemas\": {\n    \"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"petType\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"petType\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"petType\"\n      ]\n    },\n    \"Cat\": {\n      \"description\": \"A representation of a cat. Note that `Cat` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"huntingSkill\": {\n              \"type\": \"string\",\n              \"description\": \"The measured skill for hunting\",\n              \"enum\": [\n                \"clueless\",\n                \"lazy\",\n                \"adventurous\",\n                \"aggressive\"\n              ]\n            }\n          },\n          \"required\": [\n            \"huntingSkill\"\n          ]\n        }\n      ]\n    },\n    \"Dog\": {\n      \"description\": \"A representation of a dog. Note that `Dog` will be used as the discriminator value.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/components/schemas/Pet\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"packSize\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"description\": \"the size of the pack the dog is from\",\n              \"minimum\": 0\n            }\n          },\n          \"required\": [\n            \"packSize\"\n          ]\n        }\n      ]\n    }\n  }\n}\n```\n\n```yaml\nschemas:\n  Pet:\n    type: object\n    discriminator: petType\n    properties:\n      name:\n        type: string\n      petType:\n        type: string\n    required:\n    - name\n    - petType\n  Cat:  ## \"Cat\" will be used as the discriminator value\n    description: A representation of a cat\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        huntingSkill:\n          type: string\n          description: The measured skill for hunting\n          enum:\n          - clueless\n          - lazy\n          - adventurous\n          - aggressive\n      required:\n      - huntingSkill\n  Dog:  ## \"Dog\" will be used as the discriminator value\n    description: A representation of a dog\n    allOf:\n    - $ref: '#/components/schemas/Pet'\n    - type: object\n      properties:\n        packSize:\n          type: integer\n          format: int32\n          description: the size of the pack the dog is from\n          minimum: 0\n      required:\n      - packSize\n```\n\n\n\n\n\n#### <a name=\"securitySchemeObject\"></a>Security Scheme Object\n\nDefines a security scheme that can be used by the operations. Supported schemes are:\n\n* User/Password.\n* API key (either as user or as password).\n* X.509 certificate.\n* End-to-end encryption (either symmetric or asymmetric).\n* HTTP authentication.\n* HTTP API key.\n* OAuth2's common flows (Implicit, Resource Owner Protected Credentials, Client Credentials and Authorization Code) as defined in [RFC6749](https://tools.ietf.org/html/rfc6749).\n* [OpenID Connect Discovery](https://tools.ietf.org/html/draft-ietf-oauth-discovery-06).\n\n##### Fixed Fields\nField Name | Type | Applies To | Description\n---|:---:|---|---\n<a name=\"securitySchemeObjectType\"></a>type | `string` | Any | **REQUIRED**. The type of the security scheme. Valid values are `\"userPassword\"`, `\"apiKey\"`, `\"X509\"`, `\"symmetricEncryption\"`, `\"asymmetricEncryption\"`, `\"httpApiKey\"`, `\"http\"`, `oauth2`, and `openIdConnect`.\n<a name=\"securitySchemeObjectDescription\"></a>description | `string` | Any | A short description for security scheme. [CommonMark syntax](http://spec.commonmark.org/) MAY be used for rich text representation.\n<a name=\"securitySchemeObjectName\"></a>name | `string` | `httpApiKey` | **REQUIRED**. The name of the header, query or cookie parameter to be used.\n<a name=\"securitySchemeObjectIn\"></a>in | `string` | `apiKey` \\| `httpApiKey` | **REQUIRED**. The location of the API key. Valid values are `\"user\"` and `\"password\"` for `apiKey` and `\"query\"`, `\"header\"` or `\"cookie\"` for `httpApiKey`.\n<a name=\"securitySchemeObjectScheme\"></a>scheme | `string` | `http` | **REQUIRED**. The name of the HTTP Authorization scheme to be used in the [Authorization header as defined in RFC7235](https://tools.ietf.org/html/rfc7235#section-5.1).\n<a name=\"securitySchemeObjectBearerFormat\"></a>bearerFormat | `string` | `http` (`\"bearer\"`) | A hint to the client to identify how the bearer token is formatted.  Bearer tokens are usually generated by an authorization server, so this information is primarily for documentation purposes.\n<a name=\"securitySchemeFlows\"></a>flows | [OAuth Flows Object](#oauthFlowsObject) | `oauth2` | **REQUIRED**. An object containing configuration information for the flow types supported.\n<a name=\"securitySchemeOpenIdConnectUrl\"></a>openIdConnectUrl | `string` | `openIdConnect` | **REQUIRED**. OpenId Connect URL to discover OAuth2 configuration values. This MUST be in the form of a URL.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n##### Security Scheme Object Example\n\n###### User/Password Authentication Sample\n\n```json\n{\n  \"type\": \"userPassword\"\n}\n```\n\n```yaml\ntype: userPassword\n```\n\n###### API Key Authentication Sample\n\n```json\n{\n  \"type\": \"apiKey\",\n  \"in\": \"user\"\n}\n```\n\n```yaml\ntype: apiKey,\nin: user\n```\n\n###### X.509 Authentication Sample\n\n```json\n{\n  \"type\": \"X509\"\n}\n```\n\n```yaml\ntype: X509\n```\n\n###### End-to-end Encryption Authentication Sample\n\n```json\n{\n  \"type\": \"symmetricEncryption\"\n}\n```\n\n```yaml\ntype: symmetricEncryption\n```\n\n###### Basic Authentication Sample\n\n```json\n{\n  \"type\": \"http\",\n  \"scheme\": \"basic\"\n}\n```\n\n```yaml\ntype: http\nscheme: basic\n```\n\n###### API Key Sample\n\n```json\n{\n  \"type\": \"httpApiKey\",\n  \"name\": \"api_key\",\n  \"in\": \"header\"\n}\n```\n\n```yaml\ntype: httpApiKey\nname: api_key\nin: header\n```\n\n###### JWT Bearer Sample\n\n```json\n{\n  \"type\": \"http\",\n  \"scheme\": \"bearer\",\n  \"bearerFormat\": \"JWT\",\n}\n```\n\n```yaml\ntype: http\nscheme: bearer\nbearerFormat: JWT\n```\n\n###### Implicit OAuth2 Sample\n\n```json\n{\n  \"type\": \"oauth2\",\n  \"flows\": {\n    \"implicit\": {\n      \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n      \"scopes\": {\n        \"write:pets\": \"modify pets in your account\",\n        \"read:pets\": \"read your pets\"\n      }\n    }\n  }\n}\n```\n\n```yaml\ntype: oauth2\nflows:\n  implicit:\n    authorizationUrl: https://example.com/api/oauth/dialog\n    scopes:\n      write:pets: modify pets in your account\n      read:pets: read your pets\n```\n\n#### <a name=\"oauthFlowsObject\"></a>OAuth Flows Object\n\nAllows configuration of the supported OAuth Flows.\n\n##### Fixed Fields\nField Name | Type | Description\n---|:---:|---\n<a name=\"oauthFlowsImplicit\"></a>implicit| [OAuth Flow Object](#oauthFlowObject) | Configuration for the OAuth Implicit flow\n<a name=\"oauthFlowsPassword\"></a>password| [OAuth Flow Object](#oauthFlowObject) | Configuration for the OAuth Resource Owner Protected Credentials flow\n<a name=\"oauthFlowsClientCredentials\"></a>clientCredentials| [OAuth Flow Object](#oauthFlowObject) | Configuration for the OAuth Client Credentials flow.\n<a name=\"oauthFlowsAuthorizationCode\"></a>authorizationCode| [OAuth Flow Object](#oauthFlowObject) | Configuration for the OAuth Authorization Code flow.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n#### <a name=\"oauthFlowObject\"></a>OAuth Flow Object\n\nConfiguration details for a supported OAuth Flow\n\n##### Fixed Fields\nField Name | Type | Applies To | Description\n---|:---:|---|---\n<a name=\"oauthFlowAuthorizationUrl\"></a>authorizationUrl | `string` | `oauth2` (`\"implicit\"`, `\"authorizationCode\"`) | **REQUIRED**. The authorization URL to be used for this flow. This MUST be in the form of a URL.\n<a name=\"oauthFlowTokenUrl\"></a>tokenUrl | `string` | `oauth2` (`\"password\"`, `\"clientCredentials\"`, `\"authorizationCode\"`) | **REQUIRED**. The token URL to be used for this flow. This MUST be in the form of a URL.\n<a name=\"oauthFlowRefreshUrl\"></a>refreshUrl | `string` | `oauth2` | The URL to be used for obtaining refresh tokens. This MUST be in the form of a URL.\n<a name=\"oauthFlowScopes\"></a>scopes | Map[`string`, `string`] | `oauth2` | **REQUIRED**. The available scopes for the OAuth2 security scheme. A map between the scope name and a short description for it.\n\nThis object MAY be extended with [Specification Extensions](#specificationExtensions).\n\n##### OAuth Flow Object Examples\n\n```JSON\n{\n  \"type\": \"oauth2\",\n  \"flows\": {\n    \"implicit\": {\n      \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n      \"scopes\": {\n        \"write:pets\": \"modify pets in your account\",\n        \"read:pets\": \"read your pets\"\n      }\n    },\n    \"authorizationCode\": {\n      \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n      \"tokenUrl\": \"https://example.com/api/oauth/token\",\n      \"scopes\": {\n        \"write:pets\": \"modify pets in your account\",\n        \"read:pets\": \"read your pets\"\n      }\n    }\n  }\n}\n```\n\n```YAML\ntype: oauth2\nflows:\n  implicit:\n    authorizationUrl: https://example.com/api/oauth/dialog\n    scopes:\n      write:pets: modify pets in your account\n      read:pets: read your pets\n  authorizationCode:\n    authorizationUrl: https://example.com/api/oauth/dialog\n    tokenUrl: https://example.com/api/oauth/token\n    scopes:\n      write:pets: modify pets in your account\n      read:pets: read your pets\n```\n\n#### <a name=\"securityRequirementObject\"></a>Security Requirement Object\n\nLists the required security schemes to execute this operation.\nThe name used for each property MUST correspond to a security scheme declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject).\n\nWhen a list of Security Requirement Objects is defined on a [Server object](#serverObject), only one of the Security Requirement Objects in the list needs to be satisfied to authorize the connection.\n\n##### Patterned Fields\n\nField Pattern | Type | Description\n---|:---:|---\n<a name=\"securityRequirementsName\"></a>{name} | [`string`] | Each name MUST correspond to a security scheme which is declared in the [Security Schemes](#componentsSecuritySchemes) under the [Components Object](#componentsObject). If the security scheme is of type `\"oauth2\"` or `\"openIdConnect\"`, then the value is a list of scope names required for the execution. For other security scheme types, the array MUST be empty.\n\n##### Security Requirement Object Examples\n\n###### User/Password Security Requirement\n\n```json\n{\n  \"user_pass\": []\n}\n```\n\n```yaml\nuser_pass: []\n```\n\n###### API Key Security Requirement\n\n```json\n{\n  \"api_key\": []\n}\n```\n\n```yaml\napi_key: []\n```\n\n###### OAuth2 Security Requirement\n\n```json\n{\n  \"petstore_auth\": [\n    \"write:pets\",\n    \"read:pets\"\n  ]\n}\n```\n\n```yaml\npetstore_auth:\n- write:pets\n- read:pets\n```\n\n### <a name=\"correlationIdObject\"></a>Correlation ID Object\n\nAn object that specifies an identifier at design time that can used for message tracing and correlation. \n\nFor specifying and computing the location of a Correlation ID, a [runtime expression](#runtimeExpression) is used.\n\n##### Fixed Fields\n\nField Name | Type | Description\n---|:---|---\ndescription | `string` | An optional description of the identifier. [CommonMark syntax](http://spec.commonmark.org/) can be used for rich text representation.\nlocation | `string` | **REQUIRED.** A [runtime expression](#runtimeExpression) that specifies the location of the correlation ID.\n\nThis object can be extended with [Specification Extensions](#specificationExtensions).\n\n##### Examples\n\n```json\n{\n  \"description\": \"Default Correlation ID\",\n  \"location\": \"$message.header#/correlationId\"\n}\n```\n\n```yaml\ndescription: Default Correlation ID\nlocation: $message.header#/correlationId\n```\n\n### <a name=\"runtimeExpression\"></a>Runtime Expression\n\nA runtime expression allows values to be defined based on information that will be available within the message.\nThis mechanism is used by [Correlation ID Object](#correlationIdObject).\n\nThe runtime expression is defined by the following [ABNF](https://tools.ietf.org/html/rfc5234) syntax:\n\n```\n      expression = ( \"$message\" \".\" source )\n      source = ( header-reference | payload-reference )\n      header-reference = \"header.\" [\"#\" fragment]\n      payload-reference = \"payload.\" [\"#\" fragment]\n      fragment = a JSON Pointer [RFC 6901](https://tools.ietf.org/html/rfc6901)\n```\n\nThe table below provides examples of runtime expressions and examples of their use in a value:\n\n##### <a name=\"runtimeExpressionExamples\"></a>Examples\n\nSource Location | Example expression  | Notes\n---|:---|:---|\nMessage Header Property | `$message.header#/MQMD/CorrelId` | Correlation ID is set using the `CorrelId` value from the `MQMD` header.\nMessage Payload Property | `$message.payload#/messageId` | Correlation ID is set using the `messageId` value from the message payload.\n\nRuntime expressions preserve the type of the referenced value.\n\n### <a name=\"specificationExtensions\"></a>Specification Extensions\n\nWhile the AsyncAPI Specification tries to accommodate most use cases, additional data can be added to extend the specification at certain points.\n\nThe extensions properties are implemented as patterned fields that are always prefixed by `\"x-\"`.\n\nField Pattern | Type | Description\n---|:---:|---\n<a name=\"infoExtensions\"></a>`^x-[\\w\\d\\-\\_]+$` | Any | Allows extensions to the AsyncAPI Schema. The field name MUST begin with `x-`, for example, `x-internal-id`. The value can be `null`, a primitive, an array or an object. Can have any valid JSON format value.\n\nThe extensions may or may not be supported by the available tooling, but those may be extended as well to add requested support (if tools are internal or open-sourced).\n\n### <a name=\"dataTypeFormat\"></a>Data Type Formats\n\nPrimitives have an optional modifier property: `format`.\nThe AsyncAPI specification uses several known formats to more finely define the data type being used.\nHowever, the `format` property is an open `string`-valued property, and can have any value to support documentation needs.\nFormats such as `\"email\"`, `\"uuid\"`, etc., can be used even though they are not defined by this specification.\nTypes that are not accompanied by a `format` property follow their definition from the JSON Schema.\nTools that do not recognize a specific `format` MAY default back to the `type` alone, as if the `format` was not specified.\n\nThe formats defined by the AsyncAPI Specification are:\n\n\nCommon Name | `type` | [`format`](#dataTypeFormat) | Comments\n----------- | ------ | -------- | --------\ninteger | `integer` | `int32` | signed 32 bits\nlong | `integer` | `int64` | signed 64 bits\nfloat | `number` | `float` | |\ndouble | `number` | `double` | |\nstring | `string` | | |\nbyte | `string` | `byte` | base64 encoded characters\nbinary | `string` | `binary` | any sequence of octets\nboolean | `boolean` | | |\ndate | `string` | `date` | As defined by `full-date` - [RFC3339](http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14)\ndateTime | `string` | `date-time` | As defined by `date-time` - [RFC3339](http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14)\npassword | `string` | `password` | Used to hint UIs the input needs to be obscured.\n\n---\n\n<DocsButton\n  suggestions={[\n    {\n      href: '/docs/specifications/v2.1.0',\n      title: 'Release 2.1.0',\n      type:'back',\n    },\n    {\n      href: '/docs/community/tooling',\n      title: 'Community - Tooling',\n      type:'next',\n    }\n  ]}\n/>",
              "toc": [
                {
                  "content": "AsyncAPI Specification",
                  "slug": "asyncapi-specification",
                  "lvl": 1,
                  "i": 0,
                  "seen": 0
                },
                {
                  "content": "Disclaimer",
                  "slug": "disclaimer",
                  "lvl": 4,
                  "i": 1,
                  "seen": 0
                },
                {
                  "content": "Version 2.0.0",
                  "slug": "version-200",
                  "lvl": 4,
                  "i": 2,
                  "seen": 0
                },
                {
                  "content": "Introduction",
                  "slug": "introduction",
                  "lvl": 2,
                  "i": 3,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitions\"/>Definitions",
                  "slug": "definitions",
                  "lvl": 2,
                  "i": 4,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsApplication\"></a>Application",
                  "slug": "definitionsApplication",
                  "lvl": 4,
                  "i": 5,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsProducer\"></a>Producer",
                  "slug": "definitionsProducer",
                  "lvl": 4,
                  "i": 6,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsConsumer\"></a>Consumer",
                  "slug": "definitionsConsumer",
                  "lvl": 4,
                  "i": 7,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsMessage\"></a>Message",
                  "slug": "definitionsMessage",
                  "lvl": 4,
                  "i": 8,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsChannel\"></a>Channel",
                  "slug": "definitionsChannel",
                  "lvl": 4,
                  "i": 9,
                  "seen": 0
                },
                {
                  "content": "<a name=\"definitionsProtocol\"></a>Protocol",
                  "slug": "definitionsProtocol",
                  "lvl": 4,
                  "i": 10,
                  "seen": 0
                },
                {
                  "content": "<a name=\"specification\"></a>Specification",
                  "slug": "specification",
                  "lvl": 2,
                  "i": 11,
                  "seen": 0
                },
                {
                  "content": "<a name=\"format\"></a>Format",
                  "slug": "format",
                  "lvl": 3,
                  "i": 12,
                  "seen": 0
                },
                {
                  "content": "<a name=\"file-structure\"></a>File Structure",
                  "slug": "file-structure",
                  "lvl": 3,
                  "i": 13,
                  "seen": 0
                },
                {
                  "content": "<a name=\"schema\"></a>Schema",
                  "slug": "schema",
                  "lvl": 3,
                  "i": 14,
                  "seen": 0
                },
                {
                  "content": "<a name=\"A2SObject\"></a>AsyncAPI Object",
                  "slug": "A2SObject",
                  "lvl": 4,
                  "i": 15,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 16,
                  "seen": 0
                },
                {
                  "content": "<a name=\"A2SVersionString\"></a>AsyncAPI Version String",
                  "slug": "A2SVersionString",
                  "lvl": 4,
                  "i": 17,
                  "seen": 0
                },
                {
                  "content": "<a name=\"A2SIdString\"></a>Identifier",
                  "slug": "A2SIdString",
                  "lvl": 4,
                  "i": 18,
                  "seen": 0
                },
                {
                  "content": "Examples",
                  "slug": "examples",
                  "lvl": 6,
                  "i": 19,
                  "seen": 0
                },
                {
                  "content": "<a name=\"infoObject\"></a>Info Object",
                  "slug": "infoObject",
                  "lvl": 4,
                  "i": 20,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 21,
                  "seen": 1
                },
                {
                  "content": "Info Object Example:",
                  "slug": "info-object-example",
                  "lvl": 5,
                  "i": 22,
                  "seen": 0
                },
                {
                  "content": "<a name=\"contactObject\"></a>Contact Object",
                  "slug": "contactObject",
                  "lvl": 4,
                  "i": 23,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 24,
                  "seen": 2
                },
                {
                  "content": "Contact Object Example:",
                  "slug": "contact-object-example",
                  "lvl": 5,
                  "i": 25,
                  "seen": 0
                },
                {
                  "content": "<a name=\"licenseObject\"></a>License Object",
                  "slug": "licenseObject",
                  "lvl": 4,
                  "i": 26,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 27,
                  "seen": 3
                },
                {
                  "content": "License Object Example:",
                  "slug": "license-object-example",
                  "lvl": 5,
                  "i": 28,
                  "seen": 0
                },
                {
                  "content": "<a name=\"serversObject\"></a>Servers Object",
                  "slug": "serversObject",
                  "lvl": 4,
                  "i": 29,
                  "seen": 0
                },
                {
                  "content": "Patterned Fields",
                  "slug": "patterned-fields",
                  "lvl": 5,
                  "i": 30,
                  "seen": 0
                },
                {
                  "content": "Servers Object Example",
                  "slug": "servers-object-example",
                  "lvl": 5,
                  "i": 31,
                  "seen": 0
                },
                {
                  "content": "<a name=\"serverObject\"></a>Server Object",
                  "slug": "serverObject",
                  "lvl": 4,
                  "i": 32,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 33,
                  "seen": 4
                },
                {
                  "content": "Server Object Example",
                  "slug": "server-object-example",
                  "lvl": 5,
                  "i": 34,
                  "seen": 0
                },
                {
                  "content": "<a name=\"serverVariableObject\"></a>Server Variable Object",
                  "slug": "serverVariableObject",
                  "lvl": 4,
                  "i": 35,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 36,
                  "seen": 5
                },
                {
                  "content": "<a name=\"defaultContentTypeString\"></a>Default Content Type",
                  "slug": "defaultContentTypeString",
                  "lvl": 4,
                  "i": 37,
                  "seen": 0
                },
                {
                  "content": "Default Content Type Example",
                  "slug": "default-content-type-example",
                  "lvl": 5,
                  "i": 38,
                  "seen": 0
                },
                {
                  "content": "<a name=\"channelsObject\"></a>Channels Object",
                  "slug": "channelsObject",
                  "lvl": 4,
                  "i": 39,
                  "seen": 0
                },
                {
                  "content": "Patterned Fields",
                  "slug": "patterned-fields",
                  "lvl": 5,
                  "i": 40,
                  "seen": 1
                },
                {
                  "content": "Channels Object Example",
                  "slug": "channels-object-example",
                  "lvl": 5,
                  "i": 41,
                  "seen": 0
                },
                {
                  "content": "<a name=\"channelItemObject\"></a>Channel Item Object",
                  "slug": "channelItemObject",
                  "lvl": 4,
                  "i": 42,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 43,
                  "seen": 6
                },
                {
                  "content": "Channel Item Object Example",
                  "slug": "channel-item-object-example",
                  "lvl": 5,
                  "i": 44,
                  "seen": 0
                },
                {
                  "content": "<a name=\"operationObject\"></a>Operation Object",
                  "slug": "operationObject",
                  "lvl": 4,
                  "i": 45,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 46,
                  "seen": 7
                },
                {
                  "content": "Operation Object Example",
                  "slug": "operation-object-example",
                  "lvl": 5,
                  "i": 47,
                  "seen": 0
                },
                {
                  "content": "<a name=\"operationTraitObject\"></a>Operation Trait Object",
                  "slug": "operationTraitObject",
                  "lvl": 4,
                  "i": 48,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 49,
                  "seen": 8
                },
                {
                  "content": "Operation Trait Object Example",
                  "slug": "operation-trait-object-example",
                  "lvl": 5,
                  "i": 50,
                  "seen": 0
                },
                {
                  "content": "<a name=\"parametersObject\"></a>Parameters Object",
                  "slug": "parametersObject",
                  "lvl": 4,
                  "i": 51,
                  "seen": 0
                },
                {
                  "content": "Patterned Fields",
                  "slug": "patterned-fields",
                  "lvl": 5,
                  "i": 52,
                  "seen": 2
                },
                {
                  "content": "Parameters Object Example",
                  "slug": "parameters-object-example",
                  "lvl": 5,
                  "i": 53,
                  "seen": 0
                },
                {
                  "content": "<a name=\"parameterObject\"></a>Parameter Object",
                  "slug": "parameterObject",
                  "lvl": 4,
                  "i": 54,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 55,
                  "seen": 9
                },
                {
                  "content": "Parameter Object Example",
                  "slug": "parameter-object-example",
                  "lvl": 5,
                  "i": 56,
                  "seen": 0
                },
                {
                  "content": "<a name=\"serverBindingsObject\"></a>Server Bindings Object",
                  "slug": "serverBindingsObject",
                  "lvl": 4,
                  "i": 57,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 58,
                  "seen": 10
                },
                {
                  "content": "<a name=\"channelBindingsObject\"></a>Channel Bindings Object",
                  "slug": "channelBindingsObject",
                  "lvl": 4,
                  "i": 59,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 60,
                  "seen": 11
                },
                {
                  "content": "<a name=\"operationBindingsObject\"></a>Operation Bindings Object",
                  "slug": "operationBindingsObject",
                  "lvl": 4,
                  "i": 61,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 62,
                  "seen": 12
                },
                {
                  "content": "<a name=\"messageBindingsObject\"></a>Message Bindings Object",
                  "slug": "messageBindingsObject",
                  "lvl": 4,
                  "i": 63,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 64,
                  "seen": 13
                },
                {
                  "content": "<a name=\"messageObject\"></a>Message Object",
                  "slug": "messageObject",
                  "lvl": 4,
                  "i": 65,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 66,
                  "seen": 14
                },
                {
                  "content": "<a name=\"messageObjectSchemaFormatTable\"></a>Schema formats table",
                  "slug": "messageObjectSchemaFormatTable",
                  "lvl": 5,
                  "i": 67,
                  "seen": 0
                },
                {
                  "content": "Message Object Example",
                  "slug": "message-object-example",
                  "lvl": 5,
                  "i": 68,
                  "seen": 0
                },
                {
                  "content": "<a name=\"messageTraitObject\"></a>Message Trait Object",
                  "slug": "messageTraitObject",
                  "lvl": 4,
                  "i": 69,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 70,
                  "seen": 15
                },
                {
                  "content": "Message Trait Object Example",
                  "slug": "message-trait-object-example",
                  "lvl": 5,
                  "i": 71,
                  "seen": 0
                },
                {
                  "content": "<a name=\"tagsObject\"></a>Tags Object",
                  "slug": "tagsObject",
                  "lvl": 4,
                  "i": 72,
                  "seen": 0
                },
                {
                  "content": "<a name=\"tagObject\"></a>Tag Object",
                  "slug": "tagObject",
                  "lvl": 4,
                  "i": 73,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 74,
                  "seen": 16
                },
                {
                  "content": "Tag Object Example",
                  "slug": "tag-object-example",
                  "lvl": 5,
                  "i": 75,
                  "seen": 0
                },
                {
                  "content": "<a name=\"externalDocumentationObject\"></a>External Documentation Object",
                  "slug": "externalDocumentationObject",
                  "lvl": 4,
                  "i": 76,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 77,
                  "seen": 17
                },
                {
                  "content": "External Documentation Object Example",
                  "slug": "external-documentation-object-example",
                  "lvl": 5,
                  "i": 78,
                  "seen": 0
                },
                {
                  "content": "<a name=\"referenceObject\"></a>Reference Object",
                  "slug": "referenceObject",
                  "lvl": 4,
                  "i": 79,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 80,
                  "seen": 18
                },
                {
                  "content": "Reference Object Example",
                  "slug": "reference-object-example",
                  "lvl": 5,
                  "i": 81,
                  "seen": 0
                },
                {
                  "content": "<a name=\"componentsObject\"></a>Components Object",
                  "slug": "componentsObject",
                  "lvl": 4,
                  "i": 82,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 83,
                  "seen": 19
                },
                {
                  "content": "Components Object Example",
                  "slug": "components-object-example",
                  "lvl": 5,
                  "i": 84,
                  "seen": 0
                },
                {
                  "content": "<a name=\"schemaObject\"></a>Schema Object",
                  "slug": "schemaObject",
                  "lvl": 4,
                  "i": 85,
                  "seen": 0
                },
                {
                  "content": "Properties",
                  "slug": "properties",
                  "lvl": 5,
                  "i": 86,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 87,
                  "seen": 20
                },
                {
                  "content": "<a name=\"schemaComposition\"></a>Composition and Inheritance (Polymorphism)",
                  "slug": "schemaComposition",
                  "lvl": 6,
                  "i": 88,
                  "seen": 0
                },
                {
                  "content": "Schema Object Examples",
                  "slug": "schema-object-examples",
                  "lvl": 5,
                  "i": 89,
                  "seen": 0
                },
                {
                  "content": "Primitive Sample",
                  "slug": "primitive-sample",
                  "lvl": 6,
                  "i": 90,
                  "seen": 0
                },
                {
                  "content": "Simple Model",
                  "slug": "simple-model",
                  "lvl": 6,
                  "i": 91,
                  "seen": 0
                },
                {
                  "content": "Model with Map/Dictionary Properties",
                  "slug": "model-with-mapdictionary-properties",
                  "lvl": 6,
                  "i": 92,
                  "seen": 0
                },
                {
                  "content": "Model with Example",
                  "slug": "model-with-example",
                  "lvl": 6,
                  "i": 93,
                  "seen": 0
                },
                {
                  "content": "Models with Composition",
                  "slug": "models-with-composition",
                  "lvl": 6,
                  "i": 94,
                  "seen": 0
                },
                {
                  "content": "Models with Polymorphism Support",
                  "slug": "models-with-polymorphism-support",
                  "lvl": 6,
                  "i": 95,
                  "seen": 0
                },
                {
                  "content": "<a name=\"securitySchemeObject\"></a>Security Scheme Object",
                  "slug": "securitySchemeObject",
                  "lvl": 4,
                  "i": 96,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 97,
                  "seen": 21
                },
                {
                  "content": "Security Scheme Object Example",
                  "slug": "security-scheme-object-example",
                  "lvl": 5,
                  "i": 98,
                  "seen": 0
                },
                {
                  "content": "User/Password Authentication Sample",
                  "slug": "userpassword-authentication-sample",
                  "lvl": 6,
                  "i": 99,
                  "seen": 0
                },
                {
                  "content": "API Key Authentication Sample",
                  "slug": "api-key-authentication-sample",
                  "lvl": 6,
                  "i": 100,
                  "seen": 0
                },
                {
                  "content": "X.509 Authentication Sample",
                  "slug": "x509-authentication-sample",
                  "lvl": 6,
                  "i": 101,
                  "seen": 0
                },
                {
                  "content": "End-to-end Encryption Authentication Sample",
                  "slug": "end-to-end-encryption-authentication-sample",
                  "lvl": 6,
                  "i": 102,
                  "seen": 0
                },
                {
                  "content": "Basic Authentication Sample",
                  "slug": "basic-authentication-sample",
                  "lvl": 6,
                  "i": 103,
                  "seen": 0
                },
                {
                  "content": "API Key Sample",
                  "slug": "api-key-sample",
                  "lvl": 6,
                  "i": 104,
                  "seen": 0
                },
                {
                  "content": "JWT Bearer Sample",
                  "slug": "jwt-bearer-sample",
                  "lvl": 6,
                  "i": 105,
                  "seen": 0
                },
                {
                  "content": "Implicit OAuth2 Sample",
                  "slug": "implicit-oauth2-sample",
                  "lvl": 6,
                  "i": 106,
                  "seen": 0
                },
                {
                  "content": "<a name=\"oauthFlowsObject\"></a>OAuth Flows Object",
                  "slug": "oauthFlowsObject",
                  "lvl": 4,
                  "i": 107,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 108,
                  "seen": 22
                },
                {
                  "content": "<a name=\"oauthFlowObject\"></a>OAuth Flow Object",
                  "slug": "oauthFlowObject",
                  "lvl": 4,
                  "i": 109,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 110,
                  "seen": 23
                },
                {
                  "content": "OAuth Flow Object Examples",
                  "slug": "oauth-flow-object-examples",
                  "lvl": 5,
                  "i": 111,
                  "seen": 0
                },
                {
                  "content": "<a name=\"securityRequirementObject\"></a>Security Requirement Object",
                  "slug": "securityRequirementObject",
                  "lvl": 4,
                  "i": 112,
                  "seen": 0
                },
                {
                  "content": "Patterned Fields",
                  "slug": "patterned-fields",
                  "lvl": 5,
                  "i": 113,
                  "seen": 3
                },
                {
                  "content": "Security Requirement Object Examples",
                  "slug": "security-requirement-object-examples",
                  "lvl": 5,
                  "i": 114,
                  "seen": 0
                },
                {
                  "content": "User/Password Security Requirement",
                  "slug": "userpassword-security-requirement",
                  "lvl": 6,
                  "i": 115,
                  "seen": 0
                },
                {
                  "content": "API Key Security Requirement",
                  "slug": "api-key-security-requirement",
                  "lvl": 6,
                  "i": 116,
                  "seen": 0
                },
                {
                  "content": "OAuth2 Security Requirement",
                  "slug": "oauth2-security-requirement",
                  "lvl": 6,
                  "i": 117,
                  "seen": 0
                },
                {
                  "content": "<a name=\"correlationIdObject\"></a>Correlation ID Object",
                  "slug": "correlationIdObject",
                  "lvl": 3,
                  "i": 118,
                  "seen": 0
                },
                {
                  "content": "Fixed Fields",
                  "slug": "fixed-fields",
                  "lvl": 5,
                  "i": 119,
                  "seen": 24
                },
                {
                  "content": "Examples",
                  "slug": "examples",
                  "lvl": 5,
                  "i": 120,
                  "seen": 1
                },
                {
                  "content": "<a name=\"runtimeExpression\"></a>Runtime Expression",
                  "slug": "runtimeExpression",
                  "lvl": 3,
                  "i": 121,
                  "seen": 0
                },
                {
                  "content": "<a name=\"runtimeExpressionExamples\"></a>Examples",
                  "slug": "runtimeExpressionExamples",
                  "lvl": 5,
                  "i": 122,
                  "seen": 0
                },
                {
                  "content": "<a name=\"specificationExtensions\"></a>Specification Extensions",
                  "slug": "specificationExtensions",
                  "lvl": 3,
                  "i": 123,
                  "seen": 0
                },
                {
                  "content": "<a name=\"dataTypeFormat\"></a>Data Type Formats",
                  "slug": "dataTypeFormat",
                  "lvl": 3,
                  "i": 124,
                  "seen": 0
                }
              ],
              "slug": "/docs/reference/specification/v2.0.0",
              "filePath": "pages/docs/reference/specification/v2.0.0.md",
              "sectionTitle": "Specification"
            }
          ],
          "section": {
            "title": "Specification",
            "weight": 5,
            "slug": "/docs/reference/specification"
          }
        }
      ],
      "section": {
        "title": "Reference",
        "weight": 4,
        "slug": "/docs/reference"
      }
    }
  ],
  "section": {
    "title": "Welcome",
    "weight": 0,
    "slug": "/docs"
  }
}